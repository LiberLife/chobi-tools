{"version":3,"sources":["webpack:///./src/components/CButton.vue?0511","webpack:///./src/views/statistics/CorrelationChart.vue?c1ed","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./src/components/CCorrelationChart.vue","webpack:///./src/components/CCorrelationChart.vue?c30c","webpack:///./src/components/CCorrelationChart.vue?3ec0","webpack:///./src/views/statistics/CorrelationChart.vue?471c","webpack:///./src/views/statistics/CorrelationChart.vue?23fc","webpack:///./src/views/statistics/CorrelationChart.vue","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./src/components/CSelectorSample.vue?62ff","webpack:///./src/components/CSelectorSample.vue?f54e","webpack:///./src/components/CSelectorSample.vue?754d","webpack:///./src/components/CSelectorSample.vue","webpack:///./src/components/CSelectorSample.vue?5845","webpack:///./src/typescript/StatisticsCalc.ts","webpack:///./src/typescript/MathUtil.ts","webpack:///./src/components/CButton.vue?e9c0","webpack:///./src/components/CButton.vue?345e","webpack:///./src/components/CButton.vue?68ca","webpack:///./src/components/CButton.vue","webpack:///./src/views/statistics/CorrelationChart.vue?2d63"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CButton_vue_vue_type_style_index_0_id_722269f6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CButton_vue_vue_type_style_index_0_id_722269f6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","_v","attrs","icon","color","samples","dataSampleExamples","sampleIndex","dataSelectedSampleExampleIndex","on","selectSample","$event","listenOnSampleExampleSelect","domProps","value","dataTextX","change","listenInputX","dataTextY","listenInputY","buttonText","dataButtonText","clickButton","calcCorrelation","directives","name","rawName","expression","_s","dataCovariance","dataCorrelationCoefficient","chartData","dataChartData","chartOptions","dataChartOptions","linkTitle","dataLinkTitle","staticRenderFns","dataHandler","newData","oldData","chart","$data","_chart","newDatasetLabels","datasets","map","dataset","label","oldDatasetLabels","oldLabels","JSON","stringify","newLabels","length","forEach","i","oldDatasetKeys","Object","keys","newDatasetKeys","deletionKeys","filter","key","indexOf","attribute","deletionKey","data","hasOwnProperty","labels","$emit","xLabels","yLabels","update","destroy","renderChart","options","reactiveData","watch","reactiveProp","props","type","required","default","mixins","generateChart","chartId","chartType","createElement","style","styles","class","cssClasses","id","width","height","ref","String","Number","plugins","Array","_plugins","methods","addPlugin","plugin","push","generateLegend","Chart_default","a","$refs","canvas","getContext","beforeDestroy","CCorrelationChart_render","CCorrelationChart_staticRenderFns","Scatter","CCorrelationChartvue_type_script_lang_ts_CCorrelationChart","_super","CCorrelationChart","tslib_es6","prototype","mounted","vue_property_decorator","components","CCorrelationChartvue_type_script_lang_ts_","components_CCorrelationChartvue_type_script_lang_ts_","component","componentNormalizer","components_CCorrelationChart","CorrelationChartvue_type_script_lang_ts_CorrelationChart","CorrelationChart","_this","apply","arguments","dataDotColor","caption","content","dataDatasets","borderColor","backgroundColor","responsive","created","set","generateSample","sampleXs","sampleYs","sampleTextX","sampleTextY","StatisticsCalc","generateSamples","generateCorrelationalSamples","MathUtil","toFixed","join","unstandardizeSamples","randomFloat","sampleTexts","split","target","match","calcMinimum","splice","decimalPartCount_1","count","countDecimlPart","calcCovariance","calcCorrelationCoefficient","pushChartPoints","undefined","chartPoints","x","y","CSelectorSample","CStatistics","CButton","head","title","inner","CorrelationChartvue_type_script_lang_ts_","statistics_CorrelationChartvue_type_script_lang_ts_","CorrelationChart_component","__webpack_exports__","global","factory","module","exports","e","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","hsl2rgb","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lab2lch","lch2lab","lch2xyz","lch2rgb","rgb","h","s","l","r","g","b","min","Math","max","delta","v","w","c","m","k","reverseKeywords","pow","z","xyz","args","hsl","t1","t2","t3","val","sv","hsv","hi","floor","f","p","q","t","sl","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","arg","slice","call","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","getHsl","getHwb","getAlpha","hexString","rgbString","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","string","abbr","hex","rgba","per","hexAlpha","parseInt","parseFloat","scale","alpha","isNaN","hsla","hexDouble","reverseNames","num","str","toString","toUpperCase","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","clone","result","source","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","rotation","xOffset","yOffset","size","cornerRadius","rad","drawImage","beginPath","lineTo","SQRT1_2","fill","stroke","_isPointInArea","point","area","epsilon","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","toFontString","font","family","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","fontFamily","lineHeight","fontStyle","resolve","inputs","context","helpers$1","easing","interpolate","start","view","model","ease","actual","origin","c0","c1","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","configurable","enumerable","method","base","res","object","unlistenArrayEvents","stub","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","yRange","mouseY","pointStyle","element_point","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderSkipped","edge","borderSkipped","horizontal","parseBorderWidth","maxW","maxH","boundingRects","bounds","border","outer","skipX","skipY","rectangle","element_rectangle","rects","fillRect","Arc","Line","Point","Rectangle","resolve$1","computeMinSampleSize","pixels","prev","curr","isHorizontal","ticks","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","next","percent","end","hover","mode","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","_updateElementGeometry","vscale","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","minBarLength","controller","range","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controller_scatter","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","findMaxPadding","boxes","box","getPadding","boxPadding","addSizeByPosition","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getMinimumBoxSize","fitBox","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","platform_basic","acquireContext","platform_dom","platform_dom$1","freeze","getCjsExportFromNamespace","stylesheet","EXPANDO_KEY","CSS_PREFIX","CSS_SIZE_MONITOR","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","initCanvas","config","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","addEventListener","eventListenerOptions","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","fromNativeEvent","event","pos","throttled","ticking","createDiv","cls","el","document","className","createResizer","maxSize","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","unwatchForRender","remove","addResizeListener","container","maintainAspectRatio","parentNode","clientWidth","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","getElementById","releaseContext","removeAttribute","proxies","addEvent","removeEvent","implementation","core_plugins","_cacheId","register","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","reduce","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","changed","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsiveAnimationDuration","Chart","construct","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","Controller","types","configMerge","scaleMerge","core_helpers","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","isPowerOf10","toRadians","toDegrees","radians","_decimalPlaces","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","paddingTop","paddingRight","paddingBottom","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","longestText","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","colorValue","CanvasPattern","abstract","DateAdapter","formats","parse","format","diff","startOf","endOf","_create","override","members","_date","core_adapters","core_ticks","formatters","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","logarithmic","remain","valueOrDefault$9","labelsFromTicks","getPixelForGridLine","lineValue","computeTextSize","tick","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","sinRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","defaultConfig","scale_category","getLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","generateTicks","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","MIN_SPACING","stepSize","unit","maxNumSpaces","precision","rmin","rmax","spacing","ceil","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","fixedStepSize","ticksAsNumbers","defaultConfig$1","scale_linear","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","generateTicks$1","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","textSize","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","drawingArea","getIndexAngle","hLimits","vLimits","setReductions","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","scale_radialLinear","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","yCenterOffset","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","time","table","lookup","mid","i0","i1","lo","interpolate$1","skey","tkey","span","toTimestamp","input","adapter","_adapter","parser","determineStepSize","capacity","interval","milliseconds","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","ticksFromTimestamps","majorUnit","defaultConfig$4","adapters","displayFormat","displayFormats","scale_time","date","warn","timestamp","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","plugin_filler","afterDatasetsUpdate","$filler","beforeDatasetDraw","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","SQRT2","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","plugin_title","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","dataSampleIndex","listenOnSelectSample","_l","sample","innerHTML","CSelectorSamplevue_type_script_lang_ts_CSelectorSample","dataSamples","emitSelectSample","CSelectorSamplevue_type_script_lang_ts_","components_CSelectorSamplevue_type_script_lang_ts_","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CSelectorSample_vue_vue_type_style_index_0_id_684531a8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CSelectorSample_vue_vue_type_style_index_0_id_684531a8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","generateNormalRandom","mean","standardDeviation","normalRandom","random","generateCorrelationalRandom","correlationCoefficient","normalRandoms","standardizeSamples","calcStandardDeviation","calcMean","meanX","meanY","covariance","standardDeviationX","standardDeviationY","sortSamples","isBig","calcSum","calcMedian","median","sortedSamples","calcMode","pluralSamples","counts","maxCount_1","calcMaximum","calcVariance","calcKSigmaIntervals","kSigmaIntervalsCount","_1sigmaInterval","_2sigmaInterval","_3sigmaInterval","kSigmaIntervals","randomInt","standardMax","digitCount","number","decimalPartCount","decimalPart","isRealNumber","Boolean","isNaturalNumber","isNaturalNumberIncludingZero","padZero","repeat","toLocaleString","click","listenClick","CButtonvue_type_script_lang_ts_CButton","dataPosition","onValueChange","newValue","oldValue","emitClickButton","TIMEOUT","RIPPLE_ELEM","rippleWidth","offsetWidth","rippleRect","pageX","pageXOffset","pageY","pageYOffset","CButtonvue_type_script_lang_ts_","components_CButtonvue_type_script_lang_ts_","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CorrelationChart_vue_vue_type_style_index_0_id_26813714_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CorrelationChart_vue_vue_type_style_index_0_id_26813714_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"kHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAmiBE,EAAG,uECAtiB,IAAAE,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,WAAsB,CAAAN,EAAAO,GAAA,GAAAH,EAAA,OAAsBE,YAAA,QAAmB,CAAAF,EAAA,MAAWE,YAAA,SAAoB,CAAAN,EAAAQ,GAAA,QAAAJ,EAAA,KAAAJ,EAAAQ,GAAA,oCAAAJ,EAAA,KAA4EE,YAAA,QAAmB,CAAAF,EAAA,qBAA0BK,MAAA,CAAOC,KAAA,uBAAAC,MAAA,aAAiDX,EAAAQ,GAAA,0CAAAJ,EAAA,KAA2DE,YAAA,QAAmB,CAAAF,EAAA,qBAA0BK,MAAA,CAAOC,KAAA,uBAAAC,MAAA,aAAiDX,EAAAQ,GAAA,oDAAAJ,EAAA,KAAqEE,YAAA,QAAmB,CAAAF,EAAA,qBAA0BK,MAAA,CAAOC,KAAA,uBAAAC,MAAA,aAAiDX,EAAAQ,GAAA,qDAAAJ,EAAA,KAAsEE,YAAA,QAAmB,CAAAF,EAAA,qBAA0BK,MAAA,CAAOC,KAAA,YAAiBV,EAAAQ,GAAA,0DAAAJ,EAAA,OAA6EE,YAAA,oBAA+B,CAAAF,EAAA,mBAAwBK,MAAA,CAAOG,QAAAZ,EAAAa,mBAAAC,YAAAd,EAAAe,gCAAkFC,GAAA,CAAKC,aAAA,SAAAC,GAAgC,OAAAlB,EAAAmB,4BAAAD,QAAiD,GAAAd,EAAA,OAAgBE,YAAA,oBAA+B,CAAAF,EAAA,OAAYE,YAAA,mBAA8B,CAAAF,EAAA,OAAYE,YAAA,oBAA+B,CAAAN,EAAAQ,GAAA,OAAAJ,EAAA,YAA+BE,YAAA,WAAAc,SAAA,CAAiCC,MAAArB,EAAAsB,WAAsBN,GAAA,CAAKO,OAAA,SAAAL,GAA0B,OAAAlB,EAAAwB,aAAAN,SAAkCd,EAAA,OAAcE,YAAA,mBAA8B,CAAAF,EAAA,OAAYE,YAAA,oBAA+B,CAAAN,EAAAQ,GAAA,OAAAJ,EAAA,YAA+BE,YAAA,WAAAc,SAAA,CAAiCC,MAAArB,EAAAyB,WAAsBT,GAAA,CAAKO,OAAA,SAAAL,GAA0B,OAAAlB,EAAA0B,aAAAR,WAAkCd,EAAA,WAAoBK,MAAA,CAAOkB,WAAA3B,EAAA4B,gBAAgCZ,GAAA,CAAKa,YAAA,SAAAX,GAA+B,OAAAlB,EAAA8B,uBAA+B,GAAA1B,EAAA,OAAgB2B,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAAZ,MAAArB,EAAA,eAAAkC,WAAA,mBAAoF5B,YAAA,QAAqB,CAAAF,EAAA,MAAWE,YAAA,SAAoB,CAAAN,EAAAQ,GAAA,UAAAJ,EAAA,KAAAJ,EAAAQ,GAAA,WAAAJ,EAAA,MAAsDE,YAAA,8BAAyC,CAAAF,EAAA,MAAAJ,EAAAQ,GAAA,SAAAJ,EAAA,MAAAJ,EAAAQ,GAAAR,EAAAmC,GAAAnC,EAAAoC,mBAAAhC,EAAA,MAAAJ,EAAAQ,GAAA,UAAAJ,EAAA,MAAAJ,EAAAQ,GAAAR,EAAAmC,GAAAnC,EAAAqC,iCAAAjC,EAAA,KAAuKE,YAAA,QAAmB,CAAAF,EAAA,qBAA0BK,MAAA,CAAOC,KAAA,YAAiBV,EAAAQ,GAAA,8EAAAJ,EAAA,OAAiG2B,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAAZ,MAAArB,EAAA,eAAAkC,WAAA,mBAAoF5B,YAAA,QAAqB,CAAAF,EAAA,MAAWE,YAAA,SAAoB,CAAAN,EAAAQ,GAAA,SAAAJ,EAAA,KAAAJ,EAAAQ,GAAA,YAAAJ,EAAA,OAAuDE,YAAA,SAAoB,CAAAF,EAAA,qBAA0BK,MAAA,CAAO6B,UAAAtC,EAAAuC,cAAAC,aAAAxC,EAAAyC,qBAAmE,KAAArC,EAAA,eAA0BK,MAAA,CAAOiC,UAAA1C,EAAA2C,kBAA+B,IAC7tFC,EAAA,YAAoC,IAAA5C,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,QAAmB,CAAAF,EAAA,MAAWE,YAAA,cAAyB,CAAAN,EAAAQ,GAAA,cAAAJ,EAAA,KAAAJ,EAAAQ,GAAA,qGCD3K,SAAAqC,EAAAC,EAAAC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAA/C,KAAAgD,MAAAC,OACAC,EAAAL,EAAAM,SAAAC,IAAA,SAAAC,GACA,OAAAA,EAAAC,QAEAC,EAAAT,EAAAK,SAAAC,IAAA,SAAAC,GACA,OAAAA,EAAAC,QAEAE,EAAAC,KAAAC,UAAAH,GACAI,EAAAF,KAAAC,UAAAR,GAEAS,IAAAH,GAAAV,EAAAK,SAAAS,SAAAf,EAAAM,SAAAS,QACAf,EAAAM,SAAAU,QAAA,SAAAR,EAAAS,GACA,IAAAC,EAAAC,OAAAC,KAAAnB,EAAAK,SAAAW,IACAI,EAAAF,OAAAC,KAAAZ,GACAc,EAAAJ,EAAAK,OAAA,SAAAC,GACA,gBAAAA,IAAA,IAAAH,EAAAI,QAAAD,KAMA,QAAAE,KAJAJ,EAAAN,QAAA,SAAAW,UACAzB,EAAA0B,KAAAtB,SAAAW,GAAAU,KAGAnB,EACAA,EAAAqB,eAAAH,KACAxB,EAAA0B,KAAAtB,SAAAW,GAAAS,GAAAlB,EAAAkB,MAKA1B,EAAA6B,eAAA,YACA3B,EAAA0B,KAAAE,OAAA9B,EAAA8B,OACA3E,KAAA4E,MAAA,kBAGA/B,EAAA6B,eAAA,aACA3B,EAAA0B,KAAAI,QAAAhC,EAAAgC,QACA7E,KAAA4E,MAAA,mBAGA/B,EAAA6B,eAAA,aACA3B,EAAA0B,KAAAK,QAAAjC,EAAAiC,QACA9E,KAAA4E,MAAA,mBAGA7B,EAAAgC,SACA/E,KAAA4E,MAAA,kBAEA7B,IACAA,EAAAiC,UACAhF,KAAA4E,MAAA,kBAGA5E,KAAAiF,YAAAjF,KAAAqC,UAAArC,KAAAkF,SACAlF,KAAA4E,MAAA,sBAGA5E,KAAAgD,MAAAC,SACAjD,KAAAgD,MAAAC,OAAA+B,UAEAhF,KAAA4E,MAAA,kBAGA5E,KAAAiF,YAAAjF,KAAAqC,UAAArC,KAAAkF,SACAlF,KAAA4E,MAAA,gBAIO,IAAAO,EAAA,CACPV,KAAA,WACA,OACApC,UAAA,OAGA+C,MAAA,CACA/C,UAAAO,IAGOyC,EAAA,CACPC,MAAA,CACAjD,UAAA,CACAkD,KAAAvB,OACAwB,UAAA,EACAC,QAAA,eAGAL,MAAA,CACA/C,UAAAO,IAGe8C,EAAA,CACfP,eACAE,qCC3FO,SAAAM,EAAAC,EAAAC,GACP,OACA/F,OAAA,SAAAgG,GACA,OAAAA,EAAA,OACAC,MAAA/F,KAAAgG,OACAC,MAAAjG,KAAAkG,YACO,CAAAJ,EAAA,UACPtF,MAAA,CACA2F,GAAAnG,KAAA4F,QACAQ,MAAApG,KAAAoG,MACAC,OAAArG,KAAAqG,QAEAC,IAAA,cAGAhB,MAAA,CACAM,QAAA,CACAH,QAAAG,EACAL,KAAAgB,QAEAH,MAAA,CACAX,QAAA,IACAF,KAAAiB,QAEAH,OAAA,CACAZ,QAAA,IACAF,KAAAiB,QAEAN,WAAA,CACAX,KAAAgB,OACAd,QAAA,IAEAO,OAAA,CACAT,KAAAvB,QAEAyC,QAAA,CACAlB,KAAAmB,MACAjB,QAAA,WACA,YAIAhB,KAAA,WACA,OACAxB,OAAA,KACA0D,SAAA3G,KAAAyG,UAGAG,QAAA,CACAC,UAAA,SAAAC,GACA9G,KAAAgD,MAAA2D,SAAAI,KAAAD,IAEAE,eAAA,WACA,GAAAhH,KAAAgD,MAAAC,OACA,OAAAjD,KAAAgD,MAAAC,OAAA+D,kBAGA/B,YAAA,SAAAR,EAAAS,GACAlF,KAAAgD,MAAAC,QAAAjD,KAAAgD,MAAAC,OAAA+B,UACAhF,KAAAgD,MAAAC,OAAA,IAAgCgE,EAAAC,EAAKlH,KAAAmH,MAAAC,OAAAC,WAAA,OACrC9B,KAAAM,EACApB,OACAS,UACAuB,QAAAzG,KAAAgD,MAAA2D,aAIAW,cAAA,WACAtH,KAAAgD,MAAAC,QACAjD,KAAAgD,MAAAC,OAAA+B,YAKOW,EAAA,mBACAA,EAAA,uCACAA,EAAA,6BACAA,EAAA,qBACAA,EAAA,mBACAA,EAAA,2BACAA,EAAA,uBACAA,EAAA,yBAPA,IC3EH4B,EAAQC,EDmFLC,EAAA9B,EAAA,2BE3EP+B,EAAA,SAAAC,GAAA,SAAAC,mDAOA,OAP+CC,EAAA,KAAAD,EAAAD,GAIrCC,EAAAE,UAAAC,QAAR,WACE/H,KAAKiF,YAAYjF,KAAKqC,UAAWrC,KAAKuC,eAJhCsF,EAAA,MAAP7D,OAAAgE,EAAA,KAAAhE,oCACO6D,EAAA,MAAP7D,OAAAgE,EAAA,KAAAhE,uCAFkB4D,EAAiBC,EAAA,MAHrC7D,OAAAgE,EAAA,KAAAhE,CAAU,CACTiE,WAAY,MAEOL,GAOrBA,EAPA,CAA+C5D,OAAAgE,EAAA,KAAAhE,CAAOyD,EAAS/B,EAAOL,eAAjD6C,EAAA,ECR0UC,EAAA,cFO/VC,EAAgBpE,OAAAqE,EAAA,KAAArE,CACdmE,EACAZ,EACAC,GACF,EACA,KACA,KACA,MAIec,EAAAF,kCGyFfG,EAAA,SAAAZ,GAbA,SAAAa,IAAA,IAAAC,EAAA,OAAAd,KAAAe,MAAA1I,KAAA2I,YAAA3I,YAeUyI,EAAA/F,cAAwB,UACxB+F,EAAA9G,eAAyB,KACzB8G,EAAAG,aAAuB,UACvBH,EAAApH,UAAoB,GACpBoH,EAAAjH,UAAoB,GACpBiH,EAAA3H,+BAAyC,EACzC2H,EAAA7H,mBAIF,CACJ,CACEmB,KAAM,OACN8G,QAAS,GACTC,QAAS,KAEX,CACE/G,KAAM,UACN8G,QAAS,oBACTC,QAAS,KAEX,CACE/G,KAAM,SACN8G,QAAS,oBACTC,QAAS,KAEX,CACE/G,KAAM,OACN8G,QAAS,kBACTC,QAAS,KAEX,CACE/G,KAAM,SACN8G,QAAS,aACTC,QAAS,KAEX,CACE/G,KAAM,UACN8G,QAAS,aACTC,QAAS,MAGLL,EAAAtG,eAAyB,GACzBsG,EAAArG,2BAAqC,GACrCqG,EAAAM,aAAsC,CAC5C,CACEzF,MAAO,UACP0F,YAAaP,EAAKG,aAClBK,gBAAiBR,EAAKG,aACtBnE,KAAM,KAGFgE,EAAAnG,cAAiC,CACvCa,SAAUsF,EAAKM,cAETN,EAAAjG,iBAAuC,CAC7C0G,YAAY,KAwHhB,OAlL8CrB,EAAA,KAAAW,EAAAb,GA6DpCa,EAAAV,UAAAqB,QAAR,WACE,IAAIrF,EAAY,EAChBkE,EAAA,KAAIoB,IAAIpJ,KAAKY,mBAAmBkD,KAAM,UAAW9D,KAAKqJ,eAAe,YACrErB,EAAA,KAAIoB,IAAIpJ,KAAKY,mBAAmBkD,KAAM,UAAW9D,KAAKqJ,eAAe,WACrErB,EAAA,KAAIoB,IAAIpJ,KAAKY,mBAAmBkD,KAAM,UAAW9D,KAAKqJ,eAAe,SACrErB,EAAA,KAAIoB,IAAIpJ,KAAKY,mBAAmBkD,KAAM,UAAW9D,KAAKqJ,eAAe,WACrErB,EAAA,KAAIoB,IAAIpJ,KAAKY,mBAAmBkD,KAAM,UAAW9D,KAAKqJ,eAAe,aAI/Db,EAAAV,UAAAuB,eAAR,SAAuBtH,GACrB,IAAIuH,EAAqB,GACrBC,EAAqB,GACrBC,EAAsB,GACtBC,EAAsB,GAC1B,OAAO1H,GACL,IAAK,UACHuH,EAAWI,EAAA,KAAeC,gBAAgB,IAAK,EAAG,GAClDJ,EAAWG,EAAA,KAAeE,6BAA6BN,EAAU,IACjEA,EAAWA,EAASlG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FmI,EAAWA,EAASnG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FoI,EAAcF,EAASS,KAAK,KAC5BN,EAAcF,EAASQ,KAAK,KAC5B,MACF,IAAK,SACHT,EAAWI,EAAA,KAAeC,gBAAgB,IAAK,EAAG,GAClDJ,EAAWG,EAAA,KAAeE,6BAA6BN,GAAW,IAClEA,EAAWA,EAASlG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FmI,EAAWA,EAASnG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FoI,EAAc,IAAMF,EAASS,KAAK,QAAU,IAC5CN,EAAc,IAAMF,EAASQ,KAAK,QAAU,IAC5C,MACF,IAAK,OACHT,EAAWI,EAAA,KAAeC,gBAAgB,IAAK,EAAG,GAClDJ,EAAWG,EAAA,KAAeE,6BAA6BN,EAAU,IACjEA,EAAWI,EAAA,KAAeM,qBAAqBV,EAAU,OAAQ,MACjEC,EAAWG,EAAA,KAAeM,qBAAqBT,EAAU,MAAO,OAChED,EAAWA,EAASlG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FmI,EAAWA,EAASnG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FoI,EAAcF,EAASS,KAAK,KAC5BN,EAAcF,EAASQ,KAAK,KAC5B,MACF,IAAK,SACHT,EAAWI,EAAA,KAAeC,gBAAgB,IAAK,EAAG,GAClDJ,EAAWG,EAAA,KAAeC,gBAAgB,IAAK,GAAI,IACnDL,EAAWA,EAASlG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FmI,EAAWA,EAASnG,IAAI,SAAChC,GAA4B,OAAOoF,OAAOqD,EAAA,KAASC,QAAQ1I,EAAO,MAC3FoI,EAAcF,EAASS,KAAK,OAC5BN,EAAcF,EAASQ,KAAK,OAC5B,MACF,IAAK,UACH,IAAK,IAAIjG,EAAY,EAAGA,EAAI,IAAKA,IAC/BwF,EAASvC,KAAK8C,EAAA,KAASI,aAAa,EAAG,EAAG,IAC1CV,EAASxC,KAAK8C,EAAA,KAASI,YAAY,EAAG,IAAK,IAE7CT,EAAcF,EAASS,KAAK,MAC5BN,EAAcF,EAASQ,KAAK,MAC5B,MAEJ,OAAOP,EAAc,IAAMC,GAErBjB,EAAAV,UAAA5G,4BAAR,SAAoCD,GAClCjB,KAAKc,+BAAiC0F,OAAYvF,GAClD,IAAIiJ,EAAwBlK,KAAKY,mBAAmBZ,KAAKc,gCAAgCgI,QAAQqB,MAAM,KACvGnK,KAAKqB,UAAY6I,EAAY,GAC7BlK,KAAKwB,UAAY0I,EAAY,IAEvB1B,EAAAV,UAAAvG,aAAR,SAAqBN,GACnBjB,KAAKqB,UAAqCJ,EAAQmJ,OAAQhJ,OAEpDoH,EAAAV,UAAArG,aAAR,SAAqBR,GACnBjB,KAAKwB,UAAqCP,EAAQmJ,OAAQhJ,OAEpDoH,EAAAV,UAAAjG,gBAAR,WACE,IAAIyH,EAAuCtJ,KAAKqB,UAAUgJ,MAAM,2CAC5Dd,EAAuCvJ,KAAKwB,UAAU6I,MAAM,2CAChE,GAAiB,OAAbf,GAAkC,OAAbC,EAAmB,CAC1CD,EAAWA,EAASlG,IAAI,SAAChC,GACvB,OAAOoF,OAAOpF,KAEhBmI,EAAWA,EAASnG,IAAI,SAAChC,GACvB,OAAOoF,OAAOpF,KAEhB,IAAIwC,EAAiB8F,EAAA,KAAeY,YAAY,CAAChB,EAAS1F,OAAQ2F,EAAS3F,SAC3E0F,EAAWA,EAASiB,OAAO,EAAG3G,GAC9B2F,EAAWA,EAASgB,OAAO,EAAG3G,GAC9B,IAAI4G,EAA2B,EAC/BlB,EAASzF,QAAQ,SAACzC,GAChB,IAAIqJ,EAAgBZ,EAAA,KAASa,gBAAgBtJ,GACzCoJ,EAAmBC,IACrBD,EAAmBC,KAGvBlB,EAAS1F,QAAQ,SAACzC,GAChB,IAAIqJ,EAAgBZ,EAAA,KAASa,gBAAgBtJ,GACzCoJ,EAAmBC,IACrBD,EAAmBC,KAGvBzK,KAAKmC,eAAiB0H,EAAA,KAASC,QAAQJ,EAAA,KAAeiB,eAAerB,EAAUC,GAAWiB,EAAmB,GAC7GxK,KAAKoC,2BAA6ByH,EAAA,KAASC,QAAQJ,EAAA,KAAekB,2BAA2BtB,EAAUC,GAAW,GAClHvJ,KAAK6K,gBAAgBvB,EAAUC,KAG3Bf,EAAAV,UAAA+C,gBAAR,SAAwBvB,EAAoBC,GAC1C,QAAkCuB,IAA9B9K,KAAK+I,aAAa,GAAGtE,KAAoB,CAC3CzE,KAAK+I,aAAa,GAAGtE,KAAKb,OAAS,EAEnC,IADA,IAAImH,EAA4B,GACvBjH,EAAY,EAAGA,EAAIwF,EAAS1F,OAAQE,IAC3CiH,EAAYhE,KAAK,CAACiE,EAAG1B,EAASxF,GAAImH,EAAG1B,EAASzF,KAGhD9D,KAAKsC,cAAgB,GACrB0F,EAAA,KAAIoB,IAAIpJ,KAAK+I,aAAa,GAAI,OAAQgC,GACtC/C,EAAA,KAAIoB,IAAIpJ,KAAKsC,cAAe,WAAYtC,KAAK+I,gBA/K9BP,EAAgBX,EAAA,MAbpC7D,OAAAgE,EAAA,KAAAhE,CAAU,CACTiE,WAAY,CACViD,gBAAeA,EAAA,KACfC,YAAWA,EAAA,KACXC,QAAOA,EAAA,KACPxD,kBAAiBU,GAEnB+C,KAAM,CACJC,MAAO,CACLC,MAAO,gBAIQ/C,GAkLrBA,EAlLA,CAA8CR,EAAA,MAAzBwD,EAAA,EC3GwVC,EAAA,ECQzWC,aAAY1H,OAAAqE,EAAA,KAAArE,CACdyH,EACA3L,EACA6C,GACF,EACA,KACA,WACA,OAIegJ,EAAA,WAAAD;;;;;;;CCbf,SAAAE,EAAAC,GAC4DC,EAAAC,QAAAF,EAAA,WAAwC,IAAM,OAAQlM,EAAQ,QAAY,MAAAqM,KAA1E,KAD5D,CAIChM,EAAA,SAAAiM,GAA2B,aAE5BA,OAAAvH,eAAA,WAAAuH,EAAA,WAAAA,EAIA,IAAAC,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,UAEAC,UACAC,UACAC,UACAC,WACAC,cAEAC,UACAC,UACAC,UACAC,WACAC,cAEAC,UACAC,UACAC,UACAC,WACAC,cAEAC,WACAC,WACAC,WACAC,WACAC,eAEAC,cACAC,cACAC,cACAC,cACAC,eACAC,cACAC,cAEAC,UACAC,UACAC,UAEAC,UACAC,UACAC,UAEAC,UACAC,UACAC,WAIA,SAAA3C,EAAA4C,GACA,IAMAC,EAAAC,EAAAC,EANAC,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OACAM,EAAAN,EAAA,OACAO,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EA0BA,OAvBAE,GAAAF,EACAN,EAAA,EACAG,GAAAK,EACAR,GAAAI,EAAAC,GAAAI,EACAL,GAAAI,EACAR,EAAA,GAAAK,EAAAF,GAAAM,EACAJ,GAAAG,IACAR,EAAA,GAAAG,EAAAC,GAAAK,GAEAT,EAAAO,KAAAD,IAAA,GAAAN,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEAE,GAAAI,EAAAE,GAAA,EAGAP,EADAO,GAAAF,EACA,EACAJ,GAAA,GACAO,GAAAD,EAAAF,GAEAG,GAAA,EAAAD,EAAAF,GAEA,CAAAN,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA9C,EAAA2C,GACA,IAMAC,EAAAC,EAAAS,EANAP,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EAwBA,OApBAL,EADA,GAAAO,EACA,EAEAC,EAAAD,EAAA,OAEAA,GAAAF,EACAN,EAAA,EACAG,GAAAK,EACAR,GAAAI,EAAAC,GAAAI,EACAL,GAAAI,EACAR,EAAA,GAAAK,EAAAF,GAAAM,EACAJ,GAAAG,IACAR,EAAA,GAAAG,EAAAC,GAAAK,GAEAT,EAAAO,KAAAD,IAAA,GAAAN,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEAU,EAAAF,EAAA,WAEA,CAAAR,EAAAC,EAAAS,GAGA,SAAArD,EAAA0C,GACA,IAAAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAC,EAAA7C,EAAA4C,GAAA,GACAY,EAAA,MAAAJ,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IACAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,IAEA,OAAAL,EAAA,IAAAW,EAAA,IAAAN,GAGA,SAAA/C,EAAAyC,GACA,IAGAa,EAAAC,EAAA5E,EAAA6E,EAHAX,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OACAM,EAAAN,EAAA,OAOA,OAJAe,EAAAP,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GACAO,GAAA,EAAAT,EAAAW,IAAA,EAAAA,IAAA,EACAD,GAAA,EAAAT,EAAAU,IAAA,EAAAA,IAAA,EACA7E,GAAA,EAAAoE,EAAAS,IAAA,EAAAA,IAAA,EACA,KAAAF,EAAA,IAAAC,EAAA,IAAA5E,EAAA,IAAA6E,GAGA,SAAAvD,EAAAwC,GACA,OAAAgB,EAAAtM,KAAAC,UAAAqL,IAGA,SAAAvC,EAAAuC,GACA,IAAAI,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OACAM,EAAAN,EAAA,OAGAI,IAAA,OAAAI,KAAAS,KAAAb,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAG,KAAAS,KAAAZ,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAE,KAAAS,KAAAX,EAAA,iBAAAA,EAAA,MAEA,IAAArE,EAAA,MAAAmE,EAAA,MAAAC,EAAA,MAAAC,EACApE,EAAA,MAAAkE,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EAEA,WAAArE,EAAA,IAAAC,EAAA,IAAAgF,GAGA,SAAAxD,EAAAsC,GACA,IAIAG,EAAAhI,EAAAmI,EAJAa,EAAA1D,EAAAuC,GACA/D,EAAAkF,EAAA,GACAjF,EAAAiF,EAAA,GACAD,EAAAC,EAAA,GAeA,OAZAlF,GAAA,OACAC,GAAA,IACAgF,GAAA,QAEAjF,IAAA,QAAAuE,KAAAS,IAAAhF,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAsE,KAAAS,IAAA/E,EAAA,WAAAA,EAAA,OACAgF,IAAA,QAAAV,KAAAS,IAAAC,EAAA,WAAAA,EAAA,OAEAf,EAAA,IAAAjE,EAAA,GACA/D,EAAA,KAAA8D,EAAAC,GACAoE,EAAA,KAAApE,EAAAgF,GAEA,CAAAf,EAAAhI,EAAAmI,GAGA,SAAA3C,EAAAyD,GACA,OAAAxB,EAAAlC,EAAA0D,IAGA,SAAAxD,EAAAyD,GACA,IAGAC,EAAAC,EAAAC,EAAAxB,EAAAyB,EAHAxB,EAAAoB,EAAA,OACAnB,EAAAmB,EAAA,OACAlB,EAAAkB,EAAA,OAGA,MAAAnB,EAEA,OADAuB,EAAA,IAAAtB,EACA,CAAAsB,OAIAF,EADApB,EAAA,GACAA,GAAA,EAAAD,GAEAC,EAAAD,EAAAC,EAAAD,EACAoB,EAAA,EAAAnB,EAAAoB,EAEAvB,EAAA,QACA,QAAAjL,EAAA,EAAiBA,EAAA,EAAOA,IACxByM,EAAAvB,EAAA,MAAAlL,EAAA,GACAyM,EAAA,GAAAA,IACAA,EAAA,GAAAA,IAGAC,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEAtB,EAAAjL,GAAA,IAAA0M,EAGA,OAAAzB,EAGA,SAAAnC,EAAAwD,GACA,IAGAK,EAAAf,EAHAV,EAAAoB,EAAA,GACAnB,EAAAmB,EAAA,OACAlB,EAAAkB,EAAA,OAGA,WAAAlB,EAGA,SAGAA,GAAA,EACAD,GAAAC,GAAA,EAAAA,EAAA,EAAAA,EACAQ,GAAAR,EAAAD,GAAA,EACAwB,EAAA,EAAAxB,GAAAC,EAAAD,GACA,CAAAD,EAAA,IAAAyB,EAAA,IAAAf,IAGA,SAAA7C,EAAAsD,GACA,OAAA9D,EAAAM,EAAAwD,IAGA,SAAArD,EAAAqD,GACA,OAAA7D,EAAAK,EAAAwD,IAGA,SAAApD,EAAAoD,GACA,OAAA5D,EAAAI,EAAAwD,IAIA,SAAAnD,EAAA0D,GACA,IAAA1B,EAAA0B,EAAA,MACAzB,EAAAyB,EAAA,OACAhB,EAAAgB,EAAA,OACAC,EAAApB,KAAAqB,MAAA5B,GAAA,EAEA6B,EAAA7B,EAAAO,KAAAqB,MAAA5B,GACA8B,EAAA,IAAApB,GAAA,EAAAT,GACA8B,EAAA,IAAArB,GAAA,EAAAT,EAAA4B,GACAG,EAAA,IAAAtB,GAAA,EAAAT,GAAA,EAAA4B,IACAnB,GAAA,IAEA,OAAAiB,GACA,OACA,OAAAjB,EAAAsB,EAAAF,GACA,OACA,OAAAC,EAAArB,EAAAoB,GACA,OACA,OAAAA,EAAApB,EAAAsB,GACA,OACA,OAAAF,EAAAC,EAAArB,GACA,OACA,OAAAsB,EAAAF,EAAApB,GACA,OACA,OAAAA,EAAAoB,EAAAC,IAIA,SAAA9D,EAAAyD,GACA,IAGAO,EAAA/B,EAHAF,EAAA0B,EAAA,GACAzB,EAAAyB,EAAA,OACAhB,EAAAgB,EAAA,OAQA,OALAxB,GAAA,EAAAD,GAAAS,EACAuB,EAAAhC,EAAAS,EACAuB,GAAA/B,GAAA,EAAAA,EAAA,EAAAA,EACA+B,KAAA,EACA/B,GAAA,EACA,CAAAF,EAAA,IAAAiC,EAAA,IAAA/B,GAGA,SAAAhC,EAAAiD,GACA,OAAA9D,EAAAW,EAAAmD,IAGA,SAAAhD,EAAAgD,GACA,OAAA7D,EAAAU,EAAAmD,IAGA,SAAA/C,EAAA+C,GACA,OAAA5D,EAAAS,EAAAmD,IAIA,SAAA9C,EAAA6D,GACA,IAIApN,EAAA4L,EAAAmB,EAAAhR,EAJAmP,EAAAkC,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAF,EAAAC,EAiBA,OAbAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGAvN,EAAAyL,KAAAqB,MAAA,EAAA5B,GACAU,EAAA,EAAA0B,EACAP,EAAA,EAAA7B,EAAAlL,EACA,MAAAA,KACA+M,EAAA,EAAAA,GAEAhR,EAAAsR,EAAAN,GAAAnB,EAAAyB,GAEArN,GACA,QACA,OACA,OAAAqL,EAAAO,EAAkBN,EAAAvP,EAAOwP,EAAA8B,EAAQ,MACjC,OAAAhC,EAAAtP,EAAkBuP,EAAAM,EAAOL,EAAA8B,EAAQ,MACjC,OAAAhC,EAAAgC,EAAmB/B,EAAAM,EAAOL,EAAAxP,EAAO,MACjC,OAAAsP,EAAAgC,EAAmB/B,EAAAvP,EAAOwP,EAAAK,EAAO,MACjC,OAAAP,EAAAtP,EAAkBuP,EAAA+B,EAAQ9B,EAAAK,EAAO,MACjC,OAAAP,EAAAO,EAAkBN,EAAA+B,EAAQ9B,EAAAxP,EAAO,MAGjC,WAAAsP,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA/B,EAAA6C,GACA,OAAAhE,EAAAkB,EAAA8C,IAGA,SAAA5C,EAAA4C,GACA,OAAA/D,EAAAiB,EAAA8C,IAGA,SAAA3C,EAAA2C,GACA,OAAA7D,EAAAe,EAAA8C,IAGA,SAAA1C,EAAA0C,GACA,OAAA5D,EAAAc,EAAA8C,IAGA,SAAAzC,EAAA4D,GACA,IAIAnC,EAAAC,EAAAC,EAJAO,EAAA0B,EAAA,OACAzB,EAAAyB,EAAA,OACArG,EAAAqG,EAAA,OACAxB,EAAAwB,EAAA,OAMA,OAHAnC,EAAA,EAAAI,KAAAD,IAAA,EAAAM,GAAA,EAAAE,MACAV,EAAA,EAAAG,KAAAD,IAAA,EAAAO,GAAA,EAAAC,MACAT,EAAA,EAAAE,KAAAD,IAAA,EAAArE,GAAA,EAAA6E,MACA,KAAAX,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA1B,EAAAwC,GACA,OAAAhE,EAAAuB,EAAAyC,IAGA,SAAAvC,EAAAuC,GACA,OAAA/D,EAAAsB,EAAAyC,IAGA,SAAAtC,EAAAsC,GACA,OAAA9D,EAAAqB,EAAAyC,IAGA,SAAArC,EAAAqC,GACA,OAAA5D,EAAAmB,EAAAyC,IAIA,SAAA7B,EAAA4B,GACA,IAGAf,EAAAC,EAAAC,EAHArE,EAAAkF,EAAA,OACAjF,EAAAiF,EAAA,OACAD,EAAAC,EAAA,OAqBA,OAlBAf,EAAA,OAAAnE,GAAA,OAAAC,GAAA,MAAAgF,EACAb,GAAA,MAAApE,EAAA,OAAAC,EAAA,MAAAgF,EACAZ,EAAA,MAAArE,GAAA,KAAAC,EAAA,MAAAgF,EAGAd,IAAA,eAAAI,KAAAS,IAAAb,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAG,KAAAS,IAAAZ,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAE,KAAAS,IAAAX,EAAA,YACAA,GAAA,MAEAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,GAEA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAd,EAAA2B,GACA,IAGAhB,EAAAhI,EAAAmI,EAHArE,EAAAkF,EAAA,GACAjF,EAAAiF,EAAA,GACAD,EAAAC,EAAA,GAeA,OAZAlF,GAAA,OACAC,GAAA,IACAgF,GAAA,QAEAjF,IAAA,QAAAuE,KAAAS,IAAAhF,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAsE,KAAAS,IAAA/E,EAAA,WAAAA,EAAA,OACAgF,IAAA,QAAAV,KAAAS,IAAAC,EAAA,WAAAA,EAAA,OAEAf,EAAA,IAAAjE,EAAA,GACA/D,EAAA,KAAA8D,EAAAC,GACAoE,EAAA,KAAApE,EAAAgF,GAEA,CAAAf,EAAAhI,EAAAmI,GAGA,SAAAb,EAAA2B,GACA,OAAAxB,EAAAJ,EAAA4B,IAGA,SAAA1B,EAAA8C,GACA,IAGAvG,EAAAC,EAAAgF,EAAAuB,EAHAtC,EAAAqC,EAAA,GACArK,EAAAqK,EAAA,GACAlC,EAAAkC,EAAA,GAeA,OAZArC,GAAA,GACAjE,EAAA,IAAAiE,EAAA,MACAsC,EAAAvG,EAAA,mBAEAA,EAAA,IAAAsE,KAAAS,KAAAd,EAAA,WACAsC,EAAAjC,KAAAS,IAAA/E,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAA9D,EAAA,IAAAsK,EAAA,qBAAAjC,KAAAS,IAAA9I,EAAA,IAAAsK,EAAA,GAEAvB,IAAA,iBAAAA,EAAA,SAAAuB,EAAAnC,EAAA,0BAAAE,KAAAS,IAAAwB,EAAAnC,EAAA,OAEA,CAAArE,EAAAC,EAAAgF,GAGA,SAAAtB,EAAA4C,GACA,IAGAE,EAAAzC,EAAAY,EAHAV,EAAAqC,EAAA,GACArK,EAAAqK,EAAA,GACAlC,EAAAkC,EAAA,GASA,OANAE,EAAAlC,KAAAmC,MAAArC,EAAAnI,GACA8H,EAAA,IAAAyC,EAAA,EAAAlC,KAAAoC,GACA3C,EAAA,IACAA,GAAA,KAEAY,EAAAL,KAAAqC,KAAA1K,IAAAmI,KACA,CAAAH,EAAAU,EAAAZ,GAGA,SAAAN,EAAAyB,GACA,OAAA7B,EAAAG,EAAA0B,IAGA,SAAAvB,EAAAiD,GACA,IAGA3K,EAAAmI,EAAAoC,EAHAvC,EAAA2C,EAAA,GACAjC,EAAAiC,EAAA,GACA7C,EAAA6C,EAAA,GAMA,OAHAJ,EAAAzC,EAAA,MAAAO,KAAAoC,GACAzK,EAAA0I,EAAAL,KAAAuC,IAAAL,GACApC,EAAAO,EAAAL,KAAAwC,IAAAN,GACA,CAAAvC,EAAAhI,EAAAmI,GAGA,SAAAR,EAAAsB,GACA,OAAA1B,EAAAG,EAAAuB,IAGA,SAAArB,EAAAqB,GACA,OAAAzB,EAAAE,EAAAuB,IAGA,SAAApC,EAAAiE,GACA,OAAAC,EAAAD,GAGA,SAAAhE,EAAAmC,GACA,OAAAhE,EAAA4B,EAAAoC,IAGA,SAAAlC,EAAAkC,GACA,OAAA/D,EAAA2B,EAAAoC,IAGA,SAAAjC,EAAAiC,GACA,OAAA9D,EAAA0B,EAAAoC,IAGA,SAAAhC,EAAAgC,GACA,OAAA7D,EAAAyB,EAAAoC,IAGA,SAAA/B,EAAA+B,GACA,OAAA1D,EAAAsB,EAAAoC,IAGA,SAAA9B,EAAA8B,GACA,OAAA3D,EAAAuB,EAAAoC,IAGA,IAAA8B,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAGAtL,EAAA,GACA,QAAA1L,KAAA4N,EACAlC,EAAAtM,KAAAC,UAAAuO,EAAA5N,OAGA,IAAAiX,EAAA,WACA,WAAAC,IAGA,QAAAC,KAAAtP,EAAA,CAEAoP,EAAAE,EAAA,gBAAAA,GAEA,gBAAAC,GAGA,MAFA,iBAAAA,IACAA,EAAA/U,MAAAoB,UAAA4T,MAAAC,KAAAhT,YACAuD,EAAAsP,GAAAC,IALA,CAOGD,GAEH,IAAAI,GAAA,cAAAC,KAAAL,GACAM,GAAAF,GAAA,GACAG,GAAAH,GAAA,GAGAN,EAAAQ,IAAAR,EAAAQ,KAAA,GAEAR,EAAAQ,IAAAC,IAAAT,EAAAE,GAAA,SAAAA,GACA,gBAAAC,GACA,iBAAAA,IACAA,EAAA/U,MAAAoB,UAAA4T,MAAAC,KAAAhT,YAEA,IAAA6H,EAAAtE,EAAAsP,GAAAC,GACA,oBAAAjL,QAAA1F,IAAA0F,EACA,OAAAA,EAEA,QAAA1M,EAAA,EAAqBA,EAAA0M,EAAA5M,OAAgBE,IACrC0M,EAAA1M,GAAAyL,KAAAyM,MAAAxL,EAAA1M,IACA,OAAA0M,GAXA,CAaGgL,GAKH,IAAAD,GAAA,WACAvb,KAAAic,MAAA,IAKAV,GAAAzT,UAAAoU,WAAA,SAAAC,EAAAhM,GACA,IAAAiM,EAAAjM,EAAA,GACA,YAAArF,IAAAsR,EAEApc,KAAAqc,UAAAF,IAGA,iBAAAC,IACAA,EAAA1V,MAAAoB,UAAA4T,MAAAC,KAAAxL,IAGAnQ,KAAAsc,UAAAH,EAAAC,KAIAb,GAAAzT,UAAAwU,UAAA,SAAAH,EAAAC,GAIA,OAHApc,KAAAmc,QACAnc,KAAAic,MAAA,GACAjc,KAAAic,MAAAE,GAAAC,EACApc,MAMAub,GAAAzT,UAAAuU,UAAA,SAAAF,GACA,IAAAI,EAAAvc,KAAAic,MAAAE,GACA,IAAAI,EAAA,CACA,IAAAC,EAAAxc,KAAAmc,MACAL,EAAA9b,KAAAic,MAAAO,GACAD,EAAAjB,EAAAkB,GAAAL,GAAAL,GAEA9b,KAAAic,MAAAE,GAAAI,EAEA,OAAAA,GAGA,qCAAA1Y,QAAA,SAAAsY,GACAZ,GAAAzT,UAAAqU,GAAA,SAAAI,GACA,OAAAvc,KAAAkc,WAAAC,EAAAxT,cAIA,IAAA8T,GAAAnB,EAEAoB,GAAA,CACAxK,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAMAsB,GAAA,CACAC,WACAC,WACAC,UACAC,UACAC,UACAC,YAEAC,aACAC,aACAC,cACAC,iBACAC,kBACAC,aACAC,cACAC,aACAzL,YAGA,SAAA4K,GAAAc,GACA,GAAAA,EAAA,CAGA,IAAAC,EAAA,yBACAC,EAAA,wCACAC,EAAA,2FACAC,EAAA,6GACA9L,EAAA,QAEAjD,EAAA,QACA7H,EAAA,EACAmD,EAAAqT,EAAArT,MAAAsT,GACAI,EAAA,GACA,GAAA1T,EAAA,CACAA,IAAA,GACA0T,EAAA1T,EAAA,GACA,QAAAvG,EAAA,EAAqBA,EAAAiL,EAAAnL,OAAgBE,IACrCiL,EAAAjL,GAAAka,SAAA3T,EAAAvG,GAAAuG,EAAAvG,GAAA,IAEAia,IACA7W,EAAAqI,KAAAyM,MAAAgC,SAAAD,IAAA,uBAGA,GAAA1T,EAAAqT,EAAArT,MAAAuT,GAAA,CACAG,EAAA1T,EAAA,GACAA,IAAA,GACA,IAAAvG,EAAA,EAAqBA,EAAAiL,EAAAnL,OAAgBE,IACrCiL,EAAAjL,GAAAka,SAAA3T,EAAAqR,MAAA,EAAA5X,EAAA,EAAAA,EAAA,OAEAia,IACA7W,EAAAqI,KAAAyM,MAAAgC,SAAAD,EAAA,uBAGA,GAAA1T,EAAAqT,EAAArT,MAAAwT,GAAA,CACA,IAAA/Z,EAAA,EAAqBA,EAAAiL,EAAAnL,OAAgBE,IACrCiL,EAAAjL,GAAAka,SAAA3T,EAAAvG,EAAA,IAEAoD,EAAA+W,WAAA5T,EAAA,SAEA,GAAAA,EAAAqT,EAAArT,MAAAyT,GAAA,CACA,IAAAha,EAAA,EAAqBA,EAAAiL,EAAAnL,OAAgBE,IACrCiL,EAAAjL,GAAAyL,KAAAyM,MAAA,KAAAiC,WAAA5T,EAAAvG,EAAA,KAEAoD,EAAA+W,WAAA5T,EAAA,SAEA,GAAAA,EAAAqT,EAAArT,MAAA2H,GAAA,CACA,kBAAA3H,EAAA,GACA,gBAGA,GADA0E,EAAA2N,GAAArS,EAAA,KACA0E,EACA,OAIA,IAAAjL,EAAA,EAAkBA,EAAAiL,EAAAnL,OAAgBE,IAClCiL,EAAAjL,GAAAoa,GAAAnP,EAAAjL,GAAA,OASA,OAHAoD,EAJAA,GAAA,GAAAA,EAIAgX,GAAAhX,EAAA,KAHA,EAKA6H,EAAA,GAAA7H,EACA6H,GAGA,SAAA8N,GAAAa,GACA,GAAAA,EAAA,CAGA,IAAAtN,EAAA,2GACA/F,EAAAqT,EAAArT,MAAA+F,GACA,GAAA/F,EAAA,CACA,IAAA8T,EAAAF,WAAA5T,EAAA,IACA2E,EAAAkP,GAAAF,SAAA3T,EAAA,WACA4E,EAAAiP,GAAAD,WAAA5T,EAAA,WACA6E,EAAAgP,GAAAD,WAAA5T,EAAA,WACAnD,EAAAgX,GAAAE,MAAAD,GAAA,EAAAA,EAAA,KACA,OAAAnP,EAAAC,EAAAC,EAAAhI,KAIA,SAAA8V,GAAAU,GACA,GAAAA,EAAA,CAGA,IAAAxM,EAAA,yGACA7G,EAAAqT,EAAArT,MAAA6G,GACA,GAAA7G,EAAA,CACA,IAAA8T,EAAAF,WAAA5T,EAAA,IACA2E,EAAAkP,GAAAF,SAAA3T,EAAA,WACAsF,EAAAuO,GAAAD,WAAA5T,EAAA,WACAgF,EAAA6O,GAAAD,WAAA5T,EAAA,WACAnD,EAAAgX,GAAAE,MAAAD,GAAA,EAAAA,EAAA,KACA,OAAAnP,EAAAW,EAAAN,EAAAnI,KAIA,SAAA4V,GAAAY,GACA,IAAAG,EAAAjB,GAAAc,GACA,OAAAG,KAAAnC,MAAA,KAGA,SAAAqB,GAAAW,GACA,IAAAW,EAAAxB,GAAAa,GACA,OAAAW,KAAA3C,MAAA,KAGA,SAAAuB,GAAAS,GACA,IAAAnB,EAAAK,GAAAc,GACA,OAAAnB,EACAA,EAAA,IAEAA,EAAAM,GAAAa,IACAnB,EAAA,IAEAA,EAAAS,GAAAU,IACAnB,EAAA,QADA,EAMA,SAAAW,GAAAW,EAAA3W,GACAA,OAAA4D,IAAA5D,GAAA,IAAA2W,EAAAja,OAAAsD,EAAA2W,EAAA,GACA,UAAAS,GAAAT,EAAA,IACAS,GAAAT,EAAA,IACAS,GAAAT,EAAA,KAEA3W,GAAA,GAAAA,EAAA,EACAoX,GAAA/O,KAAAyM,MAAA,IAAA9U,IACA,IAIA,SAAAiW,GAAAU,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAT,GAAAS,EAAAM,GAEA,OAAAN,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAGA,SAAAT,GAAAS,EAAAM,GAIA,YAHArT,IAAAqT,IACAA,OAAArT,IAAA+S,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAAM,EAAA,IAGA,SAAAd,GAAAQ,EAAAM,GACA,GAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACA,OAAAP,GAAAO,EAAAM,GAEA,IAAAhP,EAAAI,KAAAyM,MAAA6B,EAAA,YACAzO,EAAAG,KAAAyM,MAAA6B,EAAA,YACAxO,EAAAE,KAAAyM,MAAA6B,EAAA,YAEA,aAAA1O,EAAA,MAAAC,EAAA,MAAAC,EAAA,KAGA,SAAAiO,GAAAO,EAAAM,GACA,IAAAhP,EAAAI,KAAAyM,MAAA6B,EAAA,YACAzO,EAAAG,KAAAyM,MAAA6B,EAAA,YACAxO,EAAAE,KAAAyM,MAAA6B,EAAA,YACA,cAAA1O,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAA8O,GAAAN,EAAA,WAGA,SAAAN,GAAAc,EAAAF,GACA,OAAAA,EAAA,GAAAE,EAAA,IAAAA,EAAA,KACAb,GAAAa,EAAAF,GAEA,OAAAE,EAAA,QAAAA,EAAA,SAAAA,EAAA,QAGA,SAAAb,GAAAa,EAAAF,GAIA,YAHArT,IAAAqT,IACAA,OAAArT,IAAAuT,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAF,EAAA,IAKA,SAAAV,GAAAvM,EAAAiN,GAIA,YAHArT,IAAAqT,IACAA,OAAArT,IAAAoG,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aACApG,IAAAqT,GAAA,IAAAA,EAAA,KAAAA,EAAA,QAGA,SAAAnM,GAAAjD,GACA,OAAAwP,GAAAxP,EAAA2M,MAAA,MAIA,SAAAwC,GAAAM,EAAAlP,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAAkP,GAAAhP,GAGA,SAAA8O,GAAAE,GACA,IAAAC,EAAAD,EAAAE,SAAA,IAAAC,cACA,OAAAF,EAAA7a,OAAA,MAAA6a,IAKA,IAAAF,GAAA,GACA,QAAAxc,MAAA2a,GACA6B,GAAA7B,GAAA3a,QAOA,IAAA6c,GAAA,SAAAC,GACA,OAAAA,aAAAD,GACAC,EAEA7e,gBAAA4e,IAIA5e,KAAA8e,OAAA,EACA9e,KAAAoc,OAAA,CACArN,IAAA,QACAqB,IAAA,QACAM,IAAA,QACAQ,IAAA,QACAI,KAAA,UACA6M,MAAA,QAKA,kBAAAU,GACAtC,EAAAI,GAAAC,QAAAiC,GACAtC,EACAvc,KAAAsc,UAAA,MAAAC,IACGA,EAAAI,GAAAE,QAAAgC,IACH7e,KAAAsc,UAAA,MAAAC,IACGA,EAAAI,GAAAK,OAAA6B,KACH7e,KAAAsc,UAAA,MAAAC,IAEE,kBAAAsC,IACFtC,EAAAsC,OACA/T,IAAAyR,EAAApN,QAAArE,IAAAyR,EAAA7C,IACA1Z,KAAAsc,UAAA,MAAAC,QACGzR,IAAAyR,EAAArN,QAAApE,IAAAyR,EAAAwC,UACH/e,KAAAsc,UAAA,MAAAC,QACGzR,IAAAyR,EAAA7M,QAAA5E,IAAAyR,EAAAnb,MACHpB,KAAAsc,UAAA,MAAAC,QACGzR,IAAAyR,EAAA5M,QAAA7E,IAAAyR,EAAAyC,UACHhf,KAAAsc,UAAA,MAAAC,QACGzR,IAAAyR,EAAA3M,QAAA9E,IAAAyR,EAAAjJ,MACHtT,KAAAsc,UAAA,OAAAC,MAnCA,IAAAqC,GAAAC,GAcA,IAAAtC,GA0BAqC,GAAA9W,UAAA,CACAmX,QAAA,WACA,OAAAjf,KAAA8e,OAEA/P,IAAA,WACA,OAAA/O,KAAAkf,SAAA,MAAAvW,YAEAyH,IAAA,WACA,OAAApQ,KAAAkf,SAAA,MAAAvW,YAEA+H,IAAA,WACA,OAAA1Q,KAAAkf,SAAA,MAAAvW,YAEAuI,IAAA,WACA,OAAAlR,KAAAkf,SAAA,MAAAvW,YAEA2I,KAAA,WACA,OAAAtR,KAAAkf,SAAA,OAAAvW,YAGAwW,SAAA,WACA,OAAAnf,KAAAoc,OAAArN,KAEAqQ,SAAA,WACA,OAAApf,KAAAoc,OAAAhM,KAEAiP,SAAA,WACA,OAAArf,KAAAoc,OAAA1L,KAEA4O,SAAA,WACA,IAAAlD,EAAApc,KAAAoc,OACA,WAAAA,EAAA+B,MACA/B,EAAAlL,IAAAqO,OAAA,CAAAnD,EAAA+B,QAEA/B,EAAAlL,KAEAsO,UAAA,WACA,OAAAxf,KAAAoc,OAAA9K,MAEAmO,UAAA,WACA,IAAArD,EAAApc,KAAAoc,OACA,OAAAA,EAAArN,IAAAwQ,OAAA,CAAAnD,EAAA+B,SAEAuB,UAAA,WACA,IAAAtD,EAAApc,KAAAoc,OACA,OAAAA,EAAAhM,IAAAmP,OAAA,CAAAnD,EAAA+B,SAEAA,MAAA,SAAA3N,GACA,YAAA1F,IAAA0F,EACAxQ,KAAAoc,OAAA+B,OAEAne,KAAAsc,UAAA,QAAA9L,GACAxQ,OAGA0Z,IAAA,SAAAlJ,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEAgF,MAAA,SAAAhF,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEAmC,KAAA,SAAAnC,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEAoP,IAAA,SAAApP,GAKA,OAJAA,IACAA,GAAA,IACAA,IAAA,MAAAA,KAEAxQ,KAAA2f,WAAA,QAAAnP,IAEAqP,WAAA,SAAArP,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEAuO,UAAA,SAAAvO,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEAsP,YAAA,SAAAtP,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEAwO,UAAA,SAAAxO,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEAuP,UAAA,SAAAvP,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEApP,MAAA,SAAAoP,GACA,OAAAxQ,KAAA2f,WAAA,QAAAnP,IAEA8C,KAAA,SAAA9C,GACA,OAAAxQ,KAAA2f,WAAA,SAAAnP,IAEA+G,QAAA,SAAA/G,GACA,OAAAxQ,KAAA2f,WAAA,SAAAnP,IAEA4K,OAAA,SAAA5K,GACA,OAAAxQ,KAAA2f,WAAA,SAAAnP,IAEAiC,MAAA,SAAAjC,GACA,OAAAxQ,KAAA2f,WAAA,SAAAnP,IAGA0M,UAAA,WACA,OAAAP,GAAAO,UAAAld,KAAAoc,OAAArN,MAEAoO,UAAA,WACA,OAAAR,GAAAQ,UAAAnd,KAAAoc,OAAArN,IAAA/O,KAAAoc,OAAA+B,QAEAf,WAAA,WACA,OAAAT,GAAAS,WAAApd,KAAAoc,OAAArN,IAAA/O,KAAAoc,OAAA+B,QAEAd,cAAA,WACA,OAAAV,GAAAU,cAAArd,KAAAoc,OAAArN,IAAA/O,KAAAoc,OAAA+B,QAEAZ,UAAA,WACA,OAAAZ,GAAAY,UAAAvd,KAAAoc,OAAAhM,IAAApQ,KAAAoc,OAAA+B,QAEAX,WAAA,WACA,OAAAb,GAAAa,WAAAxd,KAAAoc,OAAAhM,IAAApQ,KAAAoc,OAAA+B,QAEAV,UAAA,WACA,OAAAd,GAAAc,UAAAzd,KAAAoc,OAAAlL,IAAAlR,KAAAoc,OAAA+B,QAEAnM,QAAA,WACA,OAAA2K,GAAA3K,QAAAhS,KAAAoc,OAAArN,IAAA/O,KAAAoc,OAAA+B,QAGA6B,UAAA,WACA,IAAAjR,EAAA/O,KAAAoc,OAAArN,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAGAkR,WAAA,WAIA,IAFA,IAAAlR,EAAA/O,KAAAoc,OAAArN,IACAmR,EAAA,GACApc,EAAA,EAAiBA,EAAAiL,EAAAnL,OAAgBE,IAAA,CACjC,IAAAqc,EAAApR,EAAAjL,GAAA,IACAoc,EAAApc,GAAAqc,GAAA,OAAAA,EAAA,MAAA5Q,KAAAS,KAAAmQ,EAAA,iBAEA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAE,SAAA,SAAAC,GAEA,IAAAC,EAAAtgB,KAAAigB,aACAM,EAAAF,EAAAJ,aACA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,IAAAI,EAAAzgB,KAAAogB,SAAAC,GACA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAGAC,KAAA,WAEA,IAAA3R,EAAA/O,KAAAoc,OAAArN,IACA4R,GAAA,IAAA5R,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,OAAA4R,EAAA,KAGAC,MAAA,WACA,OAAA5gB,KAAA0gB,QAGAG,OAAA,WAEA,IADA,IAAA9R,EAAA,GACAjL,EAAA,EAAiBA,EAAA,EAAOA,IACxBiL,EAAAjL,GAAA,IAAA9D,KAAAoc,OAAArN,IAAAjL,GAGA,OADA9D,KAAAsc,UAAA,MAAAvN,GACA/O,MAGA8gB,QAAA,SAAAzP,GACA,IAAAjB,EAAApQ,KAAAoc,OAAAhM,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAiB,EACArR,KAAAsc,UAAA,MAAAlM,GACApQ,MAGA+gB,OAAA,SAAA1P,GACA,IAAAjB,EAAApQ,KAAAoc,OAAAhM,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAiB,EACArR,KAAAsc,UAAA,MAAAlM,GACApQ,MAGAghB,SAAA,SAAA3P,GACA,IAAAjB,EAAApQ,KAAAoc,OAAAhM,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAiB,EACArR,KAAAsc,UAAA,MAAAlM,GACApQ,MAGAihB,WAAA,SAAA5P,GACA,IAAAjB,EAAApQ,KAAAoc,OAAAhM,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAiB,EACArR,KAAAsc,UAAA,MAAAlM,GACApQ,MAGAkhB,OAAA,SAAA7P,GACA,IAAAH,EAAAlR,KAAAoc,OAAAlL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACArR,KAAAsc,UAAA,MAAApL,GACAlR,MAGAmhB,QAAA,SAAA9P,GACA,IAAAH,EAAAlR,KAAAoc,OAAAlL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACArR,KAAAsc,UAAA,MAAApL,GACAlR,MAGAohB,UAAA,WACA,IAAArS,EAAA/O,KAAAoc,OAAArN,IAEAyB,EAAA,GAAAzB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADA/O,KAAAsc,UAAA,OAAA9L,QACAxQ,MAGAqhB,QAAA,SAAAhQ,GACA,IAAA8M,EAAAne,KAAAoc,OAAA+B,MAEA,OADAne,KAAAsc,UAAA,QAAA6B,IAAA9M,GACArR,MAGAshB,QAAA,SAAAjQ,GACA,IAAA8M,EAAAne,KAAAoc,OAAA+B,MAEA,OADAne,KAAAsc,UAAA,QAAA6B,IAAA9M,GACArR,MAGAuhB,OAAA,SAAAC,GACA,IAAApR,EAAApQ,KAAAoc,OAAAhM,IACAwP,GAAAxP,EAAA,GAAAoR,GAAA,IAGA,OAFApR,EAAA,GAAAwP,EAAA,MAAAA,IACA5f,KAAAsc,UAAA,MAAAlM,GACApQ,MAOAyhB,IAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA5hB,KACAqgB,EAAAqB,EACA5Q,OAAAhG,IAAA6W,EAAA,GAAAA,EAEAhS,EAAA,EAAAmB,EAAA,EACA5J,EAAA0a,EAAAzD,QAAAkC,EAAAlC,QAEA0D,IAAAlS,EAAAzI,KAAA,EAAAyI,KAAAzI,IAAA,EAAAyI,EAAAzI,IAAA,KACA4a,EAAA,EAAAD,EAEA,OAAA7hB,KACA+O,IACA8S,EAAAD,EAAAlI,MAAAoI,EAAAzB,EAAA3G,MACAmI,EAAAD,EAAApM,QAAAsM,EAAAzB,EAAA7K,QACAqM,EAAAD,EAAAjP,OAAAmP,EAAAzB,EAAA1N,QAEAwL,MAAAyD,EAAAzD,QAAArN,EAAAuP,EAAAlC,SAAA,EAAArN,KAGAiR,OAAA,WACA,OAAA/hB,KAAA+O,OAGAiT,MAAA,WAKA,IAGA5gB,EAAAmE,EAHA0c,EAAA,IAAArD,GACAsD,EAAAliB,KAAAoc,OACAhS,EAAA6X,EAAA7F,OAGA,QAAA+F,KAAAD,EACAA,EAAAxd,eAAAyd,KACA/gB,EAAA8gB,EAAAC,GACA5c,EAAA,GAAcmZ,SAAA/C,KAAAva,GACd,mBAAAmE,EACA6E,EAAA+X,GAAA/gB,EAAAsa,MAAA,GACK,oBAAAnW,EACL6E,EAAA+X,GAAA/gB,EAEAghB,QAAAC,MAAA,0BAAAjhB,IAKA,OAAA6gB,IAIArD,GAAA9W,UAAAwa,OAAA,CACAvT,IAAA,uBACAqB,IAAA,iCACAM,IAAA,6BACAQ,IAAA,gCACAI,KAAA,qCAGAsN,GAAA9W,UAAAya,MAAA,CACAxT,IAAA,cACAqB,IAAA,cACAM,IAAA,cACAQ,IAAA,cACAI,KAAA,mBAGAsN,GAAA9W,UAAAuU,UAAA,SAAAF,GAIA,IAHA,IAAAC,EAAApc,KAAAoc,OACAG,EAAA,GAEAzY,EAAA,EAAgBA,EAAAqY,EAAAvY,OAAkBE,IAClCyY,EAAAJ,EAAAqG,OAAA1e,IAAAsY,EAAAD,GAAArY,GAQA,OALA,IAAAsY,EAAA+B,QACA5B,EAAArV,EAAAkV,EAAA+B,OAIA5B,GAGAqC,GAAA9W,UAAAwU,UAAA,SAAAH,EAAAI,GACA,IAIAzY,EAkCA2e,EAtCArG,EAAApc,KAAAoc,OACAkG,EAAAtiB,KAAAsiB,OACAC,EAAAviB,KAAAuiB,MACApE,EAAA,EAKA,GAFAne,KAAA8e,OAAA,EAEA,UAAA3C,EACAgC,EAAA5B,OACE,GAAAA,EAAA3Y,OAEFwY,EAAAD,GAAAI,EAAAb,MAAA,EAAAS,EAAAvY,QACAua,EAAA5B,EAAAJ,EAAAvY,aACE,QAAAkH,IAAAyR,EAAAJ,EAAAqG,OAAA,KAEF,IAAA1e,EAAA,EAAaA,EAAAqY,EAAAvY,OAAkBE,IAC/BsY,EAAAD,GAAArY,GAAAyY,EAAAJ,EAAAqG,OAAA1e,IAGAqa,EAAA5B,EAAArV,OACE,QAAA4D,IAAAyR,EAAA+F,EAAAnG,GAAA,KAEF,IAAAuG,EAAAJ,EAAAnG,GAEA,IAAArY,EAAA,EAAaA,EAAAqY,EAAAvY,OAAkBE,IAC/BsY,EAAAD,GAAArY,GAAAyY,EAAAmG,EAAA5e,IAGAqa,EAAA5B,EAAA4B,MAKA,GAFA/B,EAAA+B,MAAA5O,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAAxE,IAAAqT,EAAA/B,EAAA+B,UAEA,UAAAhC,EACA,SAMA,IAAArY,EAAA,EAAYA,EAAAqY,EAAAvY,OAAkBE,IAC9B2e,EAAAlT,KAAAC,IAAA,EAAAD,KAAAD,IAAAiT,EAAApG,GAAArY,GAAAsY,EAAAD,GAAArY,KACAsY,EAAAD,GAAArY,GAAAyL,KAAAyM,MAAAyG,GAIA,QAAAE,KAAAL,EACAK,IAAAxG,IACAC,EAAAuG,GAAAlG,GAAAN,GAAAwG,GAAAvG,EAAAD,KAIA,UAGAyC,GAAA9W,UAAAoX,SAAA,SAAA/C,EAAAhM,GACA,IAAAoM,EAAApM,EAAA,GAEA,YAAArF,IAAAyR,EAEAvc,KAAAqc,UAAAF,IAIA,kBAAAI,IACAA,EAAA7V,MAAAoB,UAAA4T,MAAAC,KAAAxL,IAGAnQ,KAAAsc,UAAAH,EAAAI,GACAvc,OAGA4e,GAAA9W,UAAA6X,WAAA,SAAAxD,EAAAyG,EAAApS,GACA,IAAAqS,EAAA7iB,KAAAoc,OAAAD,GACA,YAAArR,IAAA0F,EAEAqS,EAAAD,GACEpS,IAAAqS,EAAAD,GAEF5iB,MAIA6iB,EAAAD,GAAApS,EACAxQ,KAAAsc,UAAAH,EAAA0G,GAEA7iB,OAGA,qBAAA8iB,SACAA,OAAAlE,UAGA,IAAAmE,GAAAnE,GAKAoE,GAAA,CAIAC,KAAA,aAOAC,IAAA,WACA,IAAA/c,EAAA,EACA,kBACA,OAAAA,KAHA,GAaAgd,cAAA,SAAA/hB,GACA,cAAAA,GAAA,qBAAAA,GASAgiB,QAAA,SAAAhiB,GACA,GAAAsF,MAAA0c,SAAA1c,MAAA0c,QAAAhiB,GACA,SAEA,IAAAmE,EAAAvB,OAAA8D,UAAA4W,SAAA/C,KAAAva,GACA,kBAAAmE,EAAA8d,OAAA,iBAAA9d,EAAA8d,QAAA,IAYAC,SAAA,SAAAliB,GACA,cAAAA,GAAA,oBAAA4C,OAAA8D,UAAA4W,SAAA/C,KAAAva,IAQAmiB,SAAA,SAAAniB,GACA,yBAAAA,gBAAAoF,SAAA+c,SAAAniB,IASAoiB,eAAA,SAAApiB,EAAAqiB,GACA,2BAAAriB,EAAAqiB,EAAAriB,GAUAsiB,sBAAA,SAAAtiB,EAAAwhB,EAAAa,GACA,OAAAT,GAAAQ,eAAAR,GAAAI,QAAAhiB,KAAAwhB,GAAAxhB,EAAAqiB,IAWAE,SAAA,SAAAC,EAAAzT,EAAA0T,GACA,GAAAD,GAAA,oBAAAA,EAAAjI,KACA,OAAAiI,EAAAlb,MAAAmb,EAAA1T,IAaA2T,KAAA,SAAAC,EAAAH,EAAAC,EAAAG,GACA,IAAAlgB,EAAAmgB,EAAAhgB,EACA,GAAA+e,GAAAI,QAAAW,GAEA,GADAE,EAAAF,EAAAngB,OACAogB,EACA,IAAAlgB,EAAAmgB,EAAA,EAAqBngB,GAAA,EAAQA,IAC7B8f,EAAAjI,KAAAkI,EAAAE,EAAAjgB,WAGA,IAAAA,EAAA,EAAeA,EAAAmgB,EAASngB,IACxB8f,EAAAjI,KAAAkI,EAAAE,EAAAjgB,WAGG,GAAAkf,GAAAM,SAAAS,GAGH,IAFA9f,EAAAD,OAAAC,KAAA8f,GACAE,EAAAhgB,EAAAL,OACAE,EAAA,EAAcA,EAAAmgB,EAASngB,IACvB8f,EAAAjI,KAAAkI,EAAAE,EAAA9f,EAAAH,IAAAG,EAAAH,KAYAogB,YAAA,SAAAC,EAAAC,GACA,IAAAtgB,EAAAugB,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAAvgB,SAAAwgB,EAAAxgB,OACA,SAGA,IAAAE,EAAA,EAAAugB,EAAAF,EAAAvgB,OAA+BE,EAAAugB,IAAUvgB,EAIzC,GAHAwgB,EAAAH,EAAArgB,GACAygB,EAAAH,EAAAtgB,GAEAwgB,aAAA5d,OAAA6d,aAAA7d,OACA,IAAAsc,GAAAkB,YAAAI,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQAvC,MAAA,SAAAE,GACA,GAAAc,GAAAI,QAAAlB,GACA,OAAAA,EAAA9e,IAAA4f,GAAAhB,OAGA,GAAAgB,GAAAM,SAAApB,GAAA,CAMA,IALA,IAAA9X,EAAA,GACAnG,EAAAD,OAAAC,KAAAie,GACAsC,EAAAvgB,EAAAL,OACAkM,EAAA,EAESA,EAAA0U,IAAU1U,EACnB1F,EAAAnG,EAAA6L,IAAAkT,GAAAhB,MAAAE,EAAAje,EAAA6L,KAGA,OAAA1F,EAGA,OAAA8X,GAQAuC,QAAA,SAAApgB,EAAA+F,EAAA8X,EAAAhd,GACA,IAAAwf,EAAAta,EAAA/F,GACAsgB,EAAAzC,EAAA7d,GAEA2e,GAAAM,SAAAoB,IAAA1B,GAAAM,SAAAqB,GACA3B,GAAA4B,MAAAF,EAAAC,EAAAzf,GAEAkF,EAAA/F,GAAA2e,GAAAhB,MAAA2C,IAQAE,UAAA,SAAAxgB,EAAA+F,EAAA8X,GACA,IAAAwC,EAAAta,EAAA/F,GACAsgB,EAAAzC,EAAA7d,GAEA2e,GAAAM,SAAAoB,IAAA1B,GAAAM,SAAAqB,GACA3B,GAAA8B,QAAAJ,EAAAC,GACGva,EAAA1F,eAAAL,KACH+F,EAAA/F,GAAA2e,GAAAhB,MAAA2C,KAaAC,MAAA,SAAAxa,EAAA8X,EAAAhd,GACA,IAEA0f,EAAA9gB,EAAAG,EAAAugB,EAAA1U,EAFAiV,EAAA/B,GAAAI,QAAAlB,KAAA,CAAAA,GACAmC,EAAAU,EAAAnhB,OAGA,IAAAof,GAAAM,SAAAlZ,GACA,OAAAA,EAMA,IAHAlF,KAAA,GACA0f,EAAA1f,EAAA8f,QAAAhC,GAAAyB,QAEA3gB,EAAA,EAAaA,EAAAugB,IAAUvgB,EAEvB,GADAoe,EAAA6C,EAAAjhB,GACAkf,GAAAM,SAAApB,GAKA,IADAje,EAAAD,OAAAC,KAAAie,GACApS,EAAA,EAAA0U,EAAAvgB,EAAAL,OAAkCkM,EAAA0U,IAAU1U,EAC5C8U,EAAA3gB,EAAA6L,GAAA1F,EAAA8X,EAAAhd,GAIA,OAAAkF,GAUA0a,QAAA,SAAA1a,EAAA8X,GACA,OAAAc,GAAA4B,MAAAxa,EAAA8X,EAAA,CAAwC8C,OAAAhC,GAAA6B,aAUxCI,OAAA,SAAA7a,GAIA,IAHA,IAAA8a,EAAA,SAAA9jB,EAAAiD,GACA+F,EAAA/F,GAAAjD,GAEA0C,EAAA,EAAAugB,EAAA1b,UAAA/E,OAA0CE,EAAAugB,IAAUvgB,EACpDkf,GAAAc,KAAAnb,UAAA7E,GAAAohB,GAEA,OAAA9a,GAMA+a,SAAA,SAAAC,GACA,IAAAC,EAAArlB,KACAslB,EAAAF,KAAA1gB,eAAA,eAAA0gB,EAAAG,YAAA,WACA,OAAAF,EAAA3c,MAAA1I,KAAA2I,YAGA6c,EAAA,WACAxlB,KAAAulB,YAAAD,GAYA,OATAE,EAAA1d,UAAAud,EAAAvd,UACAwd,EAAAxd,UAAA,IAAA0d,EACAF,EAAAL,OAAAjC,GAAAmC,SAEAC,GACApC,GAAAiC,OAAAK,EAAAxd,UAAAsd,GAGAE,EAAAG,UAAAJ,EAAAvd,UACAwd,IAIAI,GAAA1C,GAWAA,GAAA2C,aAAA3C,GAAAW,SAUAX,GAAA1e,QAAA,SAAAshB,EAAAC,EAAAC,GACA,OAAApf,MAAAoB,UAAAxD,QAAAqX,KAAAiK,EAAAC,EAAAC,IAUA9C,GAAA+C,kBAAA/C,GAAAQ,eASAR,GAAAgD,yBAAAhD,GAAAU,sBAOA,IAAAuC,GAAA,CACAC,OAAA,SAAAlV,GACA,OAAAA,GAGAmV,WAAA,SAAAnV,GACA,OAAAA,KAGAoV,YAAA,SAAApV,GACA,OAAAA,KAAA,IAGAqV,cAAA,SAAArV,GACA,OAAAA,GAAA,MACA,GAAAA,KAEA,MAAAA,KAAA,OAGAsV,YAAA,SAAAtV,GACA,OAAAA,OAGAuV,aAAA,SAAAvV,GACA,OAAAA,GAAA,GAAAA,IAAA,GAGAwV,eAAA,SAAAxV,GACA,OAAAA,GAAA,MACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAGAyV,YAAA,SAAAzV,GACA,OAAAA,SAGA0V,aAAA,SAAA1V,GACA,SAAAA,GAAA,GAAAA,MAAA,IAGA2V,eAAA,SAAA3V,GACA,OAAAA,GAAA,MACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAGA4V,YAAA,SAAA5V,GACA,OAAAA,WAGA6V,aAAA,SAAA7V,GACA,OAAAA,GAAA,GAAAA,QAAA,GAGA8V,eAAA,SAAA9V,GACA,OAAAA,GAAA,MACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAGA+V,WAAA,SAAA/V,GACA,SAAAzB,KAAAuC,IAAAd,GAAAzB,KAAAoC,GAAA,KAGAqV,YAAA,SAAAhW,GACA,OAAAzB,KAAAwC,IAAAf,GAAAzB,KAAAoC,GAAA,KAGAsV,cAAA,SAAAjW,GACA,WAAAzB,KAAAuC,IAAAvC,KAAAoC,GAAAX,GAAA,IAGAkW,WAAA,SAAAlW,GACA,WAAAA,EAAA,EAAAzB,KAAAS,IAAA,MAAAgB,EAAA,KAGAmW,YAAA,SAAAnW,GACA,WAAAA,EAAA,IAAAzB,KAAAS,IAAA,MAAAgB,IAGAoW,cAAA,SAAApW,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,MACA,GAAAzB,KAAAS,IAAA,MAAAgB,EAAA,IAEA,MAAAzB,KAAAS,IAAA,QAAAgB,KAGAqW,WAAA,SAAArW,GACA,OAAAA,GAAA,EACAA,IAEAzB,KAAAqC,KAAA,EAAAZ,KAAA,IAGAsW,YAAA,SAAAtW,GACA,OAAAzB,KAAAqC,KAAA,GAAAZ,GAAA,GAAAA,IAGAuW,cAAA,SAAAvW,GACA,OAAAA,GAAA,OACA,IAAAzB,KAAAqC,KAAA,EAAAZ,KAAA,GAEA,IAAAzB,KAAAqC,KAAA,GAAAZ,GAAA,GAAAA,GAAA,IAGAwW,cAAA,SAAAxW,GACA,IAAA/B,EAAA,QACA6B,EAAA,EACA5J,EAAA,EACA,WAAA8J,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEA5J,EAAA,GACAA,EAAA,EACA+H,EAAA6B,EAAA,GAEA7B,EAAA6B,GAAA,EAAAvB,KAAAoC,IAAApC,KAAAkY,KAAA,EAAAvgB,IAEAA,EAAAqI,KAAAS,IAAA,MAAAgB,GAAA,IAAAzB,KAAAwC,KAAAf,EAAA/B,IAAA,EAAAM,KAAAoC,IAAAb,KAGA4W,eAAA,SAAA1W,GACA,IAAA/B,EAAA,QACA6B,EAAA,EACA5J,EAAA,EACA,WAAA8J,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEA5J,EAAA,GACAA,EAAA,EACA+H,EAAA6B,EAAA,GAEA7B,EAAA6B,GAAA,EAAAvB,KAAAoC,IAAApC,KAAAkY,KAAA,EAAAvgB,GAEAA,EAAAqI,KAAAS,IAAA,MAAAgB,GAAAzB,KAAAwC,KAAAf,EAAA/B,IAAA,EAAAM,KAAAoC,IAAAb,GAAA,IAGA6W,iBAAA,SAAA3W,GACA,IAAA/B,EAAA,QACA6B,EAAA,EACA5J,EAAA,EACA,WAAA8J,EACA,EAEA,KAAAA,GAAA,IACA,GAEAF,IACAA,EAAA,KAEA5J,EAAA,GACAA,EAAA,EACA+H,EAAA6B,EAAA,GAEA7B,EAAA6B,GAAA,EAAAvB,KAAAoC,IAAApC,KAAAkY,KAAA,EAAAvgB,GAEA8J,EAAA,EACA9J,EAAAqI,KAAAS,IAAA,MAAAgB,GAAA,IAAAzB,KAAAwC,KAAAf,EAAA/B,IAAA,EAAAM,KAAAoC,IAAAb,IAAA,GAEA5J,EAAAqI,KAAAS,IAAA,OAAAgB,GAAA,IAAAzB,KAAAwC,KAAAf,EAAA/B,IAAA,EAAAM,KAAAoC,IAAAb,GAAA,OAEA8W,WAAA,SAAA5W,GACA,IAAA/B,EAAA,QACA,OAAA+B,MAAA/B,EAAA,GAAA+B,EAAA/B,IAGA4Y,YAAA,SAAA7W,GACA,IAAA/B,EAAA,QACA,OAAA+B,GAAA,GAAAA,IAAA/B,EAAA,GAAA+B,EAAA/B,GAAA,GAGA6Y,cAAA,SAAA9W,GACA,IAAA/B,EAAA,QACA,OAAA+B,GAAA,MACAA,MAAA,GAAA/B,GAAA,QAAA+B,EAAA/B,GAAA,GAEA,KAAA+B,GAAA,GAAAA,IAAA,GAAA/B,GAAA,QAAA+B,EAAA/B,GAAA,IAGA8Y,aAAA,SAAA/W,GACA,SAAAiV,GAAA+B,cAAA,EAAAhX,IAGAgX,cAAA,SAAAhX,GACA,OAAAA,EAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAGAiX,gBAAA,SAAAjX,GACA,OAAAA,EAAA,GACA,GAAAiV,GAAA8B,aAAA,EAAA/W,GAEA,GAAAiV,GAAA+B,cAAA,EAAAhX,EAAA,QAIAkX,GAAA,CACAjC,YAYAP,GAAAyC,cAAAlC,GAEA,IAAAtU,GAAApC,KAAAoC,GACAyW,GAAAzW,GAAA,IACA0W,GAAA,EAAA1W,GACA2W,GAAA3W,GAAA,EACA4W,GAAA5W,GAAA,EACA6W,GAAA,EAAA7W,GAAA,EAKA8W,GAAA,CAKAC,MAAA,SAAA3lB,GACAA,EAAA4lB,IAAAC,UAAA,IAAA7lB,EAAAqD,MAAArD,EAAAsD,SAcAwiB,YAAA,SAAAF,EAAA3d,EAAAC,EAAA7E,EAAAC,EAAAyiB,GACA,GAAAA,EAAA,CACA,IAAA3Z,EAAAI,KAAAD,IAAAwZ,EAAAziB,EAAA,EAAAD,EAAA,GACA2iB,EAAA/d,EAAAmE,EACA6Z,EAAA/d,EAAAkE,EACA8Z,EAAAje,EAAA5E,EAAA+I,EACA+Z,EAAAje,EAAA5E,EAAA8I,EAEAwZ,EAAAQ,OAAAne,EAAAge,GACAD,EAAAE,GAAAD,EAAAE,GACAP,EAAAS,IAAAL,EAAAC,EAAA7Z,GAAAwC,IAAA2W,IACAK,EAAAS,IAAAH,EAAAD,EAAA7Z,GAAAmZ,GAAA,GACAK,EAAAS,IAAAH,EAAAC,EAAA/Z,EAAA,EAAAmZ,IACAK,EAAAS,IAAAL,EAAAG,EAAA/Z,EAAAmZ,GAAA3W,KACIoX,EAAAE,GACJN,EAAAQ,OAAAJ,EAAA9d,GACA0d,EAAAS,IAAAH,EAAAD,EAAA7Z,GAAAmZ,OACAK,EAAAS,IAAAL,EAAAC,EAAA7Z,EAAAmZ,GAAA3W,GAAA2W,KACIU,EAAAE,GACJP,EAAAS,IAAAL,EAAAC,EAAA7Z,GAAAwC,GAAA,GACAgX,EAAAS,IAAAL,EAAAG,EAAA/Z,EAAA,EAAAwC,KAEAgX,EAAAS,IAAAL,EAAAC,EAAA7Z,GAAAwC,OAEAgX,EAAAU,YACAV,EAAAQ,OAAAne,EAAAC,QAEA0d,EAAAW,KAAAte,EAAAC,EAAA7E,EAAAC,IAIAkjB,UAAA,SAAAZ,EAAA5iB,EAAA+iB,EAAA9d,EAAAC,EAAAue,GACA,IAAAjkB,EAAAkkB,EAAAC,EAAAC,EAAAC,EACAC,GAAAL,GAAA,GAAApB,GAEA,GAAAriB,GAAA,kBAAAA,IACAR,EAAAQ,EAAA2Y,WACA,8BAAAnZ,GAAA,+BAAAA,GACAojB,EAAAmB,UAAA/jB,EAAAiF,EAAAjF,EAAAK,MAAA,EAAA6E,EAAAlF,EAAAM,OAAA,EAAAN,EAAAK,MAAAL,EAAAM,aAKA,KAAA+X,MAAA0K,OAAA,IAMA,OAFAH,EAAAoB,YAEAhkB,GAEA,QACA4iB,EAAAS,IAAApe,EAAAC,EAAA6d,EAAA,EAAAT,IACAM,EAAAU,YACA,MACA,eACAV,EAAAQ,OAAAne,EAAAuE,KAAAwC,IAAA8X,GAAAf,EAAA7d,EAAAsE,KAAAuC,IAAA+X,GAAAf,GACAe,GAAArB,GACAG,EAAAqB,OAAAhf,EAAAuE,KAAAwC,IAAA8X,GAAAf,EAAA7d,EAAAsE,KAAAuC,IAAA+X,GAAAf,GACAe,GAAArB,GACAG,EAAAqB,OAAAhf,EAAAuE,KAAAwC,IAAA8X,GAAAf,EAAA7d,EAAAsE,KAAAuC,IAAA+X,GAAAf,GACAH,EAAAU,YACA,MACA,kBAQAO,EAAA,KAAAd,EACAa,EAAAb,EAAAc,EACAH,EAAAla,KAAAuC,IAAA+X,EAAAtB,IAAAoB,EACAD,EAAAna,KAAAwC,IAAA8X,EAAAtB,IAAAoB,EACAhB,EAAAS,IAAApe,EAAAye,EAAAxe,EAAAye,EAAAE,EAAAC,EAAAlY,GAAAkY,EAAAvB,IACAK,EAAAS,IAAApe,EAAA0e,EAAAze,EAAAwe,EAAAG,EAAAC,EAAAvB,GAAAuB,GACAlB,EAAAS,IAAApe,EAAAye,EAAAxe,EAAAye,EAAAE,EAAAC,IAAAvB,IACAK,EAAAS,IAAApe,EAAA0e,EAAAze,EAAAwe,EAAAG,EAAAC,EAAAvB,GAAAuB,EAAAlY,IACAgX,EAAAU,YACA,MACA,WACA,IAAAG,EAAA,CACAG,EAAApa,KAAA0a,QAAAnB,EACAH,EAAAW,KAAAte,EAAA2e,EAAA1e,EAAA0e,EAAA,EAAAA,EAAA,EAAAA,GACA,MAEAE,GAAAtB,GAEA,cACAkB,EAAAla,KAAAuC,IAAA+X,GAAAf,EACAY,EAAAna,KAAAwC,IAAA8X,GAAAf,EACAH,EAAAQ,OAAAne,EAAAye,EAAAxe,EAAAye,GACAf,EAAAqB,OAAAhf,EAAA0e,EAAAze,EAAAwe,GACAd,EAAAqB,OAAAhf,EAAAye,EAAAxe,EAAAye,GACAf,EAAAqB,OAAAhf,EAAA0e,EAAAze,EAAAwe,GACAd,EAAAU,YACA,MACA,eACAQ,GAAAtB,GAEA,YACAkB,EAAAla,KAAAuC,IAAA+X,GAAAf,EACAY,EAAAna,KAAAwC,IAAA8X,GAAAf,EACAH,EAAAQ,OAAAne,EAAAye,EAAAxe,EAAAye,GACAf,EAAAqB,OAAAhf,EAAAye,EAAAxe,EAAAye,GACAf,EAAAQ,OAAAne,EAAA0e,EAAAze,EAAAwe,GACAd,EAAAqB,OAAAhf,EAAA0e,EAAAze,EAAAwe,GACA,MACA,WACAA,EAAAla,KAAAuC,IAAA+X,GAAAf,EACAY,EAAAna,KAAAwC,IAAA8X,GAAAf,EACAH,EAAAQ,OAAAne,EAAAye,EAAAxe,EAAAye,GACAf,EAAAqB,OAAAhf,EAAAye,EAAAxe,EAAAye,GACAf,EAAAQ,OAAAne,EAAA0e,EAAAze,EAAAwe,GACAd,EAAAqB,OAAAhf,EAAA0e,EAAAze,EAAAwe,GACAI,GAAAtB,GACAkB,EAAAla,KAAAuC,IAAA+X,GAAAf,EACAY,EAAAna,KAAAwC,IAAA8X,GAAAf,EACAH,EAAAQ,OAAAne,EAAAye,EAAAxe,EAAAye,GACAf,EAAAqB,OAAAhf,EAAAye,EAAAxe,EAAAye,GACAf,EAAAQ,OAAAne,EAAA0e,EAAAze,EAAAwe,GACAd,EAAAqB,OAAAhf,EAAA0e,EAAAze,EAAAwe,GACA,MACA,WACAA,EAAAla,KAAAuC,IAAA+X,GAAAf,EACAY,EAAAna,KAAAwC,IAAA8X,GAAAf,EACAH,EAAAQ,OAAAne,EAAAye,EAAAxe,EAAAye,GACAf,EAAAqB,OAAAhf,EAAAye,EAAAxe,EAAAye,GACA,MACA,WACAf,EAAAQ,OAAAne,EAAAC,GACA0d,EAAAqB,OAAAhf,EAAAuE,KAAAuC,IAAA+X,GAAAf,EAAA7d,EAAAsE,KAAAwC,IAAA8X,GAAAf,GACA,MAGAH,EAAAuB,OACAvB,EAAAwB,WAUAC,eAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,KAEA,OAAAF,EAAArf,EAAAsf,EAAAvB,KAAAwB,GAAAF,EAAArf,EAAAsf,EAAArB,MAAAsB,GACAF,EAAApf,EAAAqf,EAAAtB,IAAAuB,GAAAF,EAAApf,EAAAqf,EAAApB,OAAAqB,GAGAC,SAAA,SAAA7B,EAAA2B,GACA3B,EAAA8B,OACA9B,EAAAoB,YACApB,EAAAW,KAAAgB,EAAAvB,KAAAuB,EAAAtB,IAAAsB,EAAArB,MAAAqB,EAAAvB,KAAAuB,EAAApB,OAAAoB,EAAAtB,KACAL,EAAA+B,QAGAC,WAAA,SAAAhC,GACAA,EAAAiC,WAGAZ,OAAA,SAAArB,EAAAkC,EAAAzgB,EAAA0gB,GACA,IAAAC,EAAA3gB,EAAA4gB,YACA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAA7f,EAAAZ,EAAAY,GAAA,EACA2d,EAAAqB,OAAAiB,EAAAH,EAAA1gB,EAAAa,EAAA4f,EAAA5f,GACA0d,EAAAqB,OAAAiB,EAAAH,EAAAD,EAAA5f,EAAAb,EAAAa,OACI,UAAA8f,IAAAD,GAAA,UAAAC,GAAAD,EACJnC,EAAAqB,OAAAa,EAAA7f,EAAAZ,EAAAa,GAEA0d,EAAAqB,OAAA5f,EAAAY,EAAA6f,EAAA5f,GAEA0d,EAAAqB,OAAA5f,EAAAY,EAAAZ,EAAAa,QAIAb,EAAA8gB,QAKAvC,EAAAwC,cACAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBACAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBACAT,EAAA1gB,EAAAihB,kBAAAjhB,EAAAghB,sBACAN,EAAA1gB,EAAAmhB,kBAAAnhB,EAAAkhB,sBACAlhB,EAAAY,EACAZ,EAAAa,GAVA0d,EAAAqB,OAAA5f,EAAAY,EAAAZ,EAAAa,KAcAugB,GAAA/C,GAWA/C,GAAAgD,MAAAD,GAAAC,MASAhD,GAAA+F,qBAAA,SAAA9C,GACAA,EAAAoB,YACAtB,GAAAI,YAAAngB,MAAA+f,GAAA9f,YAGA,IAAA+iB,GAAA,CAIAC,KAAA,SAAAC,EAAAxP,GACA,OAAAsJ,GAAAd,MAAA5kB,KAAA4rB,KAAA5rB,KAAA4rB,GAAA,IAA4DxP,KAI5DsP,GAAAC,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAAV,GAEAlI,GAAAkC,GAAAlC,eAQA,SAAA6I,GAAAC,GACA,OAAAA,GAAA5G,GAAAvC,cAAAmJ,EAAA3C,OAAAjE,GAAAvC,cAAAmJ,EAAAC,QACA,MAGAD,EAAAvmB,MAAAumB,EAAAvmB,MAAA,SACAumB,EAAA3K,OAAA2K,EAAA3K,OAAA,QACA2K,EAAA3C,KAAA,MACA2C,EAAAC,OAOA,IAAAC,GAAA,CASAC,aAAA,SAAArrB,EAAAuoB,GACA,IAAA+C,GAAA,GAAAtrB,GAAAiJ,MAAA,wCACA,IAAAqiB,GAAA,WAAAA,EAAA,GACA,WAAA/C,EAKA,OAFAvoB,GAAAsrB,EAAA,GAEAA,EAAA,IACA,SACA,OAAAtrB,EACA,QACAA,GAAA,IACA,MACA,QACA,MAGA,OAAAuoB,EAAAvoB,GAUAurB,UAAA,SAAAvrB,GACA,IAAA4P,EAAA7B,EAAAE,EAAAH,EAWA,OATAwW,GAAApC,SAAAliB,IACA4P,GAAA5P,EAAA4nB,KAAA,EACA7Z,GAAA/N,EAAA6nB,OAAA,EACA5Z,GAAAjO,EAAA8nB,QAAA,EACAha,GAAA9N,EAAA2nB,MAAA,GAEA/X,EAAA7B,EAAAE,EAAAH,GAAA9N,GAAA,EAGA,CACA4nB,IAAAhY,EACAiY,MAAA9Z,EACA+Z,OAAA7Z,EACA0Z,KAAA7Z,EACA7I,OAAA2K,EAAA3B,EACAjJ,MAAA8I,EAAAC,IAWAyd,WAAA,SAAA1nB,GACA,IAAA2nB,EAAAT,GAAAxgB,OACA+d,EAAAnG,GAAAte,EAAA4nB,SAAAD,EAAAb,iBACAM,EAAA,CACAC,OAAA/I,GAAAte,EAAA6nB,WAAAF,EAAAd,mBACAiB,WAAAtH,GAAAxgB,QAAAunB,aAAAjJ,GAAAte,EAAA8nB,WAAAH,EAAAX,mBAAAvC,GACAA,OACA5jB,MAAAyd,GAAAte,EAAA+nB,UAAAJ,EAAAZ,kBACAtK,OAAA,KACAjE,OAAA,IAIA,OADA4O,EAAA5O,OAAA2O,GAAAC,GACAA,GAYAY,QAAA,SAAAC,EAAAC,EAAAxK,GACA,IAAA9e,EAAAugB,EAAAjjB,EAEA,IAAA0C,EAAA,EAAAugB,EAAA8I,EAAAvpB,OAAmCE,EAAAugB,IAAUvgB,EAE7C,GADA1C,EAAA+rB,EAAArpB,QACAgH,IAAA1J,SAGA0J,IAAAsiB,GAAA,oBAAAhsB,IACAA,IAAAgsB,SAEAtiB,IAAA8X,GAAA8C,GAAAtC,QAAAhiB,KACAA,IAAAwhB,SAEA9X,IAAA1J,GACA,OAAAA,IAMAisB,GAAA3H,GACA4H,GAAApF,GACA9gB,GAAAokB,GACAtmB,GAAAsnB,GAKA,SAAAe,GAAAC,EAAAC,EAAAC,EAAAC,GACA,IACA7pB,EAAAugB,EAAAhgB,EAAAupB,EAAAC,EAAAzjB,EAAA7E,EAAAuoB,EAAAC,EADA9pB,EAAAD,OAAAC,KAAAypB,GAGA,IAAA5pB,EAAA,EAAAugB,EAAApgB,EAAAL,OAAgCE,EAAAugB,IAAUvgB,EAa1C,GAZAO,EAAAJ,EAAAH,GAEAsG,EAAAsjB,EAAArpB,GAIAopB,EAAA/oB,eAAAL,KACAopB,EAAAppB,GAAA+F,GAGAwjB,EAAAH,EAAAppB,GAEAupB,IAAAxjB,GAAA,MAAA/F,EAAA,IAYA,GARAmpB,EAAA9oB,eAAAL,KACAmpB,EAAAnpB,GAAAupB,GAGAC,EAAAL,EAAAnpB,GAEAkB,SAAA6E,EAEA7E,WAAAsoB,EACA,cAAAtoB,GAEA,GADAuoB,EAAA/K,GAAA8K,GACAC,EAAAhP,QACAiP,EAAAhL,GAAA3Y,GACA2jB,EAAAjP,OAAA,CACA2O,EAAAppB,GAAA0pB,EAAAtM,IAAAqM,EAAAH,GAAAxQ,YACA,eAGI,GAAAkQ,GAAA9J,SAAAsK,IAAAR,GAAA9J,SAAAnZ,GAAA,CACJqjB,EAAAppB,GAAAwpB,GAAAzjB,EAAAyjB,GAAAF,EACA,SAIAF,EAAAppB,GAAA+F,GAjDAijB,GAAAC,UACAD,GAAAjmB,UACAimB,GAAAnoB,WAmDA,IAAA8oB,GAAA,SAAAC,GACAZ,GAAApI,OAAAjlB,KAAAiuB,GACAjuB,KAAAkuB,WAAAxlB,MAAA1I,KAAA2I,YAGA0kB,GAAApI,OAAA+I,GAAAlmB,UAAA,CAEAomB,WAAA,WACAluB,KAAAmuB,QAAA,GAGAC,MAAA,WACA,IAAA/I,EAAArlB,KAKA,OAJAqlB,EAAAgJ,QACAhJ,EAAAgJ,MAAAhB,GAAArL,MAAAqD,EAAAiJ,SAEAjJ,EAAAkJ,OAAA,GACAlJ,GAGAmJ,WAAA,SAAAb,GACA,IAAAtI,EAAArlB,KACA0tB,EAAArI,EAAAiJ,OACAd,EAAAnI,EAAAkJ,OACAd,EAAApI,EAAAgJ,MAGA,OAAAX,GAAA,IAAAC,GAMAF,IACAA,EAAApI,EAAAgJ,MAAA,IAGAb,IACAA,EAAAnI,EAAAkJ,OAAA,IAGAhB,GAAAC,EAAAC,EAAAC,EAAAC,GAEAtI,IAfAA,EAAAgJ,MAAAX,EACArI,EAAAkJ,OAAA,KACAlJ,IAgBAoJ,gBAAA,WACA,OACAzjB,EAAAhL,KAAAsuB,OAAAtjB,EACAC,EAAAjL,KAAAsuB,OAAArjB,IAIAyjB,SAAA,WACA,OAAArB,GAAAsB,SAAA3uB,KAAAsuB,OAAAtjB,IAAAqiB,GAAAsB,SAAA3uB,KAAAsuB,OAAArjB,MAIA+iB,GAAA/I,OAAAoI,GAAAlI,SAEA,IAAAyJ,GAAAZ,GAEAa,GAAAD,GAAA3J,OAAA,CACAliB,MAAA,KACA+rB,YAAA,EACAC,SAAA,GACAzB,OAAA,GACAxtB,OAAA,KAEAkvB,oBAAA,KACAC,oBAAA,OAGAC,GAAAL,GAUA7qB,OAAAmrB,eAAAN,GAAA/mB,UAAA,mBACAsnB,IAAA,WACA,OAAApvB,QAUAgE,OAAAmrB,eAAAN,GAAA/mB,UAAA,iBACAsnB,IAAA,WACA,OAAApvB,KAAA+C,OAEAqG,IAAA,SAAAhI,GACApB,KAAA+C,MAAA3B,KAIAgrB,GAAAT,KAAA,UACA0D,UAAA,CACAC,SAAA,IACAhC,OAAA,eACAiC,WAAAlC,GAAApK,KACAuM,WAAAnC,GAAApK,QAIA,IAAAwM,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAA7sB,EAAAssB,EAAAC,EAAAO,GACA,IACA/rB,EAAAugB,EADAqL,EAAA1vB,KAAA0vB,WAWA,IARAL,EAAAtsB,QACAssB,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACA9sB,EAAAktB,WAAA,GAGAnsB,EAAA,EAAAugB,EAAAqL,EAAA9rB,OAAuCE,EAAAugB,IAAUvgB,EACjD,GAAA4rB,EAAA5rB,GAAAf,UAEA,YADA2sB,EAAA5rB,GAAAurB,GAKAK,EAAA3oB,KAAAsoB,GAGA,IAAAK,EAAA9rB,QACA5D,KAAAkwB,yBAIAC,gBAAA,SAAAptB,GACA,IAAA6f,EAAAyK,GAAA+C,UAAApwB,KAAA0vB,WAAA,SAAAL,GACA,OAAAA,EAAAtsB,aAGA,IAAA6f,IACA5iB,KAAA0vB,WAAAnlB,OAAAqY,EAAA,GACA7f,EAAAktB,WAAA,IAIAC,sBAAA,WACA,IAAA7K,EAAArlB,KACA,OAAAqlB,EAAAsK,UAIAtK,EAAAsK,QAAAtC,GAAAgD,iBAAA1U,KAAAmH,OAAA,WACAuC,EAAAsK,QAAA,KACAtK,EAAAiL,kBAQAA,YAAA,WACA,IAAAjL,EAAArlB,KAEAqlB,EAAAkL,UAGAlL,EAAAqK,WAAA9rB,OAAA,GACAyhB,EAAA6K,yBAOAK,QAAA,WACA,IACAlB,EAAAtsB,EAAAgsB,EAAAyB,EADAd,EAAA1vB,KAAA0vB,WAEA5rB,EAAA,EAGA,MAAAA,EAAA4rB,EAAA9rB,OACAyrB,EAAAK,EAAA5rB,GACAf,EAAAssB,EAAAtsB,MACAgsB,EAAAM,EAAAN,SAIAyB,EAAAjhB,KAAAqB,OAAAmf,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAP,GAAA,EACAM,EAAAP,YAAAvf,KAAAD,IAAAkhB,EAAAzB,GAEA1B,GAAA1J,SAAA0L,EAAAvvB,OAAA,CAAAiD,EAAAssB,GAAAtsB,GACAsqB,GAAA1J,SAAA0L,EAAAL,oBAAA,CAAAK,GAAAtsB,GAEAssB,EAAAP,aAAAC,GACA1B,GAAA1J,SAAA0L,EAAAJ,oBAAA,CAAAI,GAAAtsB,GACAA,EAAAktB,WAAA,EACAP,EAAAnlB,OAAAzG,EAAA,MAEAA,IAMAopB,GAAAG,GAAAnoB,QAAAgoB,QAEAuD,GAAA,0CAOA,SAAAC,GAAA9K,EAAA+K,GACA/K,EAAAgL,SACAhL,EAAAgL,SAAAC,UAAA9pB,KAAA4pB,IAIA3sB,OAAAmrB,eAAAvJ,EAAA,YACAkL,cAAA,EACAC,YAAA,EACA3vB,MAAA,CACAyvB,UAAA,CAAAF,MAIAF,GAAA5sB,QAAA,SAAAQ,GACA,IAAA2sB,EAAA,SAAA3sB,EAAAme,OAAA,GAAA7D,cAAAta,EAAAqX,MAAA,GACAuV,EAAArL,EAAAvhB,GAEAL,OAAAmrB,eAAAvJ,EAAAvhB,EAAA,CACAysB,cAAA,EACAC,YAAA,EACA3vB,MAAA,WACA,IAAA+O,EAAAzJ,MAAAoB,UAAA4T,MAAAC,KAAAhT,WACAuoB,EAAAD,EAAAvoB,MAAA1I,KAAAmQ,GAQA,OANAkd,GAAAvJ,KAAA8B,EAAAgL,SAAAC,UAAA,SAAAM,GACA,oBAAAA,EAAAH,IACAG,EAAAH,GAAAtoB,MAAAyoB,EAAAhhB,KAIA+gB,QAUA,SAAAE,GAAAxL,EAAA+K,GACA,IAAAU,EAAAzL,EAAAgL,SACA,GAAAS,EAAA,CAIA,IAAAR,EAAAQ,EAAAR,UACAjO,EAAAiO,EAAAvsB,QAAAqsB,IACA,IAAA/N,GACAiO,EAAAtmB,OAAAqY,EAAA,GAGAiO,EAAAjtB,OAAA,IAIA6sB,GAAA5sB,QAAA,SAAAQ,UACAuhB,EAAAvhB,YAGAuhB,EAAAgL,WAIA,IAAAU,GAAA,SAAAvuB,EAAAwuB,GACAvxB,KAAAkuB,WAAAnrB,EAAAwuB,IAGAlE,GAAApI,OAAAqM,GAAAxpB,UAAA,CAMA0pB,mBAAA,KAMAC,gBAAA,KAEAvD,WAAA,SAAAnrB,EAAAwuB,GACA,IAAAlM,EAAArlB,KACAqlB,EAAAtiB,QACAsiB,EAAAzC,MAAA2O,EACAlM,EAAAqM,aACArM,EAAAsM,eAGAC,YAAA,SAAAL,GACAvxB,KAAA4iB,MAAA2O,GAGAG,WAAA,WACA,IAAArM,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACAzuB,EAAAgiB,EAAA0M,aAEA,OAAAF,EAAAG,SAAAH,EAAAG,WAAA3M,EAAAtiB,MAAAkvB,SACAJ,EAAAG,QAAA3uB,EAAA2uB,SAAA3M,EAAAtiB,MAAAmC,QAAA+sB,OAAAC,MAAA,GAAA/rB,IAEA,OAAA0rB,EAAAM,SAAAN,EAAAM,WAAA9M,EAAAtiB,MAAAkvB,SACAJ,EAAAM,QAAA9uB,EAAA8uB,SAAA9M,EAAAtiB,MAAAmC,QAAA+sB,OAAAG,MAAA,GAAAjsB,KAIA4rB,WAAA,WACA,OAAA/xB,KAAA+C,MAAA0B,KAAAtB,SAAAnD,KAAA4iB,QAGAkP,QAAA,WACA,OAAA9xB,KAAA+C,MAAAsvB,eAAAryB,KAAA4iB,QAGA0P,cAAA,SAAAC,GACA,OAAAvyB,KAAA+C,MAAAkvB,OAAAM,IAMAC,iBAAA,WACA,OAAAxyB,KAAA8xB,UAAAK,SAMAM,iBAAA,WACA,OAAAzyB,KAAA8xB,UAAAE,SAMAU,eAAA,WACA,OAAA1yB,KAAAsyB,cAAAtyB,KAAAwyB,qBAMAG,eAAA,WACA,OAAA3yB,KAAAsyB,cAAAtyB,KAAAyyB,qBAGAG,MAAA,WACA5yB,KAAA+E,QAAA,IAMAC,QAAA,WACAhF,KAAA6yB,OACAzB,GAAApxB,KAAA6yB,MAAA7yB,OAIA8yB,kBAAA,WACA,IAAAzN,EAAArlB,KACAuF,EAAA8f,EAAAmM,mBACA,OAAAjsB,GAAA,IAAAA,EAAA,CACAtC,OAAAoiB,EAAAtiB,MACAgwB,cAAA1N,EAAAzC,SAIAoQ,eAAA,SAAApQ,GACA,IAAAyC,EAAArlB,KACAuF,EAAA8f,EAAAoM,gBACA,OAAAlsB,GAAA,IAAAA,EAAA,CACAtC,OAAAoiB,EAAAtiB,MACAgwB,cAAA1N,EAAAzC,MACAqQ,OAAArQ,KAIA+O,YAAA,WACA,IAIA7tB,EAAAugB,EAJAgB,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACArtB,EAAA4gB,EAAA0M,aAAAttB,MAAA,GACAyuB,EAAArB,EAAAptB,KAGA,IAAAX,EAAA,EAAAugB,EAAA5f,EAAAb,OAAiCE,EAAAugB,IAAUvgB,EAC3CovB,EAAApvB,GAAAovB,EAAApvB,IAAAuhB,EAAA2N,eAAAlvB,GAGA+tB,EAAAxuB,QAAAwuB,EAAAxuB,SAAAgiB,EAAAyN,qBAGAK,mBAAA,SAAAvQ,GACA,IAAAwQ,EAAApzB,KAAAgzB,eAAApQ,GACA5iB,KAAA8xB,UAAArtB,KAAA8F,OAAAqY,EAAA,EAAAwQ,GACApzB,KAAAqzB,cAAAD,EAAAxQ,GAAA,IAGA0Q,sBAAA,WACA,IAAAjO,EAAArlB,KACAqD,EAAAgiB,EAAA0M,aACAttB,EAAApB,EAAAoB,OAAApB,EAAAoB,KAAA,IAKA4gB,EAAAwN,QAAApuB,IACA4gB,EAAAwN,OAEAzB,GAAA/L,EAAAwN,MAAAxN,GAGA5gB,GAAAT,OAAAuvB,aAAA9uB,IACAisB,GAAAjsB,EAAA4gB,GAEAA,EAAAwN,MAAApuB,GAKA4gB,EAAAmO,kBAGAzuB,OAAAsoB,GAAApK,KAEAuL,WAAA,SAAAiF,GAMA,IALA,IAAA5B,EAAA7xB,KAAA8xB,UACA4B,EAAA7B,EAAAptB,MAAA,GACA4f,EAAAqP,EAAA9vB,OACAE,EAAA,EAEQA,EAAAugB,IAAUvgB,EAClB4vB,EAAA5vB,GAAA0qB,WAAAiF,GAGA5B,EAAAxuB,SACAwuB,EAAAxuB,QAAAmrB,WAAAiF,IAIAE,KAAA,WACA,IAAA9B,EAAA7xB,KAAA8xB,UACA4B,EAAA7B,EAAAptB,MAAA,GACA4f,EAAAqP,EAAA9vB,OACAE,EAAA,EAMA,IAJA+tB,EAAAxuB,SACAwuB,EAAAxuB,QAAAswB,OAGQ7vB,EAAAugB,IAAUvgB,EAClB4vB,EAAA5vB,GAAA6vB,QAIAC,iBAAA,SAAAR,GACA/F,GAAAzI,MAAAwO,EAAA9E,OAAA8E,EAAAS,gBAAA,WACAT,EAAAS,gBAGAC,cAAA,SAAAV,GACA,IAAA/vB,EAAArD,KAAA+C,MAAA0B,KAAAtB,SAAAiwB,EAAAL,eACAnQ,EAAAwQ,EAAAH,OACAc,EAAAX,EAAAW,QAAA,GACArG,EAAA0F,EAAA9E,OACA0F,EAAA3G,GAAA2G,cAEAZ,EAAAS,eAAA,CACA5qB,gBAAAykB,EAAAzkB,gBACAD,YAAA0kB,EAAA1kB,YACAirB,YAAAvG,EAAAuG,aAGAvG,EAAAzkB,gBAAAikB,GAAA,CAAA6G,EAAAG,qBAAA7wB,EAAA6wB,qBAAAF,EAAAtG,EAAAzkB,uBAAA6B,EAAA8X,GACA8K,EAAA1kB,YAAAkkB,GAAA,CAAA6G,EAAAI,iBAAA9wB,EAAA8wB,iBAAAH,EAAAtG,EAAA1kB,mBAAA8B,EAAA8X,GACA8K,EAAAuG,YAAA/G,GAAA,CAAA6G,EAAAK,iBAAA/wB,EAAA+wB,iBAAA1G,EAAAuG,kBAAAnpB,EAAA8X,IAMA4Q,eAAA,WACA,IAAAnO,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACArtB,EAAA4gB,EAAA0M,aAAAttB,KACA4vB,EAAAxC,EAAAptB,KAAAb,OACA0wB,EAAA7vB,EAAAb,OAEA0wB,EAAAD,EACAxC,EAAAptB,KAAA8F,OAAA+pB,EAAAD,EAAAC,GACGA,EAAAD,GACHhP,EAAAkP,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAA/G,EAAA/iB,GACA,QAAA3G,EAAA,EAAiBA,EAAA2G,IAAW3G,EAC5B9D,KAAAmzB,mBAAA3F,EAAA1pB,IAOA0wB,WAAA,WACA,IAAA/pB,EAAA9B,UAAA/E,OACA5D,KAAAu0B,eAAAv0B,KAAA+xB,aAAAttB,KAAAb,OAAA6G,MAMAgqB,UAAA,WACAz0B,KAAA8xB,UAAArtB,KAAAiwB,OAMAC,YAAA,WACA30B,KAAA8xB,UAAArtB,KAAAmwB,SAMAC,aAAA,SAAArH,EAAA/iB,GACAzK,KAAA8xB,UAAArtB,KAAA8F,OAAAijB,EAAA/iB,GACAzK,KAAAu0B,eAAA/G,EAAA7kB,UAAA/E,OAAA,IAMAkxB,cAAA,WACA90B,KAAAu0B,eAAA,EAAA5rB,UAAA/E,WAIA0tB,GAAArM,OAAAoI,GAAAlI,SAEA,IAAA4P,GAAAzD,GAEAlF,GAAAT,KAAA,UACA+H,SAAA,CACAtK,IAAA,CACAngB,gBAAAmjB,GAAAxgB,OAAAigB,aACA7iB,YAAA,OACAirB,YAAA,EACAe,YAAA,aAKA,IAAAC,GAAArG,GAAA3J,OAAA,CACAiQ,aAAA,SAAAC,GACA,IAAAC,EAAAp1B,KAAAquB,MAEA,QAAA+G,GACA7lB,KAAAS,IAAAmlB,EAAAC,EAAApqB,EAAA,GAAAuE,KAAAS,IAAAolB,EAAAtM,OAAAsM,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAAp1B,KAAAquB,MAEA,GAAA+G,EAAA,CACA,IAAAK,EAAApI,GAAAqI,kBAAAN,EAAA,CAAgEpqB,EAAAuqB,EAAAtqB,EAAAuqB,IAChEG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAGAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SACA,MAAAA,EAAAD,EACAC,GAAA,EAAAvmB,KAAAoC,GAEA,MAAAgkB,EAAAG,EACAH,GAAA,EAAApmB,KAAAoC,GAEA,MAAAgkB,EAAAE,EACAF,GAAA,EAAApmB,KAAAoC,GAIA,IAAAokB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YAEA,OAAAH,GAAAC,EAEA,UAGAG,eAAA,WACA,IAAAf,EAAAp1B,KAAAquB,MACA+H,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACAlrB,EAAAoqB,EAAApqB,EAAAuE,KAAAuC,IAAAskB,GAAAC,EACAprB,EAAAmqB,EAAAnqB,EAAAsE,KAAAwC,IAAAqkB,GAAAC,IAIAC,QAAA,WACA,IAAAlB,EAAAp1B,KAAAquB,MACA,OAAA9e,KAAAoC,KAAAyjB,EAAAU,SAAAV,EAAAS,aAAA,EAAAtmB,KAAAoC,MAAApC,KAAAS,IAAAolB,EAAAc,YAAA,GAAA3mB,KAAAS,IAAAolB,EAAAa,YAAA,KAGAxH,gBAAA,WACA,IAAA2G,EAAAp1B,KAAAquB,MACAkI,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YAEA,OACAjrB,EAAAoqB,EAAApqB,EAAAuE,KAAAuC,IAAAykB,GAAAC,EACAvrB,EAAAmqB,EAAAnqB,EAAAsE,KAAAwC,IAAAwkB,GAAAC,IAIA7C,KAAA,WACA,IAKA8C,EALA9N,EAAA3oB,KAAAiD,OAAA0lB,IACAyM,EAAAp1B,KAAAquB,MACAqI,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAGArM,EAAA8B,OAEA9B,EAAAoB,YACApB,EAAAS,IAAAgM,EAAApqB,EAAAoqB,EAAAnqB,EAAAsE,KAAAC,IAAA4lB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACAhO,EAAAS,IAAAgM,EAAApqB,EAAAoqB,EAAAnqB,EAAAmqB,EAAAa,YAAAU,EAAAD,GAAA,GACA/N,EAAAU,YAEAV,EAAAkO,UAAAzB,EAAAnsB,gBACA0f,EAAAuB,OAEAkL,EAAAnB,cACA,UAAAmB,EAAAJ,aAGArM,EAAAoB,YACA0M,EAAAG,EAAAxB,EAAAc,YACAvN,EAAAS,IAAAgM,EAAApqB,EAAAoqB,EAAAnqB,EAAAmqB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GACArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACAtN,EAAAS,IAAAgM,EAAApqB,EAAAoqB,EAAAnqB,EAAAmqB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEA9N,EAAAS,IAAAgM,EAAApqB,EAAAoqB,EAAAnqB,EAAA2rB,EAAAD,EAAApnB,KAAAoC,GAAA,EAAA+kB,EAAAnnB,KAAAoC,GAAA,GAEAgX,EAAAU,YACAV,EAAA+B,OAEA/B,EAAAoB,YACApB,EAAAS,IAAAgM,EAAApqB,EAAAoqB,EAAAnqB,EAAAmqB,EAAAc,YAAAQ,EAAAC,GACAhO,EAAAS,IAAAgM,EAAApqB,EAAAoqB,EAAAnqB,EAAAmqB,EAAAa,YAAAU,EAAAD,GAAA,GACA/N,EAAAU,YAEAV,EAAAmO,UAAA,EAAA1B,EAAAnB,YACAtL,EAAAoO,SAAA,UAEApO,EAAAmO,UAAA1B,EAAAnB,YACAtL,EAAAoO,SAAA,SAGApO,EAAAqO,YAAA5B,EAAApsB,YACA2f,EAAAwB,UAGAxB,EAAAiC,aAIAqM,GAAA5J,GAAA7J,eAEAqI,GAAAO,GAAAxgB,OAAAigB,aAEAO,GAAAT,KAAA,UACA+H,SAAA,CACAwD,KAAA,CACAhM,QAAA,GACAjiB,gBAAA4iB,GACAoI,YAAA,EACAjrB,YAAA6iB,GACAsL,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACArN,MAAA,MAKA,IAAAsN,GAAA5I,GAAA3J,OAAA,CACA0O,KAAA,WACA,IAQA/Q,EAAA6U,EAAA5M,EAAA6M,EARArS,EAAArlB,KACAo1B,EAAA/P,EAAAgJ,MACA1F,EAAAtD,EAAApiB,OAAA0lB,IACAgP,EAAAvC,EAAAuC,SACAC,EAAAvS,EAAAwS,UAAAnc,QACAmR,EAAAT,GAAAxgB,OACAksB,EAAAjL,EAAA6G,SAAAwD,KACAa,GAAA,EA2BA,IAvBA1S,EAAA2S,OAAAJ,EAAAh0B,QACAg0B,EAAA7wB,KAAA6wB,EAAA,IAGAjP,EAAA8B,OAGA9B,EAAAsP,QAAA7C,EAAA+B,gBAAAW,EAAAX,eAGAxO,EAAAuP,aACAvP,EAAAuP,YAAA9C,EAAAgC,YAAAU,EAAAV,YAGAzO,EAAAwP,eAAAlB,GAAA7B,EAAAiC,iBAAAS,EAAAT,kBACA1O,EAAAoO,SAAA3B,EAAAkC,iBAAAQ,EAAAR,gBACA3O,EAAAmO,UAAAG,GAAA7B,EAAAnB,YAAA6D,EAAA7D,aACAtL,EAAAqO,YAAA5B,EAAApsB,aAAA6jB,EAAAhB,aAGAlD,EAAAoB,YACAgO,GAAA,EAEAnV,EAAA,EAAiBA,EAAAgV,EAAAh0B,SAAuBgf,EACxC6U,EAAAG,EAAAhV,GACAiI,EAAAwC,GAAA+K,aAAAR,EAAAhV,GACA8U,EAAAD,EAAApJ,MAGA,IAAAzL,EACA8U,EAAAW,OACA1P,EAAAQ,OAAAuO,EAAA1sB,EAAA0sB,EAAAzsB,GACA8sB,EAAAnV,IAGAiI,GAAA,IAAAkN,EAAAlN,EAAA+M,EAAAG,GAEAL,EAAAW,OACAN,IAAAnV,EAAA,IAAA+U,IAAA,IAAAI,EAEApP,EAAAQ,OAAAuO,EAAA1sB,EAAA0sB,EAAAzsB,GAGAoiB,GAAAjmB,OAAA4iB,OAAArB,EAAAkC,EAAAwD,MAAAoJ,EAAApJ,OAEA0J,EAAAnV,IAKA+F,EAAAwB,SACAxB,EAAAiC,aAIA0N,GAAAjL,GAAA7J,eAEA+U,GAAAnM,GAAAxgB,OAAAigB,aAkBA,SAAA2M,GAAArD,GACA,IAAAC,EAAAp1B,KAAAquB,MACA,QAAA+G,GAAA7lB,KAAAkpB,IAAAtD,EAAAC,EAAApqB,GAAAoqB,EAAAtM,OAAAsM,EAAAsD,UAGA,SAAAC,GAAAC,GACA,IAAAxD,EAAAp1B,KAAAquB,MACA,QAAA+G,GAAA7lB,KAAAkpB,IAAAG,EAAAxD,EAAAnqB,GAAAmqB,EAAAtM,OAAAsM,EAAAsD,UAvBAtM,GAAAT,KAAA,UACA+H,SAAA,CACArJ,MAAA,CACAvB,OAAA,EACA+P,WAAA,SACA5vB,gBAAAsvB,GACAvvB,YAAAuvB,GACAtE,YAAA,EAEAyE,UAAA,EACArD,YAAA,EACAjB,iBAAA,MAeA,IAAA0E,GAAAlK,GAAA3J,OAAA,CACAqQ,QAAA,SAAAH,EAAAyD,GACA,IAAAxD,EAAAp1B,KAAAquB,MACA,QAAA+G,GAAA7lB,KAAAS,IAAAmlB,EAAAC,EAAApqB,EAAA,GAAAuE,KAAAS,IAAA4oB,EAAAxD,EAAAnqB,EAAA,GAAAsE,KAAAS,IAAAolB,EAAAsD,UAAAtD,EAAAtM,OAAA,IAGAoM,aAAAsD,GACAO,SAAAP,GACAQ,SAAAL,GAEAxC,eAAA,WACA,IAAAf,EAAAp1B,KAAAquB,MACA,OACArjB,EAAAoqB,EAAApqB,EACAC,EAAAmqB,EAAAnqB,IAIAqrB,QAAA,WACA,OAAA/mB,KAAAoC,GAAApC,KAAAS,IAAAhQ,KAAAquB,MAAAvF,OAAA,IAGA2F,gBAAA,WACA,IAAA2G,EAAAp1B,KAAAquB,MACA,OACArjB,EAAAoqB,EAAApqB,EACAC,EAAAmqB,EAAAnqB,EACAguB,QAAA7D,EAAAtM,OAAAsM,EAAAnB,cAIAN,KAAA,SAAAuF,GACA,IAAA9D,EAAAp1B,KAAAquB,MACA1F,EAAA3oB,KAAAiD,OAAA0lB,IACAkQ,EAAAzD,EAAAyD,WACArP,EAAA4L,EAAA5L,SACAV,EAAAsM,EAAAtM,OACA9d,EAAAoqB,EAAApqB,EACAC,EAAAmqB,EAAAnqB,EACA4hB,EAAAT,GAAAxgB,OACAigB,EAAAgB,EAAAhB,aAEAuJ,EAAAiD,YAKAvtB,IAAAouB,GAAA7L,GAAAjmB,OAAAgjB,eAAAgL,EAAA8D,MACAvQ,EAAAqO,YAAA5B,EAAApsB,aAAA6iB,EACAlD,EAAAmO,UAAAwB,GAAAlD,EAAAnB,YAAApH,EAAA6G,SAAArJ,MAAA4J,aACAtL,EAAAkO,UAAAzB,EAAAnsB,iBAAA4iB,EACAwB,GAAAjmB,OAAAmiB,UAAAZ,EAAAkQ,EAAA/P,EAAA9d,EAAAC,EAAAue,OAKA2P,GAAA/M,GAAAxgB,OAAAigB,aAaA,SAAAuN,GAAAhE,GACA,OAAAA,QAAAtqB,IAAAsqB,EAAAhvB,MASA,SAAAizB,GAAAjE,GACA,IAAAkE,EAAAC,EAAAC,EAAAhoB,EAAAioB,EAgBA,OAdAL,GAAAhE,IACAqE,EAAArE,EAAAhvB,MAAA,EACAkzB,EAAAlE,EAAApqB,EAAAyuB,EACAF,EAAAnE,EAAApqB,EAAAyuB,EACAD,EAAAjqB,KAAAD,IAAA8lB,EAAAnqB,EAAAmqB,EAAAnE,MACAzf,EAAAjC,KAAAC,IAAA4lB,EAAAnqB,EAAAmqB,EAAAnE,QAEAwI,EAAArE,EAAA/uB,OAAA,EACAizB,EAAA/pB,KAAAD,IAAA8lB,EAAApqB,EAAAoqB,EAAAnE,MACAsI,EAAAhqB,KAAAC,IAAA4lB,EAAApqB,EAAAoqB,EAAAnE,MACAuI,EAAApE,EAAAnqB,EAAAwuB,EACAjoB,EAAA4jB,EAAAnqB,EAAAwuB,GAGA,CACA1Q,KAAAuQ,EACAtQ,IAAAwQ,EACAvQ,MAAAsQ,EACArQ,OAAA1X,GAIA,SAAAkoB,GAAAC,EAAApV,EAAAqV,GACA,OAAAD,IAAApV,EAAAqV,EAAAD,IAAAC,EAAArV,EAAAoV,EAGA,SAAAE,GAAAzE,GACA,IAAA0E,EAAA1E,EAAA2E,cACA7I,EAAA,GAEA,OAAA4I,GAIA1E,EAAA4E,WACA5E,EAAAnE,KAAAmE,EAAApqB,IACA8uB,EAAAJ,GAAAI,EAAA,iBAEE1E,EAAAnE,KAAAmE,EAAAnqB,IACF6uB,EAAAJ,GAAAI,EAAA,iBAGA5I,EAAA4I,IAAA,EACA5I,GAZAA,EAeA,SAAA+I,GAAA7E,EAAA8E,EAAAC,GACA,IAEAnpB,EAAA7B,EAAAE,EAAAH,EAFA9N,EAAAg0B,EAAAnB,YACAoE,EAAAwB,GAAAzE,GAYA,OATA/H,GAAA/J,SAAAliB,IACA4P,GAAA5P,EAAA4nB,KAAA,EACA7Z,GAAA/N,EAAA6nB,OAAA,EACA5Z,GAAAjO,EAAA8nB,QAAA,EACAha,GAAA9N,EAAA2nB,MAAA,GAEA/X,EAAA7B,EAAAE,EAAAH,GAAA9N,GAAA,EAGA,CACA4P,EAAAqnB,EAAArP,KAAAhY,EAAA,IAAAA,EAAAmpB,IAAAnpB,EACA7B,EAAAkpB,EAAApP,OAAA9Z,EAAA,IAAAA,EAAA+qB,IAAA/qB,EACAE,EAAAgpB,EAAAnP,QAAA7Z,EAAA,IAAAA,EAAA8qB,IAAA9qB,EACAH,EAAAmpB,EAAAtP,MAAA7Z,EAAA,IAAAA,EAAAgrB,IAAAhrB,GAIA,SAAAkrB,GAAAhF,GACA,IAAAiF,EAAAhB,GAAAjE,GACAhvB,EAAAi0B,EAAApR,MAAAoR,EAAAtR,KACA1iB,EAAAg0B,EAAAnR,OAAAmR,EAAArR,IACAsR,EAAAL,GAAA7E,EAAAhvB,EAAA,EAAAC,EAAA,GAEA,OACAk0B,MAAA,CACAvvB,EAAAqvB,EAAAtR,KACA9d,EAAAovB,EAAArR,IACArZ,EAAAvJ,EACA4I,EAAA3I,GAEAkF,MAAA,CACAP,EAAAqvB,EAAAtR,KAAAuR,EAAAprB,EACAjE,EAAAovB,EAAArR,IAAAsR,EAAAtpB,EACArB,EAAAvJ,EAAAk0B,EAAAprB,EAAAorB,EAAAnrB,EACAH,EAAA3I,EAAAi0B,EAAAtpB,EAAAspB,EAAAjrB,IAKA,SAAAimB,GAAAF,EAAApqB,EAAAC,GACA,IAAAuvB,EAAA,OAAAxvB,EACAyvB,EAAA,OAAAxvB,EACAovB,KAAAjF,GAAAoF,GAAAC,IAAApB,GAAAjE,GAEA,OAAAiF,IACAG,GAAAxvB,GAAAqvB,EAAAtR,MAAA/d,GAAAqvB,EAAApR,SACAwR,GAAAxvB,GAAAovB,EAAArR,KAAA/d,GAAAovB,EAAAnR,QAzHAkD,GAAAT,KAAA,UACA+H,SAAA,CACAgH,UAAA,CACAzxB,gBAAAkwB,GACAnwB,YAAAmwB,GACAY,cAAA,SACA9F,YAAA,MAsHA,IAAA0G,GAAA/L,GAAA3J,OAAA,CACA0O,KAAA,WACA,IAAAhL,EAAA3oB,KAAAiD,OAAA0lB,IACAyM,EAAAp1B,KAAAquB,MACAuM,EAAAR,GAAAhF,GACAmF,EAAAK,EAAAL,MACAhvB,EAAAqvB,EAAArvB,MAEAod,EAAAkO,UAAAzB,EAAAnsB,gBACA0f,EAAAkS,SAAAN,EAAAvvB,EAAAuvB,EAAAtvB,EAAAsvB,EAAA5qB,EAAA4qB,EAAAvrB,GAEAurB,EAAA5qB,IAAApE,EAAAoE,GAAA4qB,EAAAvrB,IAAAzD,EAAAyD,IAIA2Z,EAAA8B,OACA9B,EAAAoB,YACApB,EAAAW,KAAAiR,EAAAvvB,EAAAuvB,EAAAtvB,EAAAsvB,EAAA5qB,EAAA4qB,EAAAvrB,GACA2Z,EAAA+B,OACA/B,EAAAkO,UAAAzB,EAAApsB,YACA2f,EAAAW,KAAA/d,EAAAP,EAAAO,EAAAN,EAAAM,EAAAoE,EAAApE,EAAAyD,GACA2Z,EAAAuB,KAAA,WACAvB,EAAAiC,YAGAvkB,OAAA,WACA,IAAA+uB,EAAAp1B,KAAAquB,MACA,OAAA+G,EAAAnE,KAAAmE,EAAAnqB,GAGAqqB,QAAA,SAAAH,EAAAyD,GACA,OAAAtD,GAAAt1B,KAAAquB,MAAA8G,EAAAyD,IAGA1D,aAAA,SAAAC,EAAAyD,GACA,IAAAxD,EAAAp1B,KAAAquB,MACA,OAAA+K,GAAAhE,GACAE,GAAAF,EAAAD,EAAA,MACAG,GAAAF,EAAA,KAAAwD,IAGAG,SAAA,SAAA5D,GACA,OAAAG,GAAAt1B,KAAAquB,MAAA8G,EAAA,OAGA6D,SAAA,SAAAJ,GACA,OAAAtD,GAAAt1B,KAAAquB,MAAA,KAAAuK,IAGAzC,eAAA,WACA,IACAnrB,EAAAC,EADAmqB,EAAAp1B,KAAAquB,MAUA,OARA+K,GAAAhE,IACApqB,EAAAoqB,EAAApqB,EACAC,GAAAmqB,EAAAnqB,EAAAmqB,EAAAnE,MAAA,IAEAjmB,GAAAoqB,EAAApqB,EAAAoqB,EAAAnE,MAAA,EACAhmB,EAAAmqB,EAAAnqB,GAGA,CAAUD,IAAAC,MAGVqrB,QAAA,WACA,IAAAlB,EAAAp1B,KAAAquB,MAEA,OAAA+K,GAAAhE,GACAA,EAAAhvB,MAAAmJ,KAAAkpB,IAAArD,EAAAnqB,EAAAmqB,EAAAnE,MACAmE,EAAA/uB,OAAAkJ,KAAAkpB,IAAArD,EAAApqB,EAAAoqB,EAAAnE,OAGAxC,gBAAA,WACA,IAAA2G,EAAAp1B,KAAAquB,MACA,OACArjB,EAAAoqB,EAAApqB,EACAC,EAAAmqB,EAAAnqB,MAKAyoB,GAAA,GACAoH,GAAA7F,GACA8F,GAAAvD,GACAwD,GAAAlC,GACAmC,GAAAN,GACAjH,GAAAoH,OACApH,GAAAqH,QACArH,GAAAsH,SACAtH,GAAAuH,aAEA,IAAAC,GAAA7N,GAAAnoB,QAAAgoB,QA4BA,SAAAiO,GAAAjd,EAAAkd,GACA,IAEAC,EAAAC,EAAAx3B,EAAAugB,EAFA/U,EAAA4O,EAAAqd,eAAArd,EAAA9X,MAAA8X,EAAA7X,OACAm1B,EAAAtd,EAAAud,WAGA,IAAA33B,EAAA,EAAAugB,EAAA+W,EAAAx3B,OAAkCE,EAAAugB,IAAUvgB,EAC5CwL,EAAAC,KAAAD,MAAAC,KAAAkpB,IAAA2C,EAAAt3B,GAAAs3B,EAAAt3B,EAAA,KAGA,IAAAA,EAAA,EAAAugB,EAAAmX,EAAA53B,OAAiCE,EAAAugB,IAAUvgB,EAC3Cw3B,EAAApd,EAAAwd,gBAAA53B,GACAwL,EAAAxL,EAAA,EAAAyL,KAAAD,MAAAgsB,EAAAD,GAAA/rB,EACA+rB,EAAAC,EAGA,OAAAhsB,EASA,SAAAqsB,GAAA/Y,EAAAgZ,EAAA12B,GACA,IAGAykB,EAAAtY,EAHAwqB,EAAA32B,EAAA42B,aACArxB,EAAAmxB,EAAAG,WACAT,EAAAM,EAAAR,OAAAxY,GAcA,OAXAyK,GAAAlK,cAAA0Y,IACAlS,EAAAiS,EAAAtsB,IAAApK,EAAA82B,mBACA3qB,EAAAnM,EAAA+2B,gBAKAtS,EAAAkS,EAAApxB,EACA4G,EAAA,GAGA,CACA6qB,MAAAvS,EAAAlf,EACA4G,QACAmc,MAAA8N,EAAA3R,EAAA,GAUA,SAAAwS,GAAAvZ,EAAAgZ,EAAA12B,GACA,IAKAsoB,EAAA7D,EALAyR,EAAAQ,EAAAR,OACAE,EAAAF,EAAAxY,GACAyY,EAAAzY,EAAA,EAAAwY,EAAAxY,EAAA,QACAwZ,EAAAxZ,EAAAwY,EAAAx3B,OAAA,EAAAw3B,EAAAxY,EAAA,QACAyZ,EAAAn3B,EAAA82B,mBAiBA,OAdA,OAAAX,IAGAA,EAAAC,GAAA,OAAAc,EAAAR,EAAAU,IAAAV,EAAApO,MAAA4O,EAAAd,IAGA,OAAAc,IAEAA,EAAAd,IAAAD,GAGA7N,EAAA8N,KAAA/rB,KAAAD,IAAA+rB,EAAAe,IAAA,EAAAC,EACA1S,EAAApa,KAAAkpB,IAAA2D,EAAAf,GAAA,EAAAgB,EAEA,CACAH,MAAAvS,EAAAiS,EAAAG,WACA1qB,MAAAnM,EAAA+2B,cACAzO,SAzGApB,GAAAT,KAAA,OACA4Q,MAAA,CACAC,KAAA,SAGAvK,OAAA,CACAC,MAAA,EACA3sB,KAAA,WACAy2B,mBAAA,GACAC,cAAA,GACAQ,QAAA,EACAC,UAAA,CACAC,iBAAA,KAIAvK,MAAA,EACA7sB,KAAA,cA4FA,IAAAq3B,GAAA7H,GAAA9P,OAAA,CAEAwM,gBAAAiC,GAAAuH,UAEA/M,WAAA,WACA,IACA2D,EADAxM,EAAArlB,KAGA+0B,GAAAjtB,UAAAomB,WAAAxlB,MAAA2c,EAAA1c,WAEAkpB,EAAAxM,EAAAyM,UACAD,EAAAgL,MAAAxX,EAAA0M,aAAA8K,MACAhL,EAAAiL,KAAA,GAGA/3B,OAAA,SAAA6tB,GACA,IAEA9uB,EAAAugB,EAFAgB,EAAArlB,KACA46B,EAAAvV,EAAAyM,UAAArtB,KAKA,IAFA4gB,EAAA0X,OAAA1X,EAAA2X,WAEAl5B,EAAA,EAAAugB,EAAAuW,EAAAh3B,OAAkCE,EAAAugB,IAAUvgB,EAC5CuhB,EAAAgO,cAAAuH,EAAA92B,KAAA8uB,IAIAS,cAAA,SAAAqH,EAAA9X,EAAAgQ,GACA,IAAAvN,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACAzuB,EAAAgiB,EAAA0M,aACA7sB,EAAAmgB,EAAA4X,uBAAAvC,EAAA9X,GAEA8X,EAAAwC,QAAA7X,EAAAiN,cAAAT,EAAAG,SACA0I,EAAAyC,QAAA9X,EAAAiN,cAAAT,EAAAM,SACAuI,EAAA3H,cAAA1N,EAAAzC,MACA8X,EAAAzH,OAAArQ,EACA8X,EAAApM,OAAA,CACArlB,gBAAA/D,EAAA+D,gBACAD,YAAA9D,EAAA8D,YACA+wB,cAAA70B,EAAA60B,cACA9F,YAAA/uB,EAAA+uB,YACAmJ,aAAA/5B,EAAAC,MACAA,MAAA+hB,EAAAtiB,MAAA0B,KAAAE,OAAAie,IAGAyC,EAAAgY,uBAAA3C,EAAA9X,EAAAgQ,GAEA8H,EAAAtM,SAMAiP,uBAAA,SAAA3C,EAAA9X,EAAAgQ,GACA,IAAAvN,EAAArlB,KACA0tB,EAAAgN,EAAApM,OACAgP,EAAAjY,EAAAqN,iBACAzB,EAAAqM,EAAAC,eACAvD,EAAAsD,EAAA/B,eACAK,EAAAvW,EAAA0X,QAAA1X,EAAA2X,WACAQ,EAAAnY,EAAAoY,wBAAApY,EAAAzC,SACA8a,EAAArY,EAAAsY,wBAAAtY,EAAAzC,QAAAgZ,GAEAlO,EAAAsM,aACAtM,EAAAuD,KAAA2B,EAAA3B,EAAAuM,EAAAvM,KACAvD,EAAA1iB,EAAAgvB,EAAApH,EAAA3B,EAAAuM,EAAAnyB,KAAAqyB,EAAAE,OACAlQ,EAAAziB,EAAA+uB,EAAA0D,EAAAE,OAAAhL,EAAA3B,EAAAuM,EAAAnyB,KACAqiB,EAAArnB,OAAA2zB,EAAA0D,EAAA/T,UAAA7e,EACA4iB,EAAAtnB,MAAA4zB,OAAAlvB,EAAA4yB,EAAA/T,MASAkU,WAAA,SAAAC,GACA,IAMAh6B,EAAA+tB,EANAxM,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAmb,EAAAmH,EAAAsN,iBACAoL,EAAA7f,EAAAhZ,QAAA64B,QACA1Z,OAAAvZ,IAAAgzB,EAAA/6B,EAAA0B,KAAAtB,SAAAS,OAAAk6B,EAAA,EACAE,EAAA,GAGA,IAAAl6B,EAAA,EAAaA,EAAAugB,IAAUvgB,EACvB+tB,EAAA9uB,EAAAsvB,eAAAvuB,GACA+tB,EAAAiL,KAAA/5B,EAAAk7B,iBAAAn6B,MACA,IAAAi6B,IACA,IAAAA,IAAA,IAAAC,EAAA15B,QAAAutB,EAAAgL,aACA/xB,IAAAizB,SAAAjzB,IAAA+mB,EAAAgL,QAAA,IAAAmB,EAAA15B,QAAAutB,EAAAgL,UACAmB,EAAAj3B,KAAA8qB,EAAAgL,OAIA,OAAAmB,GAOAE,cAAA,WACA,OAAAl+B,KAAA69B,aAAAj6B,QAUAu6B,cAAA,SAAA5M,EAAAxvB,GACA,IAAAi8B,EAAAh+B,KAAA69B,WAAAtM,GACA3O,OAAA9X,IAAA/I,EACAi8B,EAAA15B,QAAAvC,IACA,EAEA,WAAA6gB,EACAob,EAAAp6B,OAAA,EACAgf,GAMAoa,SAAA,WACA,IAQAl5B,EAAAugB,EAAA/U,EARA+V,EAAArlB,KACAke,EAAAmH,EAAAsN,iBACAoJ,EAAA1W,EAAA6Y,gBACA3M,EAAAlM,EAAAzC,MACA2Y,EAAArd,EAAAqd,eACA/N,EAAA+N,EAAArd,EAAA6K,KAAA7K,EAAA8K,IACAsT,EAAA9O,GAAA+N,EAAArd,EAAA9X,MAAA8X,EAAA7X,QACA+0B,EAAA,GAGA,IAAAt3B,EAAA,EAAAugB,EAAAgB,EAAAyM,UAAArtB,KAAAb,OAA8CE,EAAAugB,IAAUvgB,EACxDs3B,EAAAr0B,KAAAmX,EAAAkgB,iBAAA,KAAAt6B,EAAAytB,IAOA,OAJAjiB,EAAA+d,GAAAlK,cAAAjF,EAAAhZ,QAAA42B,cACAX,GAAAjd,EAAAkd,IACA,EAEA,CACA9rB,MACA8rB,SACA5N,QACA8O,MACAP,aACA7d,UAQAuf,wBAAA,SAAAlM,EAAA3O,GACA,IAWA9e,EAAAu6B,EAAAC,EAAArN,EAAA5lB,EAAAse,EAXAtE,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACA8uB,EAAAxM,EAAAyM,UACA5T,EAAAmH,EAAAqN,iBACA6I,EAAArd,EAAAqd,eACAp4B,EAAAJ,EAAA0B,KAAAtB,SACA/B,GAAA8c,EAAAqgB,cAAAp7B,EAAAouB,GAAA9sB,KAAAme,IACA4b,EAAAtgB,EAAAhZ,QAAAs5B,aACAT,EAAA7f,EAAAhZ,QAAA64B,QACAlB,EAAAhL,EAAAgL,MACArP,EAAA,EAGA,GAAAuQ,QAAAjzB,IAAAizB,QAAAjzB,IAAA+xB,EACA,IAAA/4B,EAAA,EAAcA,EAAAytB,IAAkBztB,EAChCu6B,EAAAt7B,EAAAsvB,eAAAvuB,GAEAu6B,EAAAvB,KACAuB,EAAAxB,WACAwB,EAAAI,WAAAjM,qBAAAtU,EAAA/X,IACApD,EAAAk7B,iBAAAn6B,KAEAw6B,GAAApgB,EAAAqgB,cAAAp7B,EAAAW,GAAAW,KAAAme,KACAxhB,EAAA,GAAAk9B,EAAA,GAAAl9B,GAAA,GAAAk9B,EAAA,KACA9Q,GAAA8Q,IAmBA,OAbArN,EAAA/S,EAAAkgB,iBAAA5Q,GACAniB,EAAA6S,EAAAkgB,iBAAA5Q,EAAApsB,GACAuoB,EAAAte,EAAA4lB,OAEAnmB,IAAA0zB,GAAAjvB,KAAAkpB,IAAA9O,GAAA6U,IACA7U,EAAA6U,EAEAnzB,EADAjK,GAAA,IAAAm6B,GAAAn6B,EAAA,GAAAm6B,EACAtK,EAAAuN,EAEAvN,EAAAuN,GAIA,CACA7U,OACAsH,OACA5lB,OACAuyB,OAAAvyB,EAAAse,EAAA,IAOAgU,wBAAA,SAAApM,EAAA3O,EAAAgZ,GACA,IAAAvW,EAAArlB,KACAkF,EAAA02B,EAAA1d,MAAAhZ,QACAw5B,EAAA,SAAAx5B,EAAA42B,aACAK,GAAAvZ,EAAAgZ,EAAA12B,GACAy2B,GAAA/Y,EAAAgZ,EAAA12B,GAEAy5B,EAAAtZ,EAAA8Y,cAAA5M,EAAAlM,EAAAyM,UAAA+K,OACAe,EAAAc,EAAAlR,MAAAkR,EAAAxC,MAAAyC,EAAAD,EAAAxC,MAAA,EACAvS,EAAApa,KAAAD,IACA+d,GAAA7J,eAAAte,EAAA05B,gBAAAC,KACAH,EAAAxC,MAAAwC,EAAArtB,OAEA,OACA4f,KAAA2M,EAAAjU,EAAA,EACAte,KAAAuyB,EAAAjU,EAAA,EACAiU,SACAjU,SAIAgK,KAAA,WACA,IAAAtO,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAmb,EAAAmH,EAAAqN,iBACAkI,EAAAvV,EAAAyM,UAAArtB,KACApB,EAAAgiB,EAAA0M,aACA1N,EAAAuW,EAAAh3B,OACAE,EAAA,EAIA,IAFAupB,GAAAjmB,OAAAojB,SAAAznB,EAAA4lB,IAAA5lB,EAAAm2B,WAEQp1B,EAAAugB,IAAUvgB,EAClBsa,MAAAF,EAAAqgB,cAAAl7B,EAAAoB,KAAAX,MACA82B,EAAA92B,GAAA6vB,OAIAtG,GAAAjmB,OAAAujB,WAAA5nB,EAAA4lB,MAMAsU,uBAAA,SAAAvC,EAAA9X,GACA,IAOA9e,EAAAugB,EAAAhgB,EAPAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAI,EAAAJ,EAAA0B,KAAAtB,SACAE,EAAAF,EAAAkiB,EAAAzC,OACAmR,EAAA2G,EAAA3G,QAAA,GACA7uB,EAAAnC,EAAAmC,QAAAwuB,SAAAgH,UACAte,EAAA,GAIAgR,EAAA,CACArqB,QACA+7B,UAAAlc,EACAvf,UACAkuB,aAAAlM,EAAAzC,OAGA3e,EAAA,CACA,kBACA,cACA,gBACA,eAGA,IAAAH,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAA62B,GAAA,CACAnH,EAAA1vB,GACAhB,EAAAgB,GACAa,EAAAb,IACA+oB,EAAAxK,GAGA,OAAAxG,KAIA2iB,GAAA1R,GAAA7J,eACAwb,GAAA3R,GAAAnoB,QAAAgoB,QAEAd,GAAAT,KAAA,UACA4Q,MAAA,CACAC,KAAA,UAGAvK,OAAA,CACAC,MAAA,EACA3sB,KAAA,SACA05B,SAAA,SACA94B,GAAA,aAEAisB,MAAA,EACA7sB,KAAA,SACA05B,SAAA,OACA94B,GAAA,cAIA+4B,SAAA,CACAC,UAAA,CACA7zB,MAAA,WAEA,UAEAhI,MAAA,SAAAuiB,EAAAphB,GACA,IAAA24B,EAAA34B,EAAAtB,SAAA0iB,EAAA0L,cAAAjuB,OAAA,GACA87B,EAAA36B,EAAAtB,SAAA0iB,EAAA0L,cAAA9sB,KAAAohB,EAAAjD,OACA,OAAAwa,EAAA,MAAAvX,EAAAwZ,OAAA,KAAAxZ,EAAAyZ,OAAA,KAAAF,EAAAjwB,EAAA,SAMA,IAAAowB,GAAAxK,GAAA9P,OAAA,CAIAwM,gBAAAiC,GAAAsH,MAKAj2B,OAAA,SAAA6tB,GACA,IAAAvN,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACA8F,EAAA/F,EAAAptB,KAGA4oB,GAAAvJ,KAAA8T,EAAA,SAAAvN,EAAAzH,GACAyC,EAAAgO,cAAAhJ,EAAAzH,EAAAgQ,MAOAS,cAAA,SAAAhJ,EAAAzH,EAAAgQ,GACA,IAAAvN,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACAiC,EAAA1J,EAAA0J,QAAA,GACAyL,EAAAna,EAAAiN,cAAAT,EAAAG,SACAyN,EAAApa,EAAAiN,cAAAT,EAAAM,SACAjtB,EAAAmgB,EAAA4X,uBAAA5S,EAAAzH,GACAne,EAAA4gB,EAAA0M,aAAAttB,KAAAme,GACA8c,EAAAra,EAAAzC,MAEA5X,EAAA4nB,EAAA4M,EAAAG,mBAAA,IAAAH,EAAApB,iBAAA,kBAAA35B,IAAAm7B,IAAAhd,EAAA8c,GACAz0B,EAAA2nB,EAAA6M,EAAAlC,eAAAkC,EAAArB,iBAAA35B,EAAAme,EAAA8c,GAEArV,EAAA6S,QAAAsC,EACAnV,EAAA8S,QAAAsC,EACApV,EAAAwV,SAAA36B,EACAmlB,EAAA0I,cAAA2M,EACArV,EAAA4I,OAAArQ,EACAyH,EAAAiE,OAAA,CACArlB,gBAAA/D,EAAA+D,gBACAD,YAAA9D,EAAA8D,YACAirB,YAAA/uB,EAAA+uB,YACAyE,UAAAxzB,EAAAwzB,UACAG,WAAA3zB,EAAA2zB,WACArP,SAAAtkB,EAAAskB,SACAV,OAAA8J,EAAA,EAAA1tB,EAAA4jB,OACAuP,KAAAtE,EAAAsE,MAAAja,MAAApT,IAAAoT,MAAAnT,GACAD,IACAC,KAGAof,EAAA+D,SAMA0F,cAAA,SAAAzJ,GACA,IAAAqD,EAAArD,EAAAiE,OACAppB,EAAAmlB,EAAAwV,SACA7L,EAAA3G,GAAA2G,cAEA3J,EAAAwJ,eAAA,CACA5qB,gBAAAykB,EAAAzkB,gBACAD,YAAA0kB,EAAA1kB,YACAirB,YAAAvG,EAAAuG,YACAnL,OAAA4E,EAAA5E,QAGA4E,EAAAzkB,gBAAA81B,GAAA75B,EAAAgvB,qBAAAF,EAAA9uB,EAAA+D,kBACAykB,EAAA1kB,YAAA+1B,GAAA75B,EAAAivB,iBAAAH,EAAA9uB,EAAA8D,cACA0kB,EAAAuG,YAAA8K,GAAA75B,EAAAkvB,iBAAAlvB,EAAA+uB,aACAvG,EAAA5E,OAAA5jB,EAAA4jB,OAAA5jB,EAAAmwB,aAMA4H,uBAAA,SAAA5S,EAAAzH,GACA,IAQA9e,EAAAugB,EAAAhgB,EARAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAI,EAAAJ,EAAA0B,KAAAtB,SACAE,EAAAF,EAAAkiB,EAAAzC,OACAmR,EAAA1J,EAAA0J,QAAA,GACA7uB,EAAAnC,EAAAmC,QAAAwuB,SAAArJ,MACA5lB,EAAApB,EAAAoB,KAAAme,GACAxG,EAAA,GAIAgR,EAAA,CACArqB,QACA+7B,UAAAlc,EACAvf,UACAkuB,aAAAlM,EAAAzC,OAGA3e,EAAA,CACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,aACA,YAGA,IAAAH,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAA26B,GAAA,CACAjL,EAAA1vB,GACAhB,EAAAgB,GACAa,EAAAb,IACA+oB,EAAAxK,GAWA,OAPAxG,EAAA0M,OAAAkW,GAAA,CACAjL,EAAAjL,OACArkB,IAAA0K,OAAArE,EACAzH,EAAAylB,OACA5jB,EAAA4jB,QACAsE,EAAAxK,GAEAxG,KAIA0jB,GAAAzS,GAAAnoB,QAAAgoB,QACA6S,GAAA1S,GAAA7J,eAEA4I,GAAAT,KAAA,YACA0D,UAAA,CAEA2Q,eAAA,EAEAC,cAAA,GAEA1D,MAAA,CACAC,KAAA,UAEA0D,eAAA,SAAAn9B,GACA,IAAAo9B,EAAA,GACAA,EAAAp5B,KAAA,cAAAhE,EAAAoD,GAAA,aAEA,IAAA1B,EAAA1B,EAAA0B,KACAtB,EAAAsB,EAAAtB,SACAwB,EAAAF,EAAAE,OAEA,GAAAxB,EAAAS,OACA,QAAAE,EAAA,EAAkBA,EAAAX,EAAA,GAAAsB,KAAAb,SAA6BE,EAC/Cq8B,EAAAp5B,KAAA,qCAAA5D,EAAA,GAAA8F,gBAAAnF,GAAA,aACAa,EAAAb,IACAq8B,EAAAp5B,KAAApC,EAAAb,IAEAq8B,EAAAp5B,KAAA,SAKA,OADAo5B,EAAAp5B,KAAA,SACAo5B,EAAAp2B,KAAA,KAEAq2B,OAAA,CACAz7B,OAAA,CACA07B,eAAA,SAAAt9B,GACA,IAAA0B,EAAA1B,EAAA0B,KACA,OAAAA,EAAAE,OAAAf,QAAAa,EAAAtB,SAAAS,OACAa,EAAAE,OAAAvB,IAAA,SAAAE,EAAAQ,GACA,IAAA+tB,EAAA9uB,EAAAsvB,eAAA,GACAiO,EAAA77B,EAAAtB,SAAA,GACAimB,EAAAyI,EAAAptB,KAAAX,GACAiwB,EAAA3K,KAAA2K,QAAA,GACAwM,EAAAx9B,EAAAmC,QAAAwuB,SAAAtK,IACAc,EAAA4V,GAAA,CAAA/L,EAAA9qB,gBAAAq3B,EAAAr3B,gBAAAs3B,EAAAt3B,sBAAA6B,EAAAhH,GACAqmB,EAAA2V,GAAA,CAAA/L,EAAA/qB,YAAAs3B,EAAAt3B,YAAAu3B,EAAAv3B,kBAAA8B,EAAAhH,GACA08B,EAAAV,GAAA,CAAA/L,EAAAE,YAAAqM,EAAArM,YAAAsM,EAAAtM,kBAAAnpB,EAAAhH,GAEA,OACAq8B,KAAA78B,EACAuzB,UAAA3M,EACA8M,YAAA7M,EACA2M,UAAA0J,EACArS,OAAA/P,MAAAkiB,EAAA77B,KAAAX,KAAA+tB,EAAAptB,KAAAX,GAAAqqB,OAGAvL,MAAA9e,KAIA,KAIA28B,QAAA,SAAAz0B,EAAA00B,GACA,IAEA58B,EAAAugB,EAAAwN,EAFAjP,EAAA8d,EAAA9d,MACA7f,EAAA/C,KAAA+C,MAGA,IAAAe,EAAA,EAAAugB,GAAAthB,EAAA0B,KAAAtB,UAAA,IAAAS,OAAyDE,EAAAugB,IAAUvgB,EACnE+tB,EAAA9uB,EAAAsvB,eAAAvuB,GAEA+tB,EAAAptB,KAAAme,KACAiP,EAAAptB,KAAAme,GAAAuL,QAAA0D,EAAAptB,KAAAme,GAAAuL,QAIAprB,EAAAgC,WAKA47B,iBAAA,GAGAnX,UAAA,GAAAja,KAAAoC,GAGAivB,cAAA,EAAArxB,KAAAoC,GAGAutB,SAAA,CACAC,UAAA,CACA7zB,MAAA,WACA,UAEAhI,MAAA,SAAAu9B,EAAAp8B,GACA,IAAAq8B,EAAAr8B,EAAAE,OAAAk8B,EAAAje,OACAxhB,EAAA,KAAAqD,EAAAtB,SAAA09B,EAAAtP,cAAA9sB,KAAAo8B,EAAAje,OAWA,OATAyK,GAAAjK,QAAA0d,IAGAA,IAAAplB,QACAolB,EAAA,IAAA1/B,GAEA0/B,GAAA1/B,EAGA0/B,OAMA,IAAAC,GAAAhM,GAAA9P,OAAA,CAEAwM,gBAAAiC,GAAAoH,IAEApJ,WAAArE,GAAApK,KAGA+d,aAAA,SAAAzP,GAGA,IAFA,IAAA0P,EAAA,EAEAC,EAAA,EAAiBA,EAAA3P,IAAkB2P,EACnClhC,KAAA+C,MAAAk7B,iBAAAiD,MACAD,EAIA,OAAAA,GAGAl8B,OAAA,SAAA6tB,GACA,IAaA9uB,EAAAugB,EAbAgB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAm2B,EAAAn2B,EAAAm2B,UACAiI,EAAAp+B,EAAAmC,QACAk8B,EAAAlI,EAAAjQ,MAAAiQ,EAAAnQ,KACAsY,EAAAnI,EAAAhQ,OAAAgQ,EAAAlQ,IACAsY,EAAA/xB,KAAAD,IAAA8xB,EAAAC,GACA5E,EAAA,CAAgBzxB,EAAA,EAAAC,EAAA,GAChB4mB,EAAAxM,EAAAyM,UACAyP,EAAA1P,EAAAptB,KACAk8B,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cACAY,EAAAnc,EAAAoc,eAAApc,EAAAzC,OAIA,GAAAge,EAAA,EAAArxB,KAAAoC,GAAA,CACA,IAAAkkB,EAAAsL,EAAA3X,UAAA,EAAAja,KAAAoC,IACAkkB,GAAA,EAAAtmB,KAAAoC,IAAAkkB,GAAAtmB,KAAAoC,IAAA,EAAAkkB,GAAAtmB,KAAAoC,GAAA,KACA,IAAAmkB,EAAAD,EAAA+K,EACApT,EAAA,CAAgBxiB,EAAAuE,KAAAuC,IAAA+jB,GAAA5qB,EAAAsE,KAAAwC,IAAA8jB,IAChByG,EAAA,CAActxB,EAAAuE,KAAAuC,IAAAgkB,GAAA7qB,EAAAsE,KAAAwC,IAAA+jB,IACd4L,EAAA7L,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAtmB,KAAAoC,IAAA,EAAApC,KAAAoC,IAAAmkB,EACA6L,EAAA9L,GAAA,GAAAtmB,KAAAoC,IAAA,GAAApC,KAAAoC,IAAAmkB,GAAAD,GAAA,IAAAtmB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAAmkB,EACA8L,EAAA/L,IAAAtmB,KAAAoC,KAAApC,KAAAoC,IAAAmkB,GAAAD,GAAAtmB,KAAAoC,IAAApC,KAAAoC,IAAAmkB,EACA+L,EAAAhM,GAAA,IAAAtmB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAAmkB,GAAAD,GAAA,IAAAtmB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAAmkB,EACAgM,EAAAnB,EAAA,IACArxB,EAAA,CAActE,EAAA42B,GAAA,EAAAryB,KAAAD,IAAAke,EAAAxiB,GAAAwiB,EAAAxiB,EAAA,IAAA82B,GAAAxF,EAAAtxB,GAAAsxB,EAAAtxB,EAAA,IAAA82B,IAAA72B,EAAA42B,GAAA,EAAAtyB,KAAAD,IAAAke,EAAAviB,GAAAuiB,EAAAviB,EAAA,IAAA62B,GAAAxF,EAAArxB,GAAAqxB,EAAArxB,EAAA,IAAA62B,KACdtyB,EAAA,CAAcxE,EAAA02B,EAAA,EAAAnyB,KAAAC,IAAAge,EAAAxiB,GAAAwiB,EAAAxiB,EAAA,IAAA82B,GAAAxF,EAAAtxB,GAAAsxB,EAAAtxB,EAAA,IAAA82B,IAAA72B,EAAA02B,EAAA,EAAApyB,KAAAC,IAAAge,EAAAviB,GAAAuiB,EAAAviB,EAAA,IAAA62B,GAAAxF,EAAArxB,GAAAqxB,EAAArxB,EAAA,IAAA62B,KACdnY,EAAA,CAAevjB,MAAA,IAAAoJ,EAAAxE,EAAAsE,EAAAtE,GAAA3E,OAAA,IAAAmJ,EAAAvE,EAAAqE,EAAArE,IACfq2B,EAAA/xB,KAAAD,IAAA8xB,EAAAzX,EAAAvjB,MAAAi7B,EAAA1X,EAAAtjB,QACAo2B,EAAA,CAAazxB,GAAA,IAAAwE,EAAAxE,EAAAsE,EAAAtE,GAAAC,GAAA,IAAAuE,EAAAvE,EAAAqE,EAAArE,IAGb,IAAAnH,EAAA,EAAAugB,EAAAkd,EAAA39B,OAAiCE,EAAAugB,IAAUvgB,EAC3Cy9B,EAAAz9B,GAAA+7B,SAAAxa,EAAA4X,uBAAAsE,EAAAz9B,MAeA,IAZAf,EAAAkxB,YAAA5O,EAAA0c,oBACAh/B,EAAAmzB,YAAA3mB,KAAAC,KAAA8xB,EAAAv+B,EAAAkxB,aAAA,KACAlxB,EAAAkzB,YAAA1mB,KAAAC,IAAAmxB,EAAA59B,EAAAmzB,YAAA,WACAnzB,EAAAi/B,cAAAj/B,EAAAmzB,YAAAnzB,EAAAkzB,cAAA5Q,EAAA4c,iCAAA,GACAl/B,EAAAm/B,QAAAzF,EAAAzxB,EAAAjI,EAAAmzB,YACAnzB,EAAAo/B,QAAA1F,EAAAxxB,EAAAlI,EAAAmzB,YAEArE,EAAAuQ,MAAA/c,EAAAgd,iBAEAhd,EAAA6Q,YAAAnzB,EAAAmzB,YAAAnzB,EAAAi/B,aAAA3c,EAAAid,qBAAAjd,EAAAzC,OACAyC,EAAA4Q,YAAA1mB,KAAAC,IAAA6V,EAAA6Q,YAAAnzB,EAAAi/B,aAAAR,EAAA,GAEA19B,EAAA,EAAAugB,EAAAkd,EAAA39B,OAAiCE,EAAAugB,IAAUvgB,EAC3CuhB,EAAAgO,cAAAkO,EAAAz9B,KAAA8uB,IAIAS,cAAA,SAAAjK,EAAAxG,EAAAgQ,GACA,IAAAvN,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAm2B,EAAAn2B,EAAAm2B,UACAiI,EAAAp+B,EAAAmC,QACAq9B,EAAApB,EAAA9R,UACAmT,GAAAtJ,EAAAnQ,KAAAmQ,EAAAjQ,OAAA,EACAwZ,GAAAvJ,EAAAlQ,IAAAkQ,EAAAhQ,QAAA,EACA2M,EAAAsL,EAAA3X,SACAsM,EAAAqL,EAAA3X,SACAnmB,EAAAgiB,EAAA0M,aACA6O,EAAAhO,GAAA2P,EAAAvC,cAAA,EAAA5W,EAAA+E,OAAA,EAAA9I,EAAAqd,uBAAAr/B,EAAAoB,KAAAme,KAAAue,EAAAP,eAAA,EAAArxB,KAAAoC,KACAskB,EAAArD,GAAA2P,EAAAtC,aAAA,EAAA5a,EAAA4Q,YACAC,EAAAtD,GAAA2P,EAAAtC,aAAA,EAAA5a,EAAA6Q,YACAhxB,EAAAkkB,EAAAyW,UAAA,GAEAxS,GAAApI,OAAAmE,EAAA,CAEA2J,cAAA1N,EAAAzC,MACAqQ,OAAArQ,EAGA0L,OAAA,CACArlB,gBAAA/D,EAAA+D,gBACAD,YAAA9D,EAAA8D,YACAirB,YAAA/uB,EAAA+uB,YACAe,YAAA9vB,EAAA8vB,YACAhqB,EAAAw3B,EAAAz/B,EAAAm/B,QACAj3B,EAAAw3B,EAAA1/B,EAAAo/B,QACAtM,aACAC,WACA8K,gBACA1K,cACAD,cACA3yB,MAAA+pB,GAAA3J,sBAAArgB,EAAAC,MAAAsf,EAAA7f,EAAA0B,KAAAE,OAAAie,OAIA,IAAA8K,EAAAtE,EAAAkF,OAGAsE,GAAA2P,EAAAvC,gBAEAtS,EAAAmI,WADA,IAAAjT,EACAue,EAAA3X,SAEAnE,EAAAyM,UAAArtB,KAAAme,EAAA,GAAA0L,OAAAwH,SAGApI,EAAAoI,SAAApI,EAAAmI,WAAAnI,EAAAkT,eAGAxX,EAAAgF,SAGAiU,eAAA,WACA,IAGAjhC,EAHAiC,EAAArD,KAAA+xB,aACAF,EAAA7xB,KAAA8xB,UACAsQ,EAAA,EAcA,OAXA/U,GAAAvJ,KAAA+N,EAAAptB,KAAA,SAAA2uB,EAAAxQ,GACAxhB,EAAAiC,EAAAoB,KAAAme,GACAxE,MAAAhd,IAAAgyB,EAAAjF,SACAiU,GAAA7yB,KAAAkpB,IAAAr3B,MAQAghC,GAGAM,uBAAA,SAAAthC,GACA,IAAAghC,EAAApiC,KAAA8xB,UAAAsQ,MACA,OAAAA,EAAA,IAAAhkB,MAAAhd,GACA,EAAAmO,KAAAoC,IAAApC,KAAAkpB,IAAAr3B,GAAAghC,GAEA,GAIAL,kBAAA,SAAAR,GACA,IAGAz9B,EAAAugB,EAAAwN,EAAAzI,EAAAqV,EAAAv5B,EAAA+uB,EAAA0O,EAHAtd,EAAArlB,KACAwP,EAAA,EACAzM,EAAAsiB,EAAAtiB,MAGA,IAAAw+B,EAEA,IAAAz9B,EAAA,EAAAugB,EAAAthB,EAAA0B,KAAAtB,SAAAS,OAAiDE,EAAAugB,IAAUvgB,EAC3D,GAAAf,EAAAk7B,iBAAAn6B,GAAA,CACA+tB,EAAA9uB,EAAAsvB,eAAAvuB,GACAy9B,EAAA1P,EAAAptB,KACAX,IAAAuhB,EAAAzC,QACA6b,EAAA5M,EAAA4M,YAEA,MAKA,IAAA8C,EACA,SAGA,IAAAz9B,EAAA,EAAAugB,EAAAkd,EAAA39B,OAAiCE,EAAAugB,IAAUvgB,EAC3CslB,EAAAmY,EAAAz9B,GACAoB,EAAAu5B,IAAAxB,uBAAA7T,EAAAtlB,GAAAslB,EAAAyW,SACA,UAAA36B,EAAA8vB,cACAf,EAAA/uB,EAAA+uB,YACA0O,EAAAz9B,EAAAkvB,iBAEA5kB,EAAAykB,EAAAzkB,EAAAykB,EAAAzkB,EACAA,EAAAmzB,EAAAnzB,EAAAmzB,EAAAnzB,GAGA,OAAAA,GAMAskB,cAAA,SAAA1K,GACA,IAAAsE,EAAAtE,EAAAkF,OACAppB,EAAAkkB,EAAAyW,SACA7L,EAAA3G,GAAA2G,cAEA5K,EAAAyK,eAAA,CACA5qB,gBAAAykB,EAAAzkB,gBACAD,YAAA0kB,EAAA1kB,YACAirB,YAAAvG,EAAAuG,aAGAvG,EAAAzkB,gBAAA82B,GAAA76B,EAAAgvB,qBAAAF,EAAA9uB,EAAA+D,kBACAykB,EAAA1kB,YAAA+2B,GAAA76B,EAAAivB,iBAAAH,EAAA9uB,EAAA8D,cACA0kB,EAAAuG,YAAA8L,GAAA76B,EAAAkvB,iBAAAlvB,EAAA+uB,cAMAgJ,uBAAA,SAAA7T,EAAAxG,GACA,IAMA9e,EAAAugB,EAAAhgB,EANAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAM,EAAAgiB,EAAA0M,aACAgC,EAAA3K,EAAA2K,QAAA,GACA7uB,EAAAnC,EAAAmC,QAAAwuB,SAAAtK,IACAhN,EAAA,GAIAgR,EAAA,CACArqB,QACA+7B,UAAAlc,EACAvf,UACAkuB,aAAAlM,EAAAzC,OAGA3e,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAH,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAAy7B,GAAA,CACA/L,EAAA1vB,GACAhB,EAAAgB,GACAa,EAAAb,IACA+oB,EAAAxK,GAGA,OAAAxG,GAOAkmB,qBAAA,SAAA/Q,GAGA,IAFA,IAAAqR,EAAA,EAEA9+B,EAAA,EAAiBA,EAAAytB,IAAkBztB,EACnC9D,KAAA+C,MAAAk7B,iBAAAn6B,KACA8+B,GAAA5iC,KAAAyhC,eAAA39B,IAIA,OAAA8+B,GAMAnB,eAAA,SAAAoB,GACA,OAAAtzB,KAAAC,IAAAuwB,GAAA//B,KAAA+C,MAAA0B,KAAAtB,SAAA0/B,GAAAlhB,OAAA,OAOAsgB,8BAAA,WACA,OAAAjiC,KAAAsiC,qBAAAtiC,KAAA+C,MAAA0B,KAAAtB,SAAAS,WAIAwoB,GAAAT,KAAA,iBACA4Q,MAAA,CACAC,KAAA,QACAsG,KAAA,KAGA7Q,OAAA,CACAC,MAAA,EACA3sB,KAAA,SACA05B,SAAA,WAGA7M,MAAA,EACA7sB,KAAA,WACA05B,SAAA,OACAjD,mBAAA,GACAC,cAAA,GACAQ,QAAA,EACAC,UAAA,CACAC,iBAAA,MAKAjJ,SAAA,CACAgH,UAAA,CACAX,cAAA,SAIAmF,SAAA,CACA1C,KAAA,QACAsG,KAAA,OAIA,IAAAC,GAAAnG,GAAA3X,OAAA,CAIAuN,iBAAA,WACA,OAAAxyB,KAAA8xB,UAAAE,SAMAS,iBAAA,WACA,OAAAzyB,KAAA8xB,UAAAK,WAIA6Q,GAAA3V,GAAA7J,eACAyf,GAAA5V,GAAAnoB,QAAAgoB,QACAgW,GAAA7V,GAAAjmB,OAAAgjB,eAsBA,SAAA+Y,GAAA9/B,EAAA6B,GACA,OAAA89B,GAAA3/B,EAAA+/B,SAAAl+B,EAAAinB,WArBAC,GAAAT,KAAA,QACAQ,WAAA,EACAwL,UAAA,EAEA4E,MAAA,CACAC,KAAA,SAGAvK,OAAA,CACAC,MAAA,EACA3sB,KAAA,WACAY,GAAA,aAEAisB,MAAA,EACA7sB,KAAA,SACAY,GAAA,gBASA,IAAAk9B,GAAAtO,GAAA9P,OAAA,CAEAuM,mBAAAkC,GAAAqH,KAEAtJ,gBAAAiC,GAAAsH,MAEAj2B,OAAA,SAAA6tB,GACA,IAOA9uB,EAAAugB,EAPAgB,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACAoF,EAAArF,EAAAxuB,QACAu0B,EAAA/F,EAAAptB,MAAA,GACAyZ,EAAAmH,EAAAiN,cAAAT,EAAAM,SACA9uB,EAAAgiB,EAAA0M,aACAqR,EAAAD,GAAA9/B,EAAAgiB,EAAAtiB,MAAAmC,SAsBA,IAlBAk+B,SAEAt4B,IAAAzH,EAAA6nB,cAAApgB,IAAAzH,EAAAigC,cACAjgC,EAAAigC,YAAAjgC,EAAA6nB,SAIAgM,EAAAqM,OAAArlB,EACAgZ,EAAAnE,cAAA1N,EAAAzC,MAEAsU,EAAAW,UAAAD,EAEAV,EAAA5I,OAAAjJ,EAAAme,oBAAAtM,GAEAA,EAAA9I,SAIAtqB,EAAA,EAAAugB,EAAAuT,EAAAh0B,OAAmCE,EAAAugB,IAAUvgB,EAC7CuhB,EAAAgO,cAAAuE,EAAA9zB,KAAA8uB,GAQA,IALAwQ,GAAA,IAAAlM,EAAA5I,OAAApD,SACA7F,EAAAoe,4BAIA3/B,EAAA,EAAAugB,EAAAuT,EAAAh0B,OAAmCE,EAAAugB,IAAUvgB,EAC7C8zB,EAAA9zB,GAAAsqB,SAIAiF,cAAA,SAAAhJ,EAAAzH,EAAAgQ,GACA,IASA5nB,EAAAC,EATAoa,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACAiC,EAAA1J,EAAA0J,QAAA,GACA1wB,EAAAgiB,EAAA0M,aACAR,EAAAlM,EAAAzC,MACAxhB,EAAAiC,EAAAoB,KAAAme,GACA6c,EAAApa,EAAAiN,cAAAT,EAAAM,SACAqN,EAAAna,EAAAiN,cAAAT,EAAAG,SACA0R,EAAA7R,EAAAxuB,QAAAirB,OAGAppB,EAAAmgB,EAAAse,qBAAAtZ,EAAAzH,GAEA5X,EAAAw0B,EAAApB,iBAAA,kBAAAh9B,IAAAw+B,IAAAhd,EAAA2O,GACAtmB,EAAA2nB,EAAA6M,EAAAlC,eAAAlY,EAAAue,gBAAAxiC,EAAAwhB,EAAA2O,GAGAlH,EAAA6S,QAAAsC,EACAnV,EAAA8S,QAAAsC,EACApV,EAAAwV,SAAA36B,EACAmlB,EAAA0I,cAAAxB,EACAlH,EAAA4I,OAAArQ,EAGAyH,EAAAiE,OAAA,CACAtjB,IACAC,IACAotB,KAAAtE,EAAAsE,MAAAja,MAAApT,IAAAoT,MAAAnT,GAEA6d,OAAA5jB,EAAA4jB,OACA+P,WAAA3zB,EAAA2zB,WACArP,SAAAtkB,EAAAskB,SACAvgB,gBAAA/D,EAAA+D,gBACAD,YAAA9D,EAAA8D,YACAirB,YAAA/uB,EAAA+uB,YACA/I,QAAA8X,GAAAjP,EAAA7I,QAAAwY,IAAAxY,QAAA,GACAF,cAAA0Y,KAAA1Y,YAEA0N,UAAAxzB,EAAAwzB,YAOAiL,qBAAA,SAAAvQ,EAAAxQ,GACA,IAMA9e,EAAAugB,EAAAhgB,EANAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAM,EAAAN,EAAA0B,KAAAtB,SAAAkiB,EAAAzC,OACAmR,EAAAX,EAAAW,QAAA,GACA7uB,EAAAnC,EAAAmC,QAAAwuB,SAAArJ,MACAjO,EAAA,GAIAgR,EAAA,CACArqB,QACA+7B,UAAAlc,EACAvf,UACAkuB,aAAAlM,EAAAzC,OAGAihB,EAAA,CACA56B,gBAAA,uBACAD,YAAA,mBACAirB,YAAA,mBACAyE,UAAA,iBACAxE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAiB,YAAA,mBACAwD,WAAA,aACA/P,OAAA,cACAU,SAAA,iBAEAvlB,EAAAD,OAAAC,KAAA4/B,GAEA,IAAA//B,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAA4+B,GAAA,CACAlP,EAAA1vB,GACAhB,EAAAwgC,EAAAx/B,IACAhB,EAAAgB,GACAa,EAAAb,IACA+oB,EAAAxK,GAGA,OAAAxG,GAMAonB,oBAAA,SAAApQ,GACA,IAOAtvB,EAAAugB,EAAAhgB,EAPAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAM,EAAAN,EAAA0B,KAAAtB,SAAAkiB,EAAAzC,OACAmR,EAAAX,EAAAW,QAAA,GACA7uB,EAAAnC,EAAAmC,QACA4+B,EAAA5+B,EAAAwuB,SAAAwD,KACA9a,EAAA,GAGAnY,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,OACA,0BAGA,IAAAH,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAA4+B,GAAA,CACAlP,EAAA1vB,GACAhB,EAAAgB,GACAy/B,EAAAz/B,KAWA,OAJA+X,EAAAub,SAAAqL,GAAA3/B,EAAAs0B,SAAAzyB,EAAAyyB,UACAvb,EAAA8O,QAAA8X,GAAA3/B,EAAAigC,YAAAQ,EAAA5Y,SACA9O,EAAA4O,YAAAiY,GAAA,CAAAlP,EAAA/I,YAAA3nB,EAAA2nB,YAAA8Y,EAAA/Y,UAEA3O,GAGAwnB,gBAAA,SAAAxiC,EAAAwhB,EAAA2O,GACA,IAMAztB,EAAAw8B,EAAAyD,EANA1e,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACA8uB,EAAAxM,EAAAyM,UACA2N,EAAApa,EAAAiN,cAAAT,EAAAM,SACA6R,EAAA,EACAC,EAAA,EAGA,GAAAxE,EAAAv6B,QAAA64B,QAAA,CACA,IAAAj6B,EAAA,EAAcA,EAAAytB,EAAkBztB,IAGhC,GAFAw8B,EAAAv9B,EAAA0B,KAAAtB,SAAAW,GACAigC,EAAAhhC,EAAAsvB,eAAAvuB,GACA,SAAAigC,EAAAx+B,MAAAw+B,EAAA5R,UAAAsN,EAAAt5B,IAAApD,EAAAk7B,iBAAAn6B,GAAA,CACA,IAAAogC,EAAA19B,OAAAi5B,EAAAlB,cAAA+B,EAAA77B,KAAAme,KACAshB,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAA39B,OAAAi5B,EAAAlB,cAAAn9B,IACA,OAAA+iC,EAAA,EACA1E,EAAArB,iBAAA6F,EAAAE,GAEA1E,EAAArB,iBAAA4F,EAAAG,GAGA,OAAA1E,EAAArB,iBAAAh9B,IAGAqiC,0BAAA,WACA,IAMA3/B,EAAAugB,EAAAqJ,EAAA0W,EANA/e,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACA8uB,EAAAxM,EAAAyM,UACA4R,EAAA7R,EAAAxuB,QAAAirB,OACAhE,EAAAvnB,EAAAm2B,UACAtB,EAAA/F,EAAAptB,MAAA,GAUA,SAAA4/B,EAAAC,EAAAh1B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAg1B,EAAA90B,GAAAF,GAGA,GAVAo0B,EAAA/L,WACAC,IAAAxzB,OAAA,SAAAkgC,GACA,OAAAA,EAAAhW,OAAA+J,QAQA,aAAAqL,EAAAa,uBACAlX,GAAAmX,oBAAA5M,QAEA,IAAA9zB,EAAA,EAAAugB,EAAAuT,EAAAh0B,OAAoCE,EAAAugB,IAAUvgB,EAC9C4pB,EAAAkK,EAAA9zB,GAAAwqB,OACA8V,EAAA/W,GAAAoX,YACApX,GAAA+K,aAAAR,EAAA9zB,GAAAwqB,OACAZ,EACAL,GAAAqX,SAAA9M,EAAA9zB,GAAAwqB,OACAoV,EAAAxY,SAEAwC,EAAAtC,sBAAAgZ,EAAAvZ,SAAA7f,EACA0iB,EAAApC,sBAAA8Y,EAAAvZ,SAAA5f,EACAyiB,EAAArC,kBAAA+Y,EAAAhI,KAAApxB,EACA0iB,EAAAnC,kBAAA6Y,EAAAhI,KAAAnxB,EAIA,GAAAlI,EAAAmC,QAAAwuB,SAAAwD,KAAAK,gBACA,IAAAzzB,EAAA,EAAAugB,EAAAuT,EAAAh0B,OAAoCE,EAAAugB,IAAUvgB,EAC9C4pB,EAAAkK,EAAA9zB,GAAAwqB,OACA4U,GAAAxV,EAAApD,KACAxmB,EAAA,GAAAo/B,GAAAtL,EAAA9zB,EAAA,GAAAwqB,OAAAhE,KACAoD,EAAAtC,sBAAAiZ,EAAA3W,EAAAtC,sBAAAd,EAAAvB,KAAAuB,EAAArB,OACAyE,EAAApC,sBAAA+Y,EAAA3W,EAAApC,sBAAAhB,EAAAtB,IAAAsB,EAAApB,SAEAplB,EAAA8zB,EAAAh0B,OAAA,GAAAs/B,GAAAtL,EAAA9zB,EAAA,GAAAwqB,OAAAhE,KACAoD,EAAArC,kBAAAgZ,EAAA3W,EAAArC,kBAAAf,EAAAvB,KAAAuB,EAAArB,OACAyE,EAAAnC,kBAAA8Y,EAAA3W,EAAAnC,kBAAAjB,EAAAtB,IAAAsB,EAAApB,WAOAyK,KAAA,WACA,IAMAgR,EANAtf,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACA8uB,EAAAxM,EAAAyM,UACA8F,EAAA/F,EAAAptB,MAAA,GACA6lB,EAAAvnB,EAAAm2B,UACA7U,EAAAuT,EAAAh0B,OAEAE,EAAA,EAkBA,IAhBAq/B,GAAA9d,EAAA0M,aAAAhvB,EAAAmC,WACAy/B,GAAA9S,EAAAxuB,QAAAirB,OAAA2F,aAAA,KAEA5G,GAAAjmB,OAAAojB,SAAAznB,EAAA4lB,IAAA,CACAI,KAAAuB,EAAAvB,KACAE,MAAAqB,EAAArB,MACAD,IAAAsB,EAAAtB,IAAA2b,EACAzb,OAAAoB,EAAApB,OAAAyb,IAGA9S,EAAAxuB,QAAAswB,OAEAtG,GAAAjmB,OAAAujB,WAAA5nB,EAAA4lB,MAIQ7kB,EAAAugB,IAAUvgB,EAClB8zB,EAAA9zB,GAAA6vB,KAAArJ,IAOAwJ,cAAA,SAAAzJ,GACA,IAAAqD,EAAArD,EAAAiE,OACAppB,EAAAmlB,EAAAwV,SACA7L,EAAA3G,GAAA2G,cAEA3J,EAAAwJ,eAAA,CACA5qB,gBAAAykB,EAAAzkB,gBACAD,YAAA0kB,EAAA1kB,YACAirB,YAAAvG,EAAAuG,YACAnL,OAAA4E,EAAA5E,QAGA4E,EAAAzkB,gBAAA+5B,GAAA99B,EAAAgvB,qBAAAF,EAAA9uB,EAAA+D,kBACAykB,EAAA1kB,YAAAg6B,GAAA99B,EAAAivB,iBAAAH,EAAA9uB,EAAA8D,cACA0kB,EAAAuG,YAAA+O,GAAA99B,EAAAkvB,iBAAAlvB,EAAA+uB,aACAvG,EAAA5E,OAAAka,GAAA99B,EAAAmwB,YAAAnwB,EAAA4jB,WAIA8b,GAAAvX,GAAAnoB,QAAAgoB,QAEAd,GAAAT,KAAA,aACAzN,MAAA,CACA3Y,KAAA,eACAs/B,WAAA,CACAC,SAAA,GAEApI,UAAA,CACAqI,UAAA,GAEAC,YAAA,CACAF,SAAA,GAEAtJ,MAAA,CACAyJ,aAAA,IAKA5V,UAAA,CACA2Q,eAAA,EACAC,cAAA,GAGApK,YAAA,GAAAtmB,KAAAoC,GACAuuB,eAAA,SAAAn9B,GACA,IAAAo9B,EAAA,GACAA,EAAAp5B,KAAA,cAAAhE,EAAAoD,GAAA,aAEA,IAAA1B,EAAA1B,EAAA0B,KACAtB,EAAAsB,EAAAtB,SACAwB,EAAAF,EAAAE,OAEA,GAAAxB,EAAAS,OACA,QAAAE,EAAA,EAAkBA,EAAAX,EAAA,GAAAsB,KAAAb,SAA6BE,EAC/Cq8B,EAAAp5B,KAAA,qCAAA5D,EAAA,GAAA8F,gBAAAnF,GAAA,aACAa,EAAAb,IACAq8B,EAAAp5B,KAAApC,EAAAb,IAEAq8B,EAAAp5B,KAAA,SAKA,OADAo5B,EAAAp5B,KAAA,SACAo5B,EAAAp2B,KAAA,KAEAq2B,OAAA,CACAz7B,OAAA,CACA07B,eAAA,SAAAt9B,GACA,IAAA0B,EAAA1B,EAAA0B,KACA,OAAAA,EAAAE,OAAAf,QAAAa,EAAAtB,SAAAS,OACAa,EAAAE,OAAAvB,IAAA,SAAAE,EAAAQ,GACA,IAAA+tB,EAAA9uB,EAAAsvB,eAAA,GACAiO,EAAA77B,EAAAtB,SAAA,GACAimB,EAAAyI,EAAAptB,KAAAX,GACAiwB,EAAA3K,EAAA2K,QAAA,GACAwM,EAAAx9B,EAAAmC,QAAAwuB,SAAAtK,IACAc,EAAA0a,GAAA,CAAA7Q,EAAA9qB,gBAAAq3B,EAAAr3B,gBAAAs3B,EAAAt3B,sBAAA6B,EAAAhH,GACAqmB,EAAAya,GAAA,CAAA7Q,EAAA/qB,YAAAs3B,EAAAt3B,YAAAu3B,EAAAv3B,kBAAA8B,EAAAhH,GACA08B,EAAAoE,GAAA,CAAA7Q,EAAAE,YAAAqM,EAAArM,YAAAsM,EAAAtM,kBAAAnpB,EAAAhH,GAEA,OACAq8B,KAAA78B,EACAuzB,UAAA3M,EACA8M,YAAA7M,EACA2M,UAAA0J,EACArS,OAAA/P,MAAAkiB,EAAA77B,KAAAX,KAAA+tB,EAAAptB,KAAAX,GAAAqqB,OAGAvL,MAAA9e,KAIA,KAIA28B,QAAA,SAAAz0B,EAAA00B,GACA,IAEA58B,EAAAugB,EAAAwN,EAFAjP,EAAA8d,EAAA9d,MACA7f,EAAA/C,KAAA+C,MAGA,IAAAe,EAAA,EAAAugB,GAAAthB,EAAA0B,KAAAtB,UAAA,IAAAS,OAAyDE,EAAAugB,IAAUvgB,EACnE+tB,EAAA9uB,EAAAsvB,eAAAvuB,GACA+tB,EAAAptB,KAAAme,GAAAuL,QAAA0D,EAAAptB,KAAAme,GAAAuL,OAGAprB,EAAAgC,WAKAm6B,SAAA,CACAC,UAAA,CACA7zB,MAAA,WACA,UAEAhI,MAAA,SAAAuiB,EAAAphB,GACA,OAAAA,EAAAE,OAAAkhB,EAAAjD,OAAA,KAAAiD,EAAAyZ,YAMA,IAAA4F,GAAAnQ,GAAA9P,OAAA,CAEAwM,gBAAAiC,GAAAoH,IAEApJ,WAAArE,GAAApK,KAEAle,OAAA,SAAA6tB,GACA,IAOA9uB,EAAAugB,EAAAsR,EAPAtQ,EAAArlB,KACAqD,EAAAgiB,EAAA0M,aACAF,EAAAxM,EAAAyM,UACAtE,EAAAnI,EAAAtiB,MAAAmC,QAAA2wB,YAAA,EACAsP,EAAA9f,EAAA+f,QAAA,GACAC,EAAAhgB,EAAAigB,QAAA,GACA/D,EAAA1P,EAAAptB,KAOA,IAJA4gB,EAAAkgB,gBAEA1T,EAAApnB,MAAA4a,EAAAmgB,uBAEA1hC,EAAA,EAAAugB,EAAAhhB,EAAAoB,KAAAb,OAAyCE,EAAAugB,EAAUvgB,IACnDqhC,EAAArhC,GAAA0pB,EACAmI,EAAAtQ,EAAAogB,cAAA3hC,GACAuhC,EAAAvhC,GAAA6xB,EACAnI,GAAAmI,EAGA,IAAA7xB,EAAA,EAAAugB,EAAAkd,EAAA39B,OAAiCE,EAAAugB,IAAUvgB,EAC3Cy9B,EAAAz9B,GAAA+7B,SAAAxa,EAAA4X,uBAAAsE,EAAAz9B,MACAuhB,EAAAgO,cAAAkO,EAAAz9B,KAAA8uB,IAOA2S,cAAA,WACA,IAAAlgB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAm2B,EAAAn2B,EAAAm2B,UACAiI,EAAAp+B,EAAAmC,QACAo8B,EAAA/xB,KAAAD,IAAA4pB,EAAAjQ,MAAAiQ,EAAAnQ,KAAAmQ,EAAAhQ,OAAAgQ,EAAAlQ,KAEAjmB,EAAAmzB,YAAA3mB,KAAAC,IAAA8xB,EAAA,KACAv+B,EAAAkzB,YAAA1mB,KAAAC,IAAA2xB,EAAAR,iBAAA59B,EAAAmzB,YAAA,IAAAiL,EAAA,sBACAp+B,EAAAi/B,cAAAj/B,EAAAmzB,YAAAnzB,EAAAkzB,aAAAlzB,EAAA2iC,yBAEArgB,EAAA6Q,YAAAnzB,EAAAmzB,YAAAnzB,EAAAi/B,aAAA3c,EAAAzC,MACAyC,EAAA4Q,YAAA5Q,EAAA6Q,YAAAnzB,EAAAi/B,cAGA3O,cAAA,SAAAjK,EAAAxG,EAAAgQ,GACA,IAAAvN,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAM,EAAAgiB,EAAA0M,aACAoP,EAAAp+B,EAAAmC,QACAq9B,EAAApB,EAAA9R,UACAnR,EAAAnb,EAAAmb,MACAvZ,EAAA5B,EAAA0B,KAAAE,OAEA69B,EAAAtkB,EAAAynB,QACAlD,EAAAvkB,EAAA0nB,QAGAC,EAAA1E,EAAAtL,WACAD,EAAAxM,EAAA+E,OAAA,EAAAjQ,EAAA4nB,8BAAAziC,EAAAoB,KAAAme,IACAiT,EAAAxQ,EAAA+f,QAAAxiB,GACAkT,EAAAD,GAAAzM,EAAA+E,OAAA,EAAA9I,EAAAigB,QAAA1iB,IAEAmjB,EAAAxD,EAAAtC,aAAA,EAAA/hB,EAAA4nB,8BAAAziC,EAAAoB,KAAAme,IACA1d,EAAAkkB,EAAAyW,UAAA,GAEAxS,GAAApI,OAAAmE,EAAA,CAEA2J,cAAA1N,EAAAzC,MACAqQ,OAAArQ,EACA2gB,OAAArlB,EAGAoQ,OAAA,CACArlB,gBAAA/D,EAAA+D,gBACAD,YAAA9D,EAAA8D,YACAirB,YAAA/uB,EAAA+uB,YACAe,YAAA9vB,EAAA8vB,YACAhqB,EAAAw3B,EACAv3B,EAAAw3B,EACAxM,YAAA,EACAC,YAAAtD,EAAAmT,EAAAnQ,EACAC,WAAAjD,GAAA2P,EAAAvC,cAAA6F,EAAAhQ,EACAC,SAAAlD,GAAA2P,EAAAvC,cAAA6F,EAAA/P,EACAxyB,MAAA+pB,GAAA3J,sBAAA/e,EAAAie,EAAAje,EAAAie,OAIAwG,EAAAgF,SAGAoX,qBAAA,WACA,IAAAniC,EAAArD,KAAA+xB,aACAF,EAAA7xB,KAAA8xB,UACArnB,EAAA,EAQA,OANA4iB,GAAAvJ,KAAA+N,EAAAptB,KAAA,SAAA2uB,EAAAxQ,GACAxE,MAAA/a,EAAAoB,KAAAme,KAAAwQ,EAAAjF,QACA1jB,MAIAA,GAMAqpB,cAAA,SAAA1K,GACA,IAAAsE,EAAAtE,EAAAkF,OACAppB,EAAAkkB,EAAAyW,SACA7L,EAAA3G,GAAA2G,cACAxQ,EAAA6J,GAAA7J,eAEA4F,EAAAyK,eAAA,CACA5qB,gBAAAykB,EAAAzkB,gBACAD,YAAA0kB,EAAA1kB,YACAirB,YAAAvG,EAAAuG,aAGAvG,EAAAzkB,gBAAAua,EAAAte,EAAAgvB,qBAAAF,EAAA9uB,EAAA+D,kBACAykB,EAAA1kB,YAAAwa,EAAAte,EAAAivB,iBAAAH,EAAA9uB,EAAA8D,cACA0kB,EAAAuG,YAAAzQ,EAAAte,EAAAkvB,iBAAAlvB,EAAA+uB,cAMAgJ,uBAAA,SAAA7T,EAAAxG,GACA,IAMA9e,EAAAugB,EAAAhgB,EANAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAM,EAAAgiB,EAAA0M,aACAgC,EAAA3K,EAAA2K,QAAA,GACA7uB,EAAAnC,EAAAmC,QAAAwuB,SAAAtK,IACAhN,EAAA,GAIAgR,EAAA,CACArqB,QACA+7B,UAAAlc,EACAvf,UACAkuB,aAAAlM,EAAAzC,OAGA3e,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAH,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAAugC,GAAA,CACA7Q,EAAA1vB,GACAhB,EAAAgB,GACAa,EAAAb,IACA+oB,EAAAxK,GAGA,OAAAxG,GAMAqpB,cAAA,SAAA7iB,GACA,IAAAyC,EAAArlB,KACAyK,EAAAzK,KAAA8xB,UAAArnB,MACApH,EAAAgiB,EAAA0M,aACAF,EAAAxM,EAAAyM,UAEA,GAAA1T,MAAA/a,EAAAoB,KAAAme,KAAAiP,EAAAptB,KAAAme,GAAAuL,OACA,SAIA,IAAAf,EAAA,CACArqB,MAAAsiB,EAAAtiB,MACA+7B,UAAAlc,EACAvf,UACAkuB,aAAAlM,EAAAzC,OAGA,OAAAgiB,GAAA,CACAvf,EAAAtiB,MAAAmC,QAAAwuB,SAAAtK,IAAAuM,MACA,EAAApmB,KAAAoC,GAAAlH,GACA2iB,EAAAxK,MAIAwJ,GAAAT,KAAA,MAAA0B,GAAArL,MAAAoK,GAAA4Z,WACA5Z,GAAAT,KAAA,OACAgV,iBAAA,IAIA,IAAAsF,GAAAlF,GAEAmF,GAAA7Y,GAAA7J,eACA2iB,GAAA9Y,GAAAnoB,QAAAgoB,QAEAd,GAAAT,KAAA,SACAzN,MAAA,CACA3Y,KAAA,gBAEAmuB,SAAA,CACAwD,KAAA,CACAhM,QAAA,MAKA,IAAAkb,GAAArR,GAAA9P,OAAA,CAEAuM,mBAAAkC,GAAAqH,KAEAtJ,gBAAAiC,GAAAsH,MAEAtJ,WAAArE,GAAApK,KAEAle,OAAA,SAAA6tB,GACA,IAMA9uB,EAAAugB,EANAgB,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACAoF,EAAArF,EAAAxuB,QACAu0B,EAAA/F,EAAAptB,MAAA,GACAyZ,EAAAmH,EAAAtiB,MAAAmb,MACA7a,EAAAgiB,EAAA0M,aAoBA,SAhBAjnB,IAAAzH,EAAA6nB,cAAApgB,IAAAzH,EAAAigC,cACAjgC,EAAAigC,YAAAjgC,EAAA6nB,SAIAgM,EAAAqM,OAAArlB,EACAgZ,EAAAnE,cAAA1N,EAAAzC,MAEAsU,EAAAW,UAAAD,EACAV,EAAAc,OAAA,EAEAd,EAAA5I,OAAAjJ,EAAAme,oBAAAtM,GAEAA,EAAA9I,QAGAtqB,EAAA,EAAAugB,EAAAuT,EAAAh0B,OAAmCE,EAAAugB,IAAUvgB,EAC7CuhB,EAAAgO,cAAAuE,EAAA9zB,KAAA8uB,GAOA,IAHAvN,EAAAoe,4BAGA3/B,EAAA,EAAAugB,EAAAuT,EAAAh0B,OAAmCE,EAAAugB,IAAUvgB,EAC7C8zB,EAAA9zB,GAAAsqB,SAIAiF,cAAA,SAAAhJ,EAAAzH,EAAAgQ,GACA,IAAAvN,EAAArlB,KACA+zB,EAAA1J,EAAA0J,QAAA,GACA1wB,EAAAgiB,EAAA0M,aACA7T,EAAAmH,EAAAtiB,MAAAmb,MACAmoB,EAAAnoB,EAAAooB,yBAAA1jB,EAAAvf,EAAAoB,KAAAme,IACA1d,EAAAmgB,EAAAse,qBAAAtZ,EAAAzH,GACA8gB,EAAAre,EAAAyM,UAAAzuB,QAAAirB,OACAtjB,EAAA4nB,EAAA1U,EAAAynB,QAAAU,EAAAr7B,EACAC,EAAA2nB,EAAA1U,EAAA0nB,QAAAS,EAAAp7B,EAGAof,EAAAkZ,OAAArlB,EACAmM,EAAAwV,SAAA36B,EACAmlB,EAAA0I,cAAA1N,EAAAzC,MACAyH,EAAA4I,OAAArQ,EAGAyH,EAAAiE,OAAA,CACAtjB,IACAC,IACAotB,KAAAtE,EAAAsE,MAAAja,MAAApT,IAAAoT,MAAAnT,GAEA6d,OAAA5jB,EAAA4jB,OACA+P,WAAA3zB,EAAA2zB,WACArP,SAAAtkB,EAAAskB,SACAvgB,gBAAA/D,EAAA+D,gBACAD,YAAA9D,EAAA8D,YACAirB,YAAA/uB,EAAA+uB,YACA/I,QAAAgb,GAAAnS,EAAA7I,QAAAwY,IAAAxY,QAAA,GAGAwN,UAAAxzB,EAAAwzB,YAOAiL,qBAAA,SAAAvQ,EAAAxQ,GACA,IAMA9e,EAAAugB,EAAAhgB,EANAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAM,EAAAN,EAAA0B,KAAAtB,SAAAkiB,EAAAzC,OACAmR,EAAAX,EAAAW,QAAA,GACA7uB,EAAAnC,EAAAmC,QAAAwuB,SAAArJ,MACAjO,EAAA,GAIAgR,EAAA,CACArqB,QACA+7B,UAAAlc,EACAvf,UACAkuB,aAAAlM,EAAAzC,OAGAihB,EAAA,CACA56B,gBAAA,uBACAD,YAAA,mBACAirB,YAAA,mBACAyE,UAAA,iBACAxE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAiB,YAAA,mBACAwD,WAAA,aACA/P,OAAA,cACAU,SAAA,iBAEAvlB,EAAAD,OAAAC,KAAA4/B,GAEA,IAAA//B,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAA8hC,GAAA,CACApS,EAAA1vB,GACAhB,EAAAwgC,EAAAx/B,IACAhB,EAAAgB,GACAa,EAAAb,IACA+oB,EAAAxK,GAGA,OAAAxG,GAMAonB,oBAAA,SAAApQ,GACA,IAMAtvB,EAAAugB,EAAAhgB,EANAghB,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAM,EAAAN,EAAA0B,KAAAtB,SAAAkiB,EAAAzC,OACAmR,EAAAX,EAAAW,QAAA,GACA7uB,EAAAnC,EAAAmC,QAAAwuB,SAAAwD,KACA9a,EAAA,GAGAnY,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,QAGA,IAAAH,EAAA,EAAAugB,EAAApgB,EAAAL,OAAiCE,EAAAugB,IAAUvgB,EAC3CO,EAAAJ,EAAAH,GACAsY,EAAA/X,GAAA8hC,GAAA,CACApS,EAAA1vB,GACAhB,EAAAgB,GACAa,EAAAb,KAMA,OAFA+X,EAAA8O,QAAAgb,GAAA7iC,EAAAigC,YAAAp+B,EAAAgmB,SAEA9O,GAGAqnB,0BAAA,WACA,IAIA3/B,EAAAugB,EAAAqJ,EAAA0W,EAJA/e,EAAArlB,KACA6xB,EAAAxM,EAAAyM,UACAxH,EAAAjF,EAAAtiB,MAAAm2B,UACAtB,EAAA/F,EAAAptB,MAAA,GAGA,SAAA4/B,EAAAC,EAAAh1B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAg1B,EAAA90B,GAAAF,GAGA,IAAAxL,EAAA,EAAAugB,EAAAuT,EAAAh0B,OAAmCE,EAAAugB,IAAUvgB,EAC7C4pB,EAAAkK,EAAA9zB,GAAAwqB,OACA8V,EAAA/W,GAAAoX,YACApX,GAAA+K,aAAAR,EAAA9zB,GAAA,GAAAwqB,OACAZ,EACAL,GAAAqX,SAAA9M,EAAA9zB,GAAA,GAAAwqB,OACAZ,EAAAxC,SAIAwC,EAAAtC,sBAAAiZ,EAAAD,EAAAvZ,SAAA7f,EAAAsf,EAAAvB,KAAAuB,EAAArB,OACAyE,EAAApC,sBAAA+Y,EAAAD,EAAAvZ,SAAA5f,EAAAqf,EAAAtB,IAAAsB,EAAApB,QACAwE,EAAArC,kBAAAgZ,EAAAD,EAAAhI,KAAApxB,EAAAsf,EAAAvB,KAAAuB,EAAArB,OACAyE,EAAAnC,kBAAA8Y,EAAAD,EAAAhI,KAAAnxB,EAAAqf,EAAAtB,IAAAsB,EAAApB,SAIA4K,cAAA,SAAAzJ,GACA,IAAAqD,EAAArD,EAAAiE,OACAppB,EAAAmlB,EAAAwV,SACA7L,EAAA3G,GAAA2G,cAEA3J,EAAAwJ,eAAA,CACA5qB,gBAAAykB,EAAAzkB,gBACAD,YAAA0kB,EAAA1kB,YACAirB,YAAAvG,EAAAuG,YACAnL,OAAA4E,EAAA5E,QAGA4E,EAAAzkB,gBAAAi9B,GAAAhhC,EAAAgvB,qBAAAF,EAAA9uB,EAAA+D,kBACAykB,EAAA1kB,YAAAk9B,GAAAhhC,EAAAivB,iBAAAH,EAAA9uB,EAAA8D,cACA0kB,EAAAuG,YAAAiS,GAAAhhC,EAAAkvB,iBAAAlvB,EAAA+uB,aACAvG,EAAA5E,OAAAod,GAAAhhC,EAAAmwB,YAAAnwB,EAAA4jB,WAIAsD,GAAAT,KAAA,WACA4Q,MAAA,CACAC,KAAA,UAGAvK,OAAA,CACAC,MAAA,EACA/rB,GAAA,WACAZ,KAAA,SACA05B,SAAA,WAEA7M,MAAA,EACAjsB,GAAA,WACAZ,KAAA,SACA05B,SAAA,UAIA9S,WAAA,EAEA+S,SAAA,CACAC,UAAA,CACA7zB,MAAA,WACA,UAEAhI,MAAA,SAAAuiB,GACA,UAAAA,EAAAwZ,OAAA,KAAAxZ,EAAAyZ,OAAA,SAOA,IAAAiH,GAAAlD,GAMAmD,GAAA,CACA1J,IAAAF,GACA6J,OAAAlH,GACAyG,SAAAjF,GACA2F,cAAA3D,GACA7L,KAAAmM,GACAsD,UAAAzB,GACA0B,IAAAX,GACAY,MAAAT,GACAU,QAAAP,IASA,SAAAQ,GAAA/6B,EAAAjJ,GACA,OAAAiJ,EAAAg7B,OACA,CACAh8B,EAAAgB,EAAAhB,EACAC,EAAAe,EAAAf,GAIAoiB,GAAA0Z,oBAAA/6B,EAAAjJ,GAQA,SAAAkkC,GAAAlkC,EAAAmkC,GACA,IACArV,EAAA/tB,EAAAo9B,EAAA7c,EAAA8iB,EADAhkC,EAAAJ,EAAA0B,KAAAtB,SAGA,IAAAW,EAAA,EAAAugB,EAAAlhB,EAAAS,OAAoCE,EAAAugB,IAAUvgB,EAC9C,GAAAf,EAAAk7B,iBAAAn6B,GAKA,IADA+tB,EAAA9uB,EAAAsvB,eAAAvuB,GACAo9B,EAAA,EAAAiG,EAAAtV,EAAAptB,KAAAb,OAAsCs9B,EAAAiG,IAAUjG,EAAA,CAChD,IAAA9N,EAAAvB,EAAAptB,KAAAy8B,GACA9N,EAAA/E,MAAAgK,MACA6O,EAAA9T,IAYA,SAAAgU,GAAArkC,EAAAk8B,GACA,IAAAvL,EAAA,GAQA,OANAuT,GAAAlkC,EAAA,SAAAqwB,GACAA,EAAAkC,QAAA2J,EAAAj0B,EAAAi0B,EAAAh0B,IACAyoB,EAAA3sB,KAAAqsB,KAIAM,EAWA,SAAA2T,GAAAtkC,EAAAk8B,EAAAqI,EAAAC,GACA,IAAAC,EAAAhhC,OAAAihC,kBACAC,EAAA,GAkBA,OAhBAT,GAAAlkC,EAAA,SAAAqwB,GACA,IAAAkU,GAAAlU,EAAAkC,QAAA2J,EAAAj0B,EAAAi0B,EAAAh0B,GAAA,CAIA,IAAA2yB,EAAAxK,EAAA+C,iBACAP,EAAA2R,EAAAtI,EAAArB,GACAhI,EAAA4R,GACAE,EAAA,CAAAtU,GACAoU,EAAA5R,GACGA,IAAA4R,GAEHE,EAAA3gC,KAAAqsB,MAIAsU,EAQA,SAAAC,GAAA7E,GACA,IAAA8E,GAAA,IAAA9E,EAAAx+B,QAAA,KACAujC,GAAA,IAAA/E,EAAAx+B,QAAA,KAEA,gBAAAwjC,EAAAC,GACA,IAAAC,EAAAJ,EAAAr4B,KAAAkpB,IAAAqP,EAAA98B,EAAA+8B,EAAA/8B,GAAA,EACAi9B,EAAAJ,EAAAt4B,KAAAkpB,IAAAqP,EAAA78B,EAAA88B,EAAA98B,GAAA,EACA,OAAAsE,KAAAqC,KAAArC,KAAAS,IAAAg4B,EAAA,GAAAz4B,KAAAS,IAAAi4B,EAAA,KAIA,SAAAC,GAAAnlC,EAAAiJ,EAAA9G,GACA,IAAA+5B,EAAA8H,GAAA/6B,EAAAjJ,GAEAmC,EAAA49B,KAAA59B,EAAA49B,MAAA,IACA,IAAAyE,EAAAI,GAAAziC,EAAA49B,MACAqF,EAAAjjC,EAAAoiC,UAAAF,GAAArkC,EAAAk8B,GAAAoI,GAAAtkC,EAAAk8B,GAAA,EAAAsI,GACA7T,EAAA,GAEA,OAAAyU,EAAAvkC,QAIAb,EAAA0B,KAAAtB,SAAAU,QAAA,SAAAR,EAAAkuB,GACA,GAAAxuB,EAAAk7B,iBAAA1M,GAAA,CACA,IAAAM,EAAA9uB,EAAAsvB,eAAAd,GACA6B,EAAAvB,EAAAptB,KAAA0jC,EAAA,GAAAlV,QAGAG,MAAA/E,MAAAgK,MACA3E,EAAA3sB,KAAAqsB,MAKAM,GAfA,GA+BA,IAAA0U,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAAvlC,EAAAiJ,GACA,IAAAizB,EAAA8H,GAAA/6B,EAAAjJ,GACA2wB,EAAA,GASA,OAPAuT,GAAAlkC,EAAA,SAAAqwB,GACA,GAAAA,EAAAkC,QAAA2J,EAAAj0B,EAAAi0B,EAAAh0B,GAEA,OADAyoB,EAAA3sB,KAAAqsB,GACAM,IAIAA,EAAAhY,MAAA,MASApY,MAAA4kC,GAYAtlB,MAAAslB,GAWA7kC,QAAA,SAAAN,EAAAiJ,EAAA9G,GACA,IAAA+5B,EAAA8H,GAAA/6B,EAAAjJ,GACAmC,EAAA49B,KAAA59B,EAAA49B,MAAA,KACA,IAAAyE,EAAAI,GAAAziC,EAAA49B,MACAqF,EAAAjjC,EAAAoiC,UAAAF,GAAArkC,EAAAk8B,GAAAoI,GAAAtkC,EAAAk8B,GAAA,EAAAsI,GAMA,OAJAY,EAAAvkC,OAAA,IACAukC,EAAAplC,EAAAsvB,eAAA8V,EAAA,GAAApV,eAAAtuB,MAGA0jC,GASAI,SAAA,SAAAxlC,EAAAiJ,GACA,OAAAk8B,GAAAnlC,EAAAiJ,EAAA,CAA+Bs7B,WAAA,KAW/Bjd,MAAA,SAAAtnB,EAAAiJ,GACA,IAAAizB,EAAA8H,GAAA/6B,EAAAjJ,GACA,OAAAqkC,GAAArkC,EAAAk8B,IAWAuJ,QAAA,SAAAzlC,EAAAiJ,EAAA9G,GACA,IAAA+5B,EAAA8H,GAAA/6B,EAAAjJ,GACAmC,EAAA49B,KAAA59B,EAAA49B,MAAA,KACA,IAAAyE,EAAAI,GAAAziC,EAAA49B,MACA,OAAAuE,GAAAtkC,EAAAk8B,EAAA/5B,EAAAoiC,UAAAC,IAWAv8B,EAAA,SAAAjI,EAAAiJ,EAAA9G,GACA,IAAA+5B,EAAA8H,GAAA/6B,EAAAjJ,GACAolC,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAlkC,EAAA,SAAAqwB,GACAA,EAAA2F,SAAAkG,EAAAj0B,IACAm9B,EAAAphC,KAAAqsB,GAGAA,EAAAkC,QAAA2J,EAAAj0B,EAAAi0B,EAAAh0B,KACAw9B,GAAA,KAMAvjC,EAAAoiC,YAAAmB,IACAN,EAAA,IAEAA,GAWAl9B,EAAA,SAAAlI,EAAAiJ,EAAA9G,GACA,IAAA+5B,EAAA8H,GAAA/6B,EAAAjJ,GACAolC,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAlkC,EAAA,SAAAqwB,GACAA,EAAA4F,SAAAiG,EAAAh0B,IACAk9B,EAAAphC,KAAAqsB,GAGAA,EAAAkC,QAAA2J,EAAAj0B,EAAAi0B,EAAAh0B,KACAw9B,GAAA,KAMAvjC,EAAAoiC,YAAAmB,IACAN,EAAA,IAEAA,KAKA,SAAAO,GAAA9iB,EAAAqZ,GACA,OAAA5R,GAAAsb,MAAA/iB,EAAA,SAAAlW,GACA,OAAAA,EAAAuvB,eAIA,SAAA2J,GAAAhjB,EAAA5B,GACA4B,EAAA/hB,QAAA,SAAA6L,EAAA5L,GAEA,OADA4L,EAAAm5B,WAAA/kC,EACA4L,IAEAkW,EAAAkjB,KAAA,SAAA5hC,EAAAmI,GACA,IAAAiV,EAAAN,EAAA3U,EAAAnI,EACAqd,EAAAP,EAAA9c,EAAAmI,EACA,OAAAiV,EAAA3C,SAAA4C,EAAA5C,OACA2C,EAAAukB,WAAAtkB,EAAAskB,WACAvkB,EAAA3C,OAAA4C,EAAA5C,SAEAiE,EAAA/hB,QAAA,SAAA6L,UACAA,EAAAm5B,aAIA,SAAAE,GAAAC,GACA,IAAAhgB,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAoE,GAAAvJ,KAAAklB,EAAA,SAAAC,GACA,GAAAA,EAAAC,WAAA,CACA,IAAAC,EAAAF,EAAAC,aACAlgB,EAAAzZ,KAAAC,IAAAwZ,EAAAmgB,EAAAngB,KACAD,EAAAxZ,KAAAC,IAAAuZ,EAAAogB,EAAApgB,MACAG,EAAA3Z,KAAAC,IAAA0Z,EAAAigB,EAAAjgB,QACAD,EAAA1Z,KAAAC,IAAAyZ,EAAAkgB,EAAAlgB,UAGA,CACAD,MACAD,OACAG,SACAD,SAIA,SAAAmgB,GAAAJ,EAAArf,GACA0D,GAAAvJ,KAAAklB,EAAA,SAAAC,GACAtf,EAAAsf,EAAAhK,WAAAgK,EAAA1N,eAAA0N,EAAA5iC,OAAA4iC,EAAA7iC,QAIAgmB,GAAAT,KAAA,UACA0d,OAAA,CACApQ,QAAA,CACAjQ,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IAAAugB,GAAA,CACA5d,SAAA,GAQA6d,OAAA,SAAAxmC,EAAA8iB,GACA9iB,EAAAimC,QACAjmC,EAAAimC,MAAA,IAIAnjB,EAAA2jB,UAAA3jB,EAAA2jB,YAAA,EACA3jB,EAAAoZ,SAAApZ,EAAAoZ,UAAA,MACApZ,EAAAlE,OAAAkE,EAAAlE,QAAA,EAEA5e,EAAAimC,MAAAjiC,KAAA8e,IAQA4jB,UAAA,SAAA1mC,EAAA2mC,GACA,IAAA9mB,EAAA7f,EAAAimC,MAAAjmC,EAAAimC,MAAA1kC,QAAAolC,IAAA,GACA,IAAA9mB,GACA7f,EAAAimC,MAAAz+B,OAAAqY,EAAA,IAUA+mB,UAAA,SAAA5mC,EAAA8iB,EAAA3gB,GAMA,IALA,IAGAid,EAHA7c,EAAA,kCACA+e,EAAA/e,EAAA1B,OACAE,EAAA,EAGQA,EAAAugB,IAAUvgB,EAClBqe,EAAA7c,EAAAxB,GACAoB,EAAAR,eAAAyd,KACA0D,EAAA1D,GAAAjd,EAAAid,KAYApd,OAAA,SAAAhC,EAAAqD,EAAAC,GACA,GAAAtD,EAAA,CAIA,IAAA6mC,EAAA7mC,EAAAmC,QAAAmkC,QAAA,GACApQ,EAAA5L,GAAAnoB,QAAAynB,UAAAid,EAAA3Q,SACA4Q,EAAA5Q,EAAAlQ,KACA+gB,EAAA7Q,EAAAhQ,MACA8gB,EAAA9Q,EAAAjQ,IACAghB,EAAA/Q,EAAA/P,OAEA+gB,EAAAvB,GAAA3lC,EAAAimC,MAAA,QACAkB,EAAAxB,GAAA3lC,EAAAimC,MAAA,SACAmB,EAAAzB,GAAA3lC,EAAAimC,MAAA,OACAoB,EAAA1B,GAAA3lC,EAAAimC,MAAA,UACAqB,EAAA3B,GAAA3lC,EAAAimC,MAAA,aAGAJ,GAAAqB,GAAA,GACArB,GAAAsB,GAAA,GACAtB,GAAAuB,GAAA,GACAvB,GAAAwB,GAAA,GAEA,IA0DAE,EA1DAC,EAAAN,EAAA1qB,OAAA2qB,GACAM,EAAAL,EAAA5qB,OAAA6qB,GACAK,EAAAF,EAAAhrB,OAAAirB,GAwCAE,EAAAtkC,EAAAyjC,EAAAC,EACAa,EAAAtkC,EAAA0jC,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAAzkC,EAAAwkC,GAAAL,EAAA3mC,OAOAknC,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CAAuBhiB,IAAA+gB,EAAAhhB,KAAA8gB,EAAA3gB,OAAA8gB,EAAA/gB,MAAA6gB,GACvBmB,EAAA,GAsBA5d,GAAAvJ,KAAA2mB,EAAAS,GAGAZ,EAAAvB,GAAA0B,GA+BApd,GAAAvJ,KAAAymB,EAAAY,GACA/B,GAAAmB,EAAAS,GAGA3d,GAAAvJ,KAAA0mB,EAAAW,GACA/B,GAAAoB,EAAAQ,GAoBA3d,GAAAvJ,KAAAymB,EAAAa,GAGAJ,EAAA,CAAmBhiB,IAAA+gB,EAAAhhB,KAAA8gB,EAAA3gB,OAAA8gB,EAAA/gB,MAAA6gB,GACnBV,GAAAqB,EAAAO,GAGA,IAAAK,EAAA97B,KAAAC,IAAA86B,EAAAvhB,KAAAiiB,EAAAjiB,KAAA,GACAiiB,EAAAjiB,MAAAsiB,EACAL,EAAA/hB,OAAA1Z,KAAAC,IAAA86B,EAAArhB,MAAA+hB,EAAA/hB,MAAA,GAEA,IAAAqiB,EAAA/7B,KAAAC,IAAA86B,EAAAthB,IAAAgiB,EAAAhiB,IAAA,GACAgiB,EAAAhiB,KAAAsiB,EACAN,EAAA9hB,QAAA3Z,KAAAC,IAAA86B,EAAAphB,OAAA8hB,EAAA9hB,OAAA,GAKA,IAAAqiB,EAAAllC,EAAA2kC,EAAAhiB,IAAAgiB,EAAA9hB,OACAsiB,EAAAplC,EAAA4kC,EAAAjiB,KAAAiiB,EAAA/hB,MAEAuiB,IAAAV,GAAAS,IAAAR,IACA1d,GAAAvJ,KAAAymB,EAAA,SAAAtB,GACAA,EAAA5iC,OAAAklC,IAGAle,GAAAvJ,KAAA0mB,EAAA,SAAAvB,GACAA,EAAAO,YACAP,EAAA7iC,MAAAolC,KAIAT,EAAAQ,EACAT,EAAAU,GAIA,IAAAziB,EAAA8gB,EAAAwB,EACAriB,EAAA+gB,EAAAuB,EAwBAje,GAAAvJ,KAAAmmB,EAAA1qB,OAAA4qB,GAAAsB,GAGA1iB,GAAA+hB,EACA9hB,GAAA+hB,EAEA1d,GAAAvJ,KAAAomB,EAAAuB,GACApe,GAAAvJ,KAAAsmB,EAAAqB,GAGA1oC,EAAAm2B,UAAA,CACAnQ,KAAAiiB,EAAAjiB,KACAC,IAAAgiB,EAAAhiB,IACAC,MAAA+hB,EAAAjiB,KAAA+hB,EACA5hB,OAAA8hB,EAAAhiB,IAAA+hB,GAIA1d,GAAAvJ,KAAAumB,EAAA,SAAApB,GACAA,EAAAlgB,KAAAhmB,EAAAm2B,UAAAnQ,KACAkgB,EAAAjgB,IAAAjmB,EAAAm2B,UAAAlQ,IACAigB,EAAAhgB,MAAAlmB,EAAAm2B,UAAAjQ,MACAggB,EAAA/f,OAAAnmB,EAAAm2B,UAAAhQ,OAEA+f,EAAAlkC,OAAA+lC,EAAAC,KApKA,SAAAG,EAAAjC,GACA,IAAA3H,EACA/F,EAAA0N,EAAA1N,eAEAA,GACA+F,EAAA2H,EAAAlkC,OAAAkkC,EAAAO,UAAAkB,EAAAI,EAAAH,EAAA,GACAI,GAAAzJ,EAAAj7B,SAEAi7B,EAAA2H,EAAAlkC,OAAA8lC,EAAAE,GACAD,GAAAxJ,EAAAl7B,OAGA6kC,EAAAlkC,KAAA,CACAizB,WAAAuB,EACAn1B,MAAAk7B,EAAAl7B,MACA6iC,QAcA,SAAAkC,EAAAlC,GACA,IAAAyC,EAAAre,GAAAse,cAAAV,EAAA,SAAAW,GACA,OAAAA,EAAA3C,UAGA,GAAAyC,EACA,GAAAA,EAAA1R,WAAA,CACA,IAAA6R,EAAA,CACA9iB,KAAAxZ,KAAAC,IAAAw7B,EAAAjiB,KAAAuhB,EAAAvhB,MACAE,MAAA1Z,KAAAC,IAAAw7B,EAAA/hB,MAAAqhB,EAAArhB,OACAD,IAAA,EACAE,OAAA,GAKA+f,EAAAlkC,OAAAkkC,EAAAO,UAAAkB,EAAAI,EAAAH,EAAA,EAAAkB,QAEA5C,EAAAlkC,OAAA2mC,EAAAtlC,MAAA2kC,GAaA,SAAAK,EAAAnC,GACA,IAAAyC,EAAAre,GAAAse,cAAAV,EAAA,SAAA3J,GACA,OAAAA,EAAA2H,UAGA4C,EAAA,CACA9iB,KAAA,EACAE,MAAA,EACAD,IAAAgiB,EAAAhiB,IACAE,OAAA8hB,EAAA9hB,QAGAwiB,GACAzC,EAAAlkC,OAAA2mC,EAAAtlC,MAAA2kC,EAAAc,GA6CA,SAAAJ,EAAAxC,GACAA,EAAA1N,gBACA0N,EAAAlgB,KAAAkgB,EAAAO,UAAAK,EAAAmB,EAAAjiB,KACAkgB,EAAAhgB,MAAAggB,EAAAO,UAAApjC,EAAA0jC,EAAAkB,EAAAjiB,KAAA+hB,EACA7B,EAAAjgB,MACAigB,EAAA/f,OAAAF,EAAAigB,EAAA5iC,OAGA2iB,EAAAigB,EAAA/f,SAIA+f,EAAAlgB,OACAkgB,EAAAhgB,MAAAF,EAAAkgB,EAAA7iC,MACA6iC,EAAAjgB,IAAAgiB,EAAAhiB,IACAigB,EAAA/f,OAAA8hB,EAAAhiB,IAAA+hB,EAGAhiB,EAAAkgB,EAAAhgB,UAsCA6iB,GAAA,CACAC,eAAA,SAAAlmB,GAMA,OALAA,KAAAze,SAEAye,IAAAze,QAGAye,KAAAxe,WAAA,cAIA2kC,GAAA,o3BAEAC,GAAAjoC,OAAAkoC,OAAA,CACAzmC,QAAAumC,KAGA,SAAAG,GAAAtsC,GACA,OAAAA,KAAA4F,SAAA5F,EAGA,IAAAusC,GAAAD,GAAAF,IAEAI,GAAA,WACAC,GAAA,WACAC,GAAAD,GAAA,eACAE,GAAAF,GAAA,iBACAG,GAAAH,GAAA,mBACAI,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAAja,EAAAka,GACA,IAAAlsC,EAAAisB,GAAAkgB,SAAAna,EAAAka,GACA5gB,EAAAtrB,KAAAiJ,MAAA,qBACA,OAAAqiB,EAAAlmB,OAAAkmB,EAAA,SAAA5hB,EAQA,SAAA0iC,GAAApmC,EAAAqmC,GACA,IAAA1nC,EAAAqB,EAAArB,MAIA2nC,EAAAtmC,EAAAumC,aAAA,UACAC,EAAAxmC,EAAAumC,aAAA,SAoBA,GAjBAvmC,EAAAilC,IAAA,CACAwB,QAAA,CACAxnC,OAAAqnC,EACAtnC,MAAAwnC,EACA7nC,MAAA,CACA++B,QAAA/+B,EAAA++B,QACAz+B,OAAAN,EAAAM,OACAD,MAAAL,EAAAK,SAQAL,EAAA++B,QAAA/+B,EAAA++B,SAAA,QAEA,OAAA8I,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAAT,GAAAjmC,EAAA,cACA0D,IAAAgjC,IACA1mC,EAAAhB,MAAA0nC,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAAtmC,EAAArB,MAAAM,OAIAe,EAAAf,OAAAe,EAAAhB,OAAAqnC,EAAAvoC,QAAA6oC,aAAA,OACG,CACH,IAAAC,EAAAX,GAAAjmC,EAAA,eACA0D,IAAAgjC,IACA1mC,EAAAf,OAAA2nC,GAKA,OAAA5mC,EAQA,IAAA6mC,GAAA,WACA,IAAAC,GAAA,EACA,IACA,IAAAhpC,EAAAlB,OAAAmrB,eAAA,GAAwC,WAExCC,IAAA,WACA8e,GAAA,KAGAprB,OAAAqrB,iBAAA,SAAAjpC,GACE,MAAA8G,IAGF,OAAAkiC,EAbA,GAkBAE,KAAAH,IAAA,CAA2DI,SAAA,GAE3D,SAAAC,GAAAC,EAAAhpC,EAAAorB,GACA4d,EAAAJ,iBAAA5oC,EAAAorB,EAAAyd,IAGA,SAAAI,GAAAD,EAAAhpC,EAAAorB,GACA4d,EAAAE,oBAAAlpC,EAAAorB,EAAAyd,IAGA,SAAAM,GAAAnpC,EAAAxC,EAAAiI,EAAAC,EAAA0jC,GACA,OACAppC,OACAxC,QACAikC,OAAA2H,GAAA,KACA3jC,OAAAF,IAAAE,IAAA,KACAC,OAAAH,IAAAG,IAAA,MAIA,SAAA2jC,GAAAC,EAAA9rC,GACA,IAAAwC,EAAAonC,GAAAkC,EAAAtpC,OAAAspC,EAAAtpC,KACAupC,EAAAzhB,GAAA0Z,oBAAA8H,EAAA9rC,GACA,OAAA2rC,GAAAnpC,EAAAxC,EAAA+rC,EAAA9jC,EAAA8jC,EAAA7jC,EAAA4jC,GAGA,SAAAE,GAAAnrB,EAAAC,GACA,IAAAmrB,GAAA,EACA7+B,EAAA,GAEA,kBACAA,EAAAzJ,MAAAoB,UAAA4T,MAAAC,KAAAhT,WACAkb,KAAA7jB,KAEAgvC,IACAA,GAAA,EACA3hB,GAAAgD,iBAAA1U,KAAAmH,OAAA,WACAksB,GAAA,EACAprB,EAAAlb,MAAAmb,EAAA1T,OAMA,SAAA8+B,GAAAC,GACA,IAAAC,EAAAC,SAAAtpC,cAAA,OAEA,OADAqpC,EAAAE,UAAAH,GAAA,GACAC,EAIA,SAAAG,GAAApI,GACA,IAAAqI,EAAA,IAIAC,EAAAP,GAAA1C,IACAkD,EAAAR,GAAA1C,GAAA,WACAmD,EAAAT,GAAA1C,GAAA,WAEAkD,EAAAE,YAAAV,MACAS,EAAAC,YAAAV,MAEAO,EAAAG,YAAAF,GACAD,EAAAG,YAAAD,GACAF,EAAAI,OAAA,WACAH,EAAAI,WAAAN,EACAE,EAAAK,UAAAP,EACAG,EAAAG,WAAAN,EACAG,EAAAI,UAAAP,GAGA,IAAAQ,EAAA,WACAP,EAAAI,SACA1I,KAMA,OAHAoH,GAAAmB,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACAnB,GAAAoB,EAAA,SAAAK,EAAAC,KAAAN,EAAA,WAEAF,EAIA,SAAAS,GAAA1B,EAAArH,GACA,IAAAgJ,EAAA3B,EAAAlC,MAAAkC,EAAAlC,IAAA,IACA8D,EAAAD,EAAAE,YAAA,SAAApkC,GACAA,EAAAqkC,gBAAA5D,IACAvF,KAIA7Z,GAAAvJ,KAAA4oB,GAAA,SAAAnnC,GACA+oC,GAAAC,EAAAhpC,EAAA4qC,KAQAD,EAAAI,SAAA/B,EAAAgC,aAEAhC,EAAAiC,UAAAC,IAAAjE,IAGA,SAAAkE,GAAAnC,GACA,IAAA2B,EAAA3B,EAAAlC,KAAA,GACA8D,EAAAD,EAAAE,YAEAD,IACA9iB,GAAAvJ,KAAA4oB,GAAA,SAAAnnC,GACAipC,GAAAD,EAAAhpC,EAAA4qC,YAGAD,EAAAE,aAGA7B,EAAAiC,UAAAG,OAAAnE,IAGA,SAAAoE,GAAArC,EAAA5d,EAAA5tB,GACA,IAAAmtC,EAAA3B,EAAAlC,MAAAkC,EAAAlC,IAAA,IAGAmD,EAAAU,EAAAV,QAAAF,GAAAP,GAAA,WACA,GAAAmB,EAAAV,QAAA,CACA,IAAAqB,EAAA9tC,EAAAmC,QAAA4rC,qBAAAvC,EAAAwC,WACAphC,EAAAkhC,IAAAG,YAAA,EACArgB,EAAA+d,GAAA,SAAA3rC,IACA8tC,KAAAG,YAAArhC,GAAA5M,EAAAqE,QAQAupB,EAAA+d,GAAA,SAAA3rC,QAOAktC,GAAA1B,EAAA,WACA,GAAA2B,EAAAV,QAAA,CACA,IAAAqB,EAAAtC,EAAAwC,WACAF,OAAArB,EAAAuB,YACAF,EAAAI,aAAAzB,EAAAqB,EAAAK,YAIA1B,EAAAI,YAKA,SAAAuB,GAAA5C,GACA,IAAA2B,EAAA3B,EAAAlC,KAAA,GACAmD,EAAAU,EAAAV,eAEAU,EAAAV,QACAkB,GAAAnC,GAEAiB,KAAAuB,YACAvB,EAAAuB,WAAAK,YAAA5B,GAIA,SAAA6B,GAAAC,EAAAC,GAEA,IAAAxrC,EAAAurC,EAAAE,QAAApC,SAAAtpC,cAAA,SACAwrC,EAAAE,SACAF,EAAAE,OAAAzrC,EACAwrC,EAAA,mBAAAA,EACAxrC,EAAA0rC,aAAA,mBACArC,SAAAsC,qBAAA,WAAA/B,YAAA5pC,IAGAA,EAAA4pC,YAAAP,SAAAuC,eAAAJ,IAGA,IAAAK,GAAA,CAQAC,qBAAA,EAOAC,SAAA,qBAAAhvB,QAAA,qBAAAssB,SAKA2C,cAAA,WACA/xC,KAAAgyC,UAIAhyC,KAAAgyC,SAAA,EAGAhyC,KAAA6xC,qBACAR,GAAArxC,KAAAosC,MAIAL,eAAA,SAAAlmB,EAAA4nB,GACA,kBAAA5nB,EACAA,EAAAupB,SAAA6C,eAAApsB,GACGA,EAAAjiB,SAEHiiB,IAAA,IAGAA,KAAAze,SAEAye,IAAAze,QAMA,IAAAgmB,EAAAvH,KAAAxe,YAAAwe,EAAAxe,WAAA,MAaA,OATArH,KAAA+xC,gBASA3kB,KAAAhmB,SAAAye,GACA2nB,GAAA3nB,EAAA4nB,GACArgB,GAGA,MAGA8kB,eAAA,SAAA9kB,GACA,IAAAhmB,EAAAgmB,EAAAhmB,OACA,GAAAA,EAAAilC,IAAA,CAIA,IAAAwB,EAAAzmC,EAAAilC,IAAAwB,QACA,mBAAAhqC,QAAA,SAAAse,GACA,IAAA/gB,EAAAysC,EAAA1rB,GACAkL,GAAAlK,cAAA/hB,GACAgG,EAAA+qC,gBAAAhwB,GAEA/a,EAAAqqC,aAAAtvB,EAAA/gB,KAIAisB,GAAAvJ,KAAA+pB,EAAA9nC,OAAA,GAAoC,SAAA3E,EAAAiD,GACpC+C,EAAArB,MAAA1B,GAAAjD,IAQAgG,EAAAhB,MAAAgB,EAAAhB,aAEAgB,EAAAilC,MAGA8B,iBAAA,SAAAprC,EAAAwC,EAAAorB,GACA,IAAAvpB,EAAArE,EAAAqE,OACA,cAAA7B,EAAA,CAMA,IAAA2qC,EAAAvf,EAAA0b,MAAA1b,EAAA0b,IAAA,IACA+F,EAAAlC,EAAAkC,UAAAlC,EAAAkC,QAAA,IACAjC,EAAAiC,EAAArvC,EAAAoD,GAAA,IAAAZ,GAAA,SAAAspC,GACAle,EAAAie,GAAAC,EAAA9rC,KAGAurC,GAAAlnC,EAAA7B,EAAA4qC,QAVAS,GAAAxpC,EAAAupB,EAAA5tB,IAaA0rC,oBAAA,SAAA1rC,EAAAwC,EAAAorB,GACA,IAAAvpB,EAAArE,EAAAqE,OACA,cAAA7B,EAAA,CAMA,IAAA2qC,EAAAvf,EAAA0b,KAAA,GACA+F,EAAAlC,EAAAkC,SAAA,GACAjC,EAAAiC,EAAArvC,EAAAoD,GAAA,IAAAZ,GACA4qC,GAIA3B,GAAApnC,EAAA7B,EAAA4qC,QAXAgB,GAAA/pC,KA0BAimB,GAAAglB,SAAA/D,GAWAjhB,GAAAilB,YAAA9D,GAGA,IAAA+D,GAAAX,GAAAE,SAAAF,GAAA9F,GAOAwF,GAAAjkB,GAAApI,OAAA,CAIAiJ,WAAA,aASA6d,eAAA,aAQAmG,eAAA,aASA/D,iBAAA,aAQAM,oBAAA,cAEC8D,IAEDnmB,GAAAT,KAAA,UACAllB,QAAA,KAQA,IAAA+rC,GAAA,CAKA7rC,SAAA,GAQA8rC,SAAA,EAMAC,SAAA,SAAAjsC,GACA,IAAAqK,EAAA9Q,KAAA2G,SACA,GAAA4Y,OAAA9Y,GAAA5C,QAAA,SAAAiD,IACA,IAAAgK,EAAAxM,QAAAwC,IACAgK,EAAA/J,KAAAD,KAIA9G,KAAAyyC,YAOAE,WAAA,SAAAlsC,GACA,IAAAqK,EAAA9Q,KAAA2G,SACA,GAAA4Y,OAAA9Y,GAAA5C,QAAA,SAAAiD,GACA,IAAA8rC,EAAA9hC,EAAAxM,QAAAwC,IACA,IAAA8rC,GACA9hC,EAAAvG,OAAAqoC,EAAA,KAIA5yC,KAAAyyC,YAOA/pB,MAAA,WACA1oB,KAAA2G,SAAA,GACA3G,KAAAyyC,YAQAhoC,MAAA,WACA,OAAAzK,KAAA2G,SAAA/C,QAQAivC,OAAA,WACA,OAAA7yC,KAAA2G,UAYAmsC,OAAA,SAAA/vC,EAAAgwC,EAAA5iC,GACA,IAEArM,EAAAkvC,EAAAlsC,EAAAmsC,EAAAjiB,EAFAkiB,EAAAlzC,KAAAkzC,YAAAnwC,GACAshB,EAAA6uB,EAAAtvC,OAGA,IAAAE,EAAA,EAAaA,EAAAugB,IAAUvgB,EAIvB,GAHAkvC,EAAAE,EAAApvC,GACAgD,EAAAksC,EAAAlsC,OACAkqB,EAAAlqB,EAAAisC,GACA,oBAAA/hB,IACAiiB,EAAA,CAAAlwC,GAAAwc,OAAApP,GAAA,IACA8iC,EAAAlsC,KAAAisC,EAAA9tC,UACA,IAAA8rB,EAAAtoB,MAAA5B,EAAAmsC,IACA,SAKA,UAQAC,YAAA,SAAAnwC,GACA,IAAAowC,EAAApwC,EAAAqwC,WAAArwC,EAAAqwC,SAAA,IACA,GAAAD,EAAAhtC,KAAAnG,KAAAyyC,SACA,OAAAU,EAAAD,YAGA,IAAAzsC,EAAA,GACAysC,EAAA,GACAzF,EAAA1qC,KAAA0qC,QAAA,GACAvoC,EAAAuoC,EAAAvoC,SAAAuoC,EAAAvoC,QAAAuB,SAAA,GA2BA,OAzBAzG,KAAA2G,SAAA4Y,OAAAkuB,EAAAhnC,SAAA,IAAA5C,QAAA,SAAAiD,GACA,IAAA8rC,EAAAnsC,EAAAnC,QAAAwC,GACA,QAAA8rC,EAAA,CAIA,IAAAzsC,EAAAW,EAAAX,GACAg7B,EAAAj8B,EAAAiB,IACA,IAAAg7B,KAIA,IAAAA,IACAA,EAAA9T,GAAArL,MAAAoK,GAAAxgB,OAAAnF,QAAAN,KAGAM,EAAAM,KAAAD,GACAosC,EAAAnsC,KAAA,CACAD,SACA5B,QAAAi8B,GAAA,SAIAgS,EAAAD,cACAC,EAAAhtC,GAAAnG,KAAAyyC,SACAS,GASAG,YAAA,SAAAtwC,UACAA,EAAAqwC,WAIAE,GAAA,CAGAC,aAAA,GAKA7nB,SAAA,GACA8nB,kBAAA,SAAAjuC,EAAAkuC,EAAAC,GACA1zC,KAAAuzC,aAAAhuC,GAAAkuC,EACAzzC,KAAA0rB,SAAAnmB,GAAA8nB,GAAArL,MAAA0xB,IAEAC,oBAAA,SAAApuC,GACA,OAAAvF,KAAAuzC,aAAA7uC,eAAAa,GAAAvF,KAAAuzC,aAAAhuC,QAAAuF,GAEA8oC,iBAAA,SAAAruC,GAEA,OAAAvF,KAAA0rB,SAAAhnB,eAAAa,GAAA8nB,GAAAzI,MAAA,GAAgE,CAAAwH,GAAAlO,MAAAle,KAAA0rB,SAAAnmB,KAAA,IAEhEsuC,oBAAA,SAAAtuC,EAAAuuC,GACA,IAAAzuB,EAAArlB,KACAqlB,EAAAqG,SAAAhnB,eAAAa,KACA8f,EAAAqG,SAAAnmB,GAAA8nB,GAAApI,OAAAI,EAAAqG,SAAAnmB,GAAAuuC,KAGAC,kBAAA,SAAAhxC,GAEAsqB,GAAAvJ,KAAA/gB,EAAAkvB,OAAA,SAAA/T,GAEAA,EAAAsrB,UAAAtrB,EAAAhZ,QAAAskC,UACAtrB,EAAA+gB,SAAA/gB,EAAAhZ,QAAA+5B,SACA/gB,EAAAyD,OAAAzD,EAAAhZ,QAAAyc,OACA2nB,GAAAC,OAAAxmC,EAAAmb,OAKA81B,GAAA3mB,GAAA7J,eAEA4I,GAAAT,KAAA,UACAuT,SAAA,CACA+U,SAAA,EACAlgB,OAAA,KACAyI,KAAA,UACAyC,SAAA,UACAqI,WAAA,EACAr+B,gBAAA,kBACAirC,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACAtrB,aAAA,EACAurB,mBAAA,OACAC,eAAA,EACApsC,YAAA,gBACAirB,YAAA,EACAkL,UAAA,CAEAkW,YAAAhoB,GAAApK,KACA3X,MAAA,SAAAgqC,EAAA7wC,GACA,IAAA6G,EAAA,GACA3G,EAAAF,EAAAE,OACA4wC,EAAA5wC,IAAAf,OAAA,EAEA,GAAA0xC,EAAA1xC,OAAA,GACA,IAAAiiB,EAAAyvB,EAAA,GACAzvB,EAAAviB,MACAgI,EAAAua,EAAAviB,MACMuiB,EAAAwZ,OACN/zB,EAAAua,EAAAwZ,OACMkW,EAAA,GAAA1vB,EAAAjD,MAAA2yB,IACNjqC,EAAA3G,EAAAkhB,EAAAjD,QAIA,OAAAtX,GAEAkqC,WAAAnoB,GAAApK,KAGAwyB,WAAApoB,GAAApK,KAGAyyB,YAAAroB,GAAApK,KACA3f,MAAA,SAAAu9B,EAAAp8B,GACA,IAAAnB,EAAAmB,EAAAtB,SAAA09B,EAAAtP,cAAAjuB,OAAA,GAUA,OARAA,IACAA,GAAA,MAEA+pB,GAAAlK,cAAA0d,EAAAz/B,OAGAkC,GAAAu9B,EAAAvB,OAFAh8B,GAAAu9B,EAAAz/B,MAIAkC,GAEAqyC,WAAA,SAAA9U,EAAA99B,GACA,IAAA8uB,EAAA9uB,EAAAsvB,eAAAwO,EAAAtP,cACAqkB,EAAA/jB,EAAAptB,KAAAo8B,EAAAje,OACA6K,EAAAmoB,EAAAvnB,MACA,OACArlB,YAAAykB,EAAAzkB,YACAC,gBAAAwkB,EAAAxkB,kBAGA4sC,eAAA,WACA,OAAA71C,KAAA6/B,SAAA2U,eAEAsB,WAAAzoB,GAAApK,KAGA8yB,UAAA1oB,GAAApK,KAGA+yB,aAAA3oB,GAAApK,KACAgzB,OAAA5oB,GAAApK,KACAizB,YAAA7oB,GAAApK,SAKA,IAAAkzB,GAAA,CAOAC,QAAA,SAAA1iB,GACA,IAAAA,EAAA9vB,OACA,SAGA,IAAAE,EAAAmgB,EACAjZ,EAAA,EACAC,EAAA,EACAR,EAAA,EAEA,IAAA3G,EAAA,EAAAmgB,EAAAyP,EAAA9vB,OAAoCE,EAAAmgB,IAASngB,EAAA,CAC7C,IAAAqrC,EAAAzb,EAAA5vB,GACA,GAAAqrC,KAAAzgB,WAAA,CACA,IAAAogB,EAAAK,EAAA1gB,kBACAzjB,GAAA8jC,EAAA9jC,EACAC,GAAA6jC,EAAA7jC,IACAR,GAIA,OACAO,IAAAP,EACAQ,IAAAR,IAWA+9B,QAAA,SAAA9U,EAAA2iB,GACA,IAGAvyC,EAAAmgB,EAAAqyB,EAHAtrC,EAAAqrC,EAAArrC,EACAC,EAAAorC,EAAAprC,EACAu8B,EAAAhhC,OAAAihC,kBAGA,IAAA3jC,EAAA,EAAAmgB,EAAAyP,EAAA9vB,OAAoCE,EAAAmgB,IAASngB,EAAA,CAC7C,IAAAqrC,EAAAzb,EAAA5vB,GACA,GAAAqrC,KAAAzgB,WAAA,CACA,IAAAkP,EAAAuR,EAAAhZ,iBACAogB,EAAAlpB,GAAAmpB,sBAAAH,EAAAzY,GAEA2Y,EAAA/O,IACAA,EAAA+O,EACAD,EAAAnH,IAKA,GAAAmH,EAAA,CACA,IAAAG,EAAAH,EAAA7nB,kBACAzjB,EAAAyrC,EAAAzrC,EACAC,EAAAwrC,EAAAxrC,EAGA,OACAD,IACAC,OAMA,SAAAyrC,GAAAzlB,EAAA0lB,GAUA,OATAA,IACAtpB,GAAAjK,QAAAuzB,GAEAjwC,MAAAoB,UAAAf,KAAA2B,MAAAuoB,EAAA0lB,GAEA1lB,EAAAlqB,KAAA4vC,IAIA1lB,EASA,SAAA2lB,GAAAn4B,GACA,yBAAAA,gBAAAlY,SAAAkY,EAAAna,QAAA,SACAma,EAAAtU,MAAA,MAEAsU,EASA,SAAAo4B,GAAAzjB,GACA,IAAAoM,EAAApM,EAAA8J,QACAuC,EAAArM,EAAA+J,SAAA/J,EAAAmQ,OACA3gB,EAAAwQ,EAAAH,OACA1B,EAAA6B,EAAAL,cACA0L,EAAArL,EAAAnwB,OAAAovB,eAAAd,GAAAkN,WACAqY,EAAArY,EAAA9L,iBACAokB,EAAAtY,EAAA/L,iBAEA,OACA2M,OAAAG,IAAAwX,iBAAAp0B,EAAA2O,GAAA,GACA+N,OAAAG,IAAAuX,iBAAAp0B,EAAA2O,GAAA,GACAjuB,MAAAwzC,EAAA,GAAAA,EAAAE,iBAAAp0B,EAAA2O,GAAA,GACAnwB,MAAA21C,EAAA,GAAAA,EAAAC,iBAAAp0B,EAAA2O,GAAA,GACA3O,QACA2O,eACAvmB,EAAAooB,EAAA9E,OAAAtjB,EACAC,EAAAmoB,EAAA9E,OAAArjB,GAQA,SAAAgsC,GAAAC,GACA,IAAArqB,EAAAT,GAAAxgB,OAEA,OAEAopC,SAAAkC,EAAAlC,SACAD,SAAAmC,EAAAnC,SACAoC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAGA5C,cAAA0C,EAAA1C,cACA6C,gBAAArD,GAAAkD,EAAAI,eAAAzqB,EAAAd,mBACAwrB,eAAAvD,GAAAkD,EAAAM,cAAA3qB,EAAAZ,kBACAwrB,WAAAP,EAAAzC,UACAiD,aAAA1D,GAAAkD,EAAAQ,aAAA7qB,EAAAb,iBACAuoB,YAAA2C,EAAA3C,YAGAF,eAAA6C,EAAA7C,eACAsD,iBAAA3D,GAAAkD,EAAAU,gBAAA/qB,EAAAd,mBACA8rB,gBAAA7D,GAAAkD,EAAAhD,eAAArnB,EAAAZ,kBACA6rB,cAAA9D,GAAAkD,EAAAY,cAAAjrB,EAAAb,iBACA+rB,YAAAb,EAAA5C,WACAH,aAAA+C,EAAA/C,aACAC,kBAAA8C,EAAA9C,kBAGAS,gBAAAqC,EAAArC,gBACAmD,kBAAAhE,GAAAkD,EAAAe,iBAAAprB,EAAAd,mBACAmsB,iBAAAlE,GAAAkD,EAAAxC,gBAAA7nB,EAAAZ,kBACAksB,eAAAnE,GAAAkD,EAAAiB,eAAAtrB,EAAAb,iBACAosB,aAAAlB,EAAApC,YACAH,cAAAuC,EAAAvC,cACAC,gBAAAsC,EAAAtC,gBAGAM,UAAAgC,EAAAhC,UACAtrB,aAAAstB,EAAAttB,aACA3gB,gBAAAiuC,EAAAjuC,gBACAovC,QAAA,EACAC,sBAAApB,EAAA/B,mBACAC,cAAA8B,EAAA9B,cACApsC,YAAAkuC,EAAAluC,YACAirB,YAAAijB,EAAAjjB,aAOA,SAAAskB,GAAAC,EAAA9qB,GACA,IAAA/E,EAAA6vB,EAAAv1C,OAAA0lB,IAEAtiB,EAAA,EAAAqnB,EAAAqnB,SACA3uC,EAAA,EAGAqyC,EAAA/qB,EAAA+qB,KACAC,EAAAD,EAAAE,OAAA,SAAAluC,EAAAmuC,GACA,OAAAnuC,EAAAmuC,EAAAC,OAAAj1C,OAAAg1C,EAAAE,MAAAl1C,OAAAg1C,EAAAG,MAAAn1C,QACE,GACF80C,GAAAhrB,EAAA+nB,WAAA7xC,OAAA8pB,EAAAqoB,UAAAnyC,OAEA,IAAAo1C,EAAAtrB,EAAApiB,MAAA1H,OACAq1C,EAAAvrB,EAAAuoB,OAAAryC,OACAk0C,EAAApqB,EAAAoqB,cACAJ,EAAAhqB,EAAAgqB,aACAS,EAAAzqB,EAAAyqB,eAEA9xC,GAAA2yC,EAAAlB,EACAzxC,GAAA2yC,KAAA,GAAAtrB,EAAAymB,aAAA,EACA9tC,GAAA2yC,EAAAtrB,EAAA0mB,kBAAA,EACA/tC,GAAAqyC,EAAAhB,EACArxC,GAAAqyC,KAAA,GAAAhrB,EAAA6mB,YAAA,EACAluC,GAAA4yC,EAAAvrB,EAAAknB,gBAAA,EACAvuC,GAAA4yC,EAAA,EACA5yC,GAAA4yC,KAAA,GAAAvrB,EAAAinB,cAAA,EAGA,IAAAuE,EAAA,EACAC,EAAA,SAAAjiB,GACA9wB,EAAAmJ,KAAAC,IAAApJ,EAAAuiB,EAAAywB,YAAAliB,GAAA9wB,MAAA8yC,IA4BA,OAzBAvwB,EAAA2D,KAAAe,GAAAgsB,WAAAvB,EAAApqB,EAAAmqB,gBAAAnqB,EAAAiqB,kBACAtqB,GAAAvJ,KAAA4J,EAAApiB,MAAA6tC,GAGAxwB,EAAA2D,KAAAe,GAAAgsB,WAAA3B,EAAAhqB,EAAA6pB,eAAA7pB,EAAA2pB,iBACAhqB,GAAAvJ,KAAA4J,EAAA+nB,WAAAl2B,OAAAmO,EAAAqoB,WAAAoD,GAGAD,EAAAxrB,EAAA0nB,cAAAsC,EAAA,IACArqB,GAAAvJ,KAAA20B,EAAA,SAAAG,GACAvrB,GAAAvJ,KAAA80B,EAAAC,OAAAM,GACA9rB,GAAAvJ,KAAA80B,EAAAE,MAAAK,GACA9rB,GAAAvJ,KAAA80B,EAAAG,MAAAI,KAIAD,EAAA,EAGAvwB,EAAA2D,KAAAe,GAAAgsB,WAAAlB,EAAAzqB,EAAAwqB,iBAAAxqB,EAAAsqB,mBACA3qB,GAAAvJ,KAAA4J,EAAAuoB,OAAAkD,GAGA/yC,GAAA,EAAAsnB,EAAAsnB,SAEA,CACA5uC,QACAC,UAOA,SAAAizC,GAAAd,EAAA7uB,GACA,IAYA4vB,EAAAC,EACAC,EAAAC,EACAC,EAdAjsB,EAAA8qB,EAAAlqB,OACAvrB,EAAAy1C,EAAAv1C,OACAi2B,EAAAsf,EAAAv1C,OAAAi2B,UACAie,EAAA,SACAC,EAAA,SAEA1pB,EAAAziB,EAAA0e,EAAAtjB,OACA+wC,EAAA,MACE1pB,EAAAziB,EAAAlI,EAAAsD,OAAAsjB,EAAAtjB,SACF+wC,EAAA,UAMA,IAAAwC,GAAA1gB,EAAAnQ,KAAAmQ,EAAAjQ,OAAA,EACA4wB,GAAA3gB,EAAAlQ,IAAAkQ,EAAAhQ,QAAA,EAEA,WAAAkuB,GACAmC,EAAA,SAAAvuC,GACA,OAAAA,GAAA4uC,GAEAJ,EAAA,SAAAxuC,GACA,OAAAA,EAAA4uC,KAGAL,EAAA,SAAAvuC,GACA,OAAAA,GAAA2e,EAAAvjB,MAAA,GAEAozC,EAAA,SAAAxuC,GACA,OAAAA,GAAAjI,EAAAqD,MAAAujB,EAAAvjB,MAAA,IAIAqzC,EAAA,SAAAzuC,GACA,OAAAA,EAAA2e,EAAAvjB,MAAAsnB,EAAAwnB,UAAAxnB,EAAAunB,aAAAlyC,EAAAqD,OAEAszC,EAAA,SAAA1uC,GACA,OAAAA,EAAA2e,EAAAvjB,MAAAsnB,EAAAwnB,UAAAxnB,EAAAunB,aAAA,GAEA0E,EAAA,SAAA1uC,GACA,OAAAA,GAAA4uC,EAAA,gBAGAN,EAAA7rB,EAAA1iB,IACAmsC,EAAA,OAGAsC,EAAA/rB,EAAA1iB,KACAmsC,EAAA,SACAC,EAAAuC,EAAAjsB,EAAAziB,KAEEuuC,EAAA9rB,EAAA1iB,KACFmsC,EAAA,QAGAuC,EAAAhsB,EAAA1iB,KACAmsC,EAAA,SACAC,EAAAuC,EAAAjsB,EAAAziB,KAIA,IAAAk2B,EAAAqX,EAAA3Y,SACA,OACAsX,OAAAhW,EAAAgW,OAAAhW,EAAAgW,SACAC,OAAAjW,EAAAiW,OAAAjW,EAAAiW,UAOA,SAAA0C,GAAA1kB,EAAAzL,EAAAowB,EAAAh3C,GAEA,IAAAiI,EAAAoqB,EAAApqB,EACAC,EAAAmqB,EAAAnqB,EAEAiqC,EAAA9f,EAAA8f,UACAD,EAAA7f,EAAA6f,aACArrB,EAAAwL,EAAAxL,aACAutB,EAAA4C,EAAA5C,OACAC,EAAA2C,EAAA3C,OACA4C,EAAA9E,EAAAD,EACAgF,EAAArwB,EAAAqrB,EAkCA,MAhCA,UAAAkC,EACAnsC,GAAA2e,EAAAvjB,MACE,WAAA+wC,IACFnsC,GAAA2e,EAAAvjB,MAAA,EACA4E,EAAA2e,EAAAvjB,MAAArD,EAAAqD,QACA4E,EAAAjI,EAAAqD,MAAAujB,EAAAvjB,OAEA4E,EAAA,IACAA,EAAA,IAIA,QAAAosC,EACAnsC,GAAA+uC,EAEA/uC,GADE,WAAAmsC,EACFztB,EAAAtjB,OAAA2zC,EAEArwB,EAAAtjB,OAAA,EAGA,WAAA+wC,EACA,SAAAD,EACAnsC,GAAAgvC,EACG,UAAA7C,IACHnsC,GAAAgvC,GAEE,SAAA7C,EACFnsC,GAAAivC,EACE,UAAA9C,IACFnsC,GAAAivC,GAGA,CACAjvC,IACAC,KAIA,SAAAivC,GAAA9kB,EAAA+kB,GACA,iBAAAA,EACA/kB,EAAApqB,EAAAoqB,EAAAhvB,MAAA,EACA,UAAA+zC,EACA/kB,EAAApqB,EAAAoqB,EAAAhvB,MAAAgvB,EAAA4f,SACA5f,EAAApqB,EAAAoqB,EAAA4f,SAMA,SAAAoF,GAAAz2B,GACA,OAAA+yB,GAAA,GAAAE,GAAAjzB,IAGA,IAAA02B,GAAAzrB,GAAA3J,OAAA,CACAiJ,WAAA,WACAluB,KAAAsuB,OAAA2oB,GAAAj3C,KAAA6/B,UACA7/B,KAAAs6C,YAAA,IAKAC,SAAA,WACA,IAAAl1B,EAAArlB,KACAmhC,EAAA9b,EAAAwa,SACAV,EAAAgC,EAAAhC,UAEAkW,EAAAlW,EAAAkW,YAAA3sC,MAAA2c,EAAA1c,WACA2C,EAAA6zB,EAAA7zB,MAAA5C,MAAA2c,EAAA1c,WACA6sC,EAAArW,EAAAqW,WAAA9sC,MAAA2c,EAAA1c,WAEAmwC,EAAA,GAKA,OAJAA,EAAApC,GAAAoC,EAAAlC,GAAAvB,IACAyD,EAAApC,GAAAoC,EAAAlC,GAAAtrC,IACAwtC,EAAApC,GAAAoC,EAAAlC,GAAApB,IAEAsD,GAIA0B,cAAA,WACA,OAAAJ,GAAAp6C,KAAA6/B,SAAAV,UAAAsW,WAAA/sC,MAAA1I,KAAA2I,aAIA8xC,QAAA,SAAAnF,EAAA7wC,GACA,IAAA4gB,EAAArlB,KACAm/B,EAAA9Z,EAAAwa,SAAAV,UACAub,EAAA,GAeA,OAbArtB,GAAAvJ,KAAAwxB,EAAA,SAAAzU,GACA,IAAA+X,EAAA,CACAC,OAAA,GACAC,MAAA,GACAC,MAAA,IAEArC,GAAAkC,EAAAC,OAAAjC,GAAAzX,EAAAuW,YAAA/5B,KAAA0J,EAAAwb,EAAAp8B,KACAiyC,GAAAkC,EAAAE,MAAA3Z,EAAA77B,MAAAqY,KAAA0J,EAAAwb,EAAAp8B,IACAiyC,GAAAkC,EAAAG,MAAAnC,GAAAzX,EAAA2W,WAAAn6B,KAAA0J,EAAAwb,EAAAp8B,KAEAi2C,EAAA3zC,KAAA6xC,KAGA8B,GAIAC,aAAA,WACA,OAAAP,GAAAp6C,KAAA6/B,SAAAV,UAAA4W,UAAArtC,MAAA1I,KAAA2I,aAKAiyC,UAAA,WACA,IAAAv1B,EAAArlB,KACAm/B,EAAA9Z,EAAAwa,SAAAV,UAEA6W,EAAA7W,EAAA6W,aAAAttC,MAAA2c,EAAA1c,WACAstC,EAAA9W,EAAA8W,OAAAvtC,MAAA2c,EAAA1c,WACAutC,EAAA/W,EAAA+W,YAAAxtC,MAAA2c,EAAA1c,WAEAmwC,EAAA,GAKA,OAJAA,EAAApC,GAAAoC,EAAAlC,GAAAZ,IACA8C,EAAApC,GAAAoC,EAAAlC,GAAAX,IACA6C,EAAApC,GAAAoC,EAAAlC,GAAAV,IAEA4C,GAGA/zC,OAAA,SAAA81C,GACA,IA8BA/2C,EAAAmgB,EA9BAoB,EAAArlB,KACAmhC,EAAA9b,EAAAwa,SAKAib,EAAAz1B,EAAAiJ,OACAZ,EAAArI,EAAAiJ,OAAA2oB,GAAA9V,GACA4Z,EAAA11B,EAAA21B,QAEAv2C,EAAA4gB,EAAAwN,MAGAknB,EAAA,CACA5C,OAAA2D,EAAA3D,OACAC,OAAA0D,EAAA1D,QAEA6D,EAAA,CACAjwC,EAAA8vC,EAAA9vC,EACAC,EAAA6vC,EAAA7vC,GAEAiwC,EAAA,CACA90C,MAAA00C,EAAA10C,MACAC,OAAAy0C,EAAAz0C,QAEAooB,EAAA,CACAzjB,EAAA8vC,EAAAK,OACAlwC,EAAA6vC,EAAAM,QAKA,GAAAL,EAAAn3C,OAAA,CACA8pB,EAAA2qB,QAAA,EAEA,IAAAgD,EAAA,GACAC,EAAA,GACA7sB,EAAA0nB,GAAAhV,EAAAlC,UAAAtjB,KAAA0J,EAAA01B,EAAA11B,EAAAk2B,gBAEA,IAAAjG,EAAA,GACA,IAAAxxC,EAAA,EAAAmgB,EAAA82B,EAAAn3C,OAAmCE,EAAAmgB,IAASngB,EAC5CwxC,EAAAvuC,KAAA8vC,GAAAkE,EAAAj3C,KAIAq9B,EAAA/8B,SACAkxC,IAAAlxC,OAAA,SAAA8C,GACA,OAAAi6B,EAAA/8B,OAAA8C,EAAAzC,MAKA08B,EAAAqa,WACAlG,IAAAxM,KAAA,SAAA5hC,EAAAmI,GACA,OAAA8xB,EAAAqa,SAAAt0C,EAAAmI,EAAA5K,MAKA4oB,GAAAvJ,KAAAwxB,EAAA,SAAAzU,GACAwa,EAAAt0C,KAAAo6B,EAAAhC,UAAAwW,WAAAh6B,KAAA0J,EAAAwb,EAAAxb,EAAApiB,SACAq4C,EAAAv0C,KAAAo6B,EAAAhC,UAAA0W,eAAAl6B,KAAA0J,EAAAwb,EAAAxb,EAAApiB,WAKAyqB,EAAApiB,MAAA+Z,EAAAk1B,SAAAjF,EAAA7wC,GACAipB,EAAA+nB,WAAApwB,EAAAm1B,cAAAlF,EAAA7wC,GACAipB,EAAA+qB,KAAApzB,EAAAo1B,QAAAnF,EAAA7wC,GACAipB,EAAAqoB,UAAA1wB,EAAAs1B,aAAArF,EAAA7wC,GACAipB,EAAAuoB,OAAA5wB,EAAAu1B,UAAAtF,EAAA7wC,GAGAipB,EAAA1iB,EAAAyjB,EAAAzjB,EACA0iB,EAAAziB,EAAAwjB,EAAAxjB,EACAyiB,EAAAunB,aAAA9T,EAAA8T,aACAvnB,EAAA2tB,cACA3tB,EAAA4tB,kBAGA5tB,EAAA+tB,WAAAnG,EAGA4F,EAAA3C,GAAAv4C,KAAA0tB,GACAqsB,EAAAT,GAAAt5C,KAAAk7C,GAEAD,EAAAnB,GAAApsB,EAAAwtB,EAAAnB,EAAA10B,EAAApiB,aAEAyqB,EAAA2qB,QAAA,EAoBA,OAjBA3qB,EAAAypB,OAAA4C,EAAA5C,OACAzpB,EAAA0pB,OAAA2C,EAAA3C,OACA1pB,EAAA1iB,EAAAiwC,EAAAjwC,EACA0iB,EAAAziB,EAAAgwC,EAAAhwC,EACAyiB,EAAAtnB,MAAA80C,EAAA90C,MACAsnB,EAAArnB,OAAA60C,EAAA70C,OAGAqnB,EAAAytB,OAAA1sB,EAAAzjB,EACA0iB,EAAA0tB,OAAA3sB,EAAAxjB,EAEAoa,EAAAiJ,OAAAZ,EAEAmtB,GAAA1Z,EAAApN,QACAoN,EAAApN,OAAApY,KAAA0J,EAAAqI,GAGArI,GAGAq2B,UAAA,SAAAC,EAAAhyB,GACA,IAAAhB,EAAA3oB,KAAAiD,OAAA0lB,IACAyM,EAAAp1B,KAAAquB,MACAutB,EAAA57C,KAAA67C,iBAAAF,EAAAhyB,EAAAyL,GAEAzM,EAAAqB,OAAA4xB,EAAAtiB,GAAAsiB,EAAApiB,IACA7Q,EAAAqB,OAAA4xB,EAAAriB,GAAAqiB,EAAApqC,IACAmX,EAAAqB,OAAA4xB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAhyB,EAAAyL,GACA,IAAAkE,EAAAC,EAAAuiB,EAAAtiB,EAAAhoB,EAAAuqC,EACA7G,EAAA9f,EAAA8f,UACAtrB,EAAAwL,EAAAxL,aACAutB,EAAA/hB,EAAA+hB,OACAC,EAAAhiB,EAAAgiB,OACA4E,EAAAL,EAAA3wC,EACAixC,EAAAN,EAAA1wC,EACA7E,EAAAujB,EAAAvjB,MACAC,EAAAsjB,EAAAtjB,OAEA,cAAA+wC,EACA5lC,EAAAyqC,EAAA51C,EAAA,EAEA,SAAA8wC,GACA7d,EAAA0iB,EACAziB,EAAAD,EAAA4b,EACA4G,EAAAxiB,EAEAE,EAAAhoB,EAAA0jC,EACA6G,EAAAvqC,EAAA0jC,IAEA5b,EAAA0iB,EAAA51C,EACAmzB,EAAAD,EAAA4b,EACA4G,EAAAxiB,EAEAE,EAAAhoB,EAAA0jC,EACA6G,EAAAvqC,EAAA0jC,QAgBA,GAbA,SAAAiC,GACA5d,EAAAyiB,EAAApyB,EAAA,EACA0P,EAAAC,EAAA2b,EACA4G,EAAAviB,EAAA2b,GACI,UAAAiC,GACJ5d,EAAAyiB,EAAA51C,EAAAwjB,EAAAsrB,EACA5b,EAAAC,EAAA2b,EACA4G,EAAAviB,EAAA2b,IAEA3b,EAAAnE,EAAA+lB,OACA7hB,EAAAC,EAAA2b,EACA4G,EAAAviB,EAAA2b,GAEA,QAAAkC,EACA5d,EAAAyiB,EACAzqC,EAAAgoB,EAAA0b,EACA6G,EAAAviB,MACI,CACJA,EAAAyiB,EAAA51C,EACAmL,EAAAgoB,EAAA0b,EACA6G,EAAAviB,EAEA,IAAA0iB,EAAAJ,EACAA,EAAAxiB,EACAA,EAAA4iB,EAGA,OAAU5iB,KAAAC,KAAAuiB,KAAAtiB,KAAAhoB,KAAAuqC,OAGVI,UAAA,SAAA7X,EAAAlP,EAAAzM,GACA,IAAArd,EAAA8pB,EAAA9pB,MAEA,GAAAA,EAAA1H,OAAA,CACA0gC,EAAAt5B,EAAAkvC,GAAA9kB,IAAA2iB,aAEApvB,EAAAyzB,UAAAhnB,EAAA2iB,YACApvB,EAAA0zB,aAAA,MAEA,IAMAv4C,EAAAmgB,EANA6zB,EAAA1iB,EAAA0iB,cACA3D,EAAA/e,EAAA+e,aAMA,IAJAxrB,EAAAkO,UAAAzB,EAAAif,eACA1rB,EAAA2D,KAAAe,GAAAgsB,WAAAvB,EAAA1iB,EAAAyiB,gBAAAziB,EAAAuiB,kBAGA7zC,EAAA,EAAAmgB,EAAA3Y,EAAA1H,OAAkCE,EAAAmgB,IAASngB,EAC3C6kB,EAAA2zB,SAAAhxC,EAAAxH,GAAAwgC,EAAAt5B,EAAAs5B,EAAAr5B,GACAq5B,EAAAr5B,GAAA6sC,EAAA3D,EAEArwC,EAAA,IAAAwH,EAAA1H,SACA0gC,EAAAr5B,GAAAmqB,EAAAgf,kBAAAD,KAMAoI,SAAA,SAAAjY,EAAAlP,EAAAzM,GACA,IAQA6zB,EARA9E,EAAAtiB,EAAAsiB,aACAnD,EAAAnf,EAAAmf,YACAE,EAAArf,EAAAqiB,WACAgB,EAAArjB,EAAAqjB,KACAgE,EAAArnB,EAAAggB,cACAiG,EAAAjmB,EAAAimB,YACAqB,EAAA,EACAC,EAAAF,EAAAvC,GAAA9kB,EAAA,UAGAzM,EAAAyzB,UAAA3H,EACA9rB,EAAA0zB,aAAA,MACA1zB,EAAA2D,KAAAe,GAAAgsB,WAAA3B,EAAAtiB,EAAAmiB,eAAAniB,EAAAiiB,iBAEA/S,EAAAt5B,EAAAkvC,GAAA9kB,EAAAqf,GAGA,IAAAmI,EAAA,SAAA1lB,GACAvO,EAAA2zB,SAAAplB,EAAAoN,EAAAt5B,EAAA0xC,EAAApY,EAAAr5B,GACAq5B,EAAAr5B,GAAAysC,EAAAnD,GAIA5rB,EAAAkO,UAAAzB,EAAAof,cACAnnB,GAAAvJ,KAAAsR,EAAAqgB,WAAAmH,GAEAF,EAAAD,GAAA,UAAAhI,EACA,WAAAA,EAAAiD,EAAA,IAAAA,EAAA,EACA,EAGArqB,GAAAvJ,KAAA20B,EAAA,SAAAG,EAAA90C,GACA04C,EAAApnB,EAAAkmB,gBAAAx3C,GACA6kB,EAAAkO,UAAA2lB,EACAnvB,GAAAvJ,KAAA80B,EAAAC,OAAA+D,GAEAvvB,GAAAvJ,KAAA80B,EAAAE,MAAA,SAAA5hB,GAEAulB,IAEA9zB,EAAAkO,UAAAzB,EAAAkjB,sBACA3vB,EAAAkS,SAAA8hB,EAAArY,EAAAr5B,EAAAysC,KAGA/uB,EAAAmO,UAAA,EACAnO,EAAAqO,YAAAqkB,EAAAv3C,GAAAkF,YACA2f,EAAAk0B,WAAAF,EAAArY,EAAAr5B,EAAAysC,KAGA/uB,EAAAkO,UAAAwkB,EAAAv3C,GAAAmF,gBACA0f,EAAAkS,SAAA8hB,EAAA,EAAArY,EAAAr5B,EAAA,EAAAysC,EAAA,EAAAA,EAAA,GACA/uB,EAAAkO,UAAA2lB,GAGAI,EAAA1lB,KAGA7J,GAAAvJ,KAAA80B,EAAAG,MAAA6D,KAIAF,EAAA,EAGArvB,GAAAvJ,KAAAsR,EAAA2gB,UAAA6G,GACAtY,EAAAr5B,GAAAspC,GAGAuI,WAAA,SAAAxY,EAAAlP,EAAAzM,GACA,IAAAstB,EAAA7gB,EAAA6gB,OAEAA,EAAAryC,SACA0gC,EAAAt5B,EAAAkvC,GAAA9kB,IAAAgjB,cACA9T,EAAAr5B,GAAAmqB,EAAAwf,gBAEAjsB,EAAAyzB,UAAAhnB,EAAAgjB,aACAzvB,EAAA0zB,aAAA,MAEA1zB,EAAAkO,UAAAzB,EAAAyf,gBACAlsB,EAAA2D,KAAAe,GAAAgsB,WAAAjkB,EAAA+iB,eAAA/iB,EAAA8iB,iBAAA9iB,EAAA4iB,mBAEA3qB,GAAAvJ,KAAAmyB,EAAA,SAAA/e,GACAvO,EAAA2zB,SAAAplB,EAAAoN,EAAAt5B,EAAAs5B,EAAAr5B,GACAq5B,EAAAr5B,GAAAmqB,EAAA+iB,eAAA/iB,EAAAuf,kBAKAoI,eAAA,SAAAzY,EAAAlP,EAAAzM,EAAAuyB,GACAvyB,EAAAkO,UAAAzB,EAAAnsB,gBACA0f,EAAAqO,YAAA5B,EAAApsB,YACA2f,EAAAmO,UAAA1B,EAAAnB,YACA,IAAAkjB,EAAA/hB,EAAA+hB,OACAC,EAAAhiB,EAAAgiB,OACApsC,EAAAs5B,EAAAt5B,EACAC,EAAAq5B,EAAAr5B,EACA7E,EAAA80C,EAAA90C,MACAC,EAAA60C,EAAA70C,OACAyiB,EAAAsM,EAAAxL,aAEAjB,EAAAoB,YACApB,EAAAQ,OAAAne,EAAA8d,EAAA7d,GACA,QAAAmsC,GACAp3C,KAAA07C,UAAApX,EAAA4W,GAEAvyB,EAAAqB,OAAAhf,EAAA5E,EAAA0iB,EAAA7d,GACA0d,EAAAq0B,iBAAAhyC,EAAA5E,EAAA6E,EAAAD,EAAA5E,EAAA6E,EAAA6d,GACA,WAAAsuB,GAAA,UAAAD,GACAn3C,KAAA07C,UAAApX,EAAA4W,GAEAvyB,EAAAqB,OAAAhf,EAAA5E,EAAA6E,EAAA5E,EAAAyiB,GACAH,EAAAq0B,iBAAAhyC,EAAA5E,EAAA6E,EAAA5E,EAAA2E,EAAA5E,EAAA0iB,EAAA7d,EAAA5E,GACA,WAAA+wC,GACAp3C,KAAA07C,UAAApX,EAAA4W,GAEAvyB,EAAAqB,OAAAhf,EAAA8d,EAAA7d,EAAA5E,GACAsiB,EAAAq0B,iBAAAhyC,EAAAC,EAAA5E,EAAA2E,EAAAC,EAAA5E,EAAAyiB,GACA,WAAAsuB,GAAA,SAAAD,GACAn3C,KAAA07C,UAAApX,EAAA4W,GAEAvyB,EAAAqB,OAAAhf,EAAAC,EAAA6d,GACAH,EAAAq0B,iBAAAhyC,EAAAC,EAAAD,EAAA8d,EAAA7d,GACA0d,EAAAU,YAEAV,EAAAuB,OAEAkL,EAAAnB,YAAA,GACAtL,EAAAwB,UAIAwJ,KAAA,WACA,IAAAhL,EAAA3oB,KAAAiD,OAAA0lB,IACAyM,EAAAp1B,KAAAquB,MAEA,OAAA+G,EAAAijB,QAAA,CAIA,IAAA6C,EAAA,CACA90C,MAAAgvB,EAAAhvB,MACAC,OAAA+uB,EAAA/uB,QAEAi+B,EAAA,CACAt5B,EAAAoqB,EAAApqB,EACAC,EAAAmqB,EAAAnqB,GAIAotC,EAAA9oC,KAAAkpB,IAAArD,EAAAijB,QAAA,QAAAjjB,EAAAijB,QAGA4E,EAAA7nB,EAAA9pB,MAAA1H,QAAAwxB,EAAAqgB,WAAA7xC,QAAAwxB,EAAAqjB,KAAA70C,QAAAwxB,EAAA2gB,UAAAnyC,QAAAwxB,EAAA6gB,OAAAryC,OAEA5D,KAAA6/B,SAAAoU,SAAAgJ,IACAt0B,EAAA8B,OACA9B,EAAAu0B,YAAA7E,EAGAr4C,KAAA+8C,eAAAzY,EAAAlP,EAAAzM,EAAAuyB,GAGA5W,EAAAr5B,GAAAmqB,EAAA2f,SAGA/0C,KAAAm8C,UAAA7X,EAAAlP,EAAAzM,GAGA3oB,KAAAu8C,SAAAjY,EAAAlP,EAAAzM,GAGA3oB,KAAA88C,WAAAxY,EAAAlP,EAAAzM,GAEAA,EAAAiC,aAUAuyB,YAAA,SAAAnxC,GACA,IAAAqZ,EAAArlB,KACAkF,EAAAmgB,EAAAwa,SACAgb,GAAA,EA6BA,OA3BAx1B,EAAAi1B,YAAAj1B,EAAAi1B,aAAA,GAGA,aAAAtuC,EAAAzG,KACA8f,EAAA21B,QAAA,GAEA31B,EAAA21B,QAAA31B,EAAApiB,OAAAm6C,0BAAApxC,EAAA9G,EAAAs3B,KAAAt3B,GAIA21C,GAAAxtB,GAAAnJ,YAAAmB,EAAA21B,QAAA31B,EAAAi1B,aAGAO,IACAx1B,EAAAi1B,YAAAj1B,EAAA21B,SAEA91C,EAAA+uC,SAAA/uC,EAAA6uB,UACA1O,EAAAk2B,eAAA,CACAvwC,EAAAgB,EAAAhB,EACAC,EAAAe,EAAAf,GAGAoa,EAAAtgB,QAAA,GACAsgB,EAAA+I,UAIAysB,KAOAwC,GAAAlH,GAEAmH,GAAAjD,GACAiD,GAAAnH,YAAAkH,GAEA,IAAAE,GAAAlwB,GAAA7J,eA4BA,SAAAg6B,KACA,OAAAnwB,GAAAzI,MAAA,GAA0B,GAAAlJ,MAAAC,KAAAhT,WAAA,CAC1Bqc,OAAA,SAAA3gB,EAAA+F,EAAA8X,EAAAhd,GACA,aAAAb,GAAA,UAAAA,EAAA,CACA,IACAP,EAAAyB,EAAA2Y,EADAu/B,EAAAv7B,EAAA7d,GAAAT,OAOA,IAJAwG,EAAA/F,KACA+F,EAAA/F,GAAA,IAGAP,EAAA,EAAeA,EAAA25C,IAAU35C,EACzBoa,EAAAgE,EAAA7d,GAAAP,GACAyB,EAAAg4C,GAAAr/B,EAAA3Y,KAAA,UAAAlB,EAAA,qBAEAP,GAAAsG,EAAA/F,GAAAT,QACAwG,EAAA/F,GAAA0C,KAAA,KAGAqD,EAAA/F,GAAAP,GAAAyB,MAAA2Y,EAAA3Y,MAAA2Y,EAAA3Y,OAAA6E,EAAA/F,GAAAP,GAAAyB,KAGA8nB,GAAAzI,MAAAxa,EAAA/F,GAAAP,GAAA,CAAAwvC,GAAAM,iBAAAruC,GAAA2Y,IAGAmP,GAAAzI,MAAAxa,EAAA/F,GAAAP,GAAAoa,QAIAmP,GAAA5I,QAAApgB,EAAA+F,EAAA8X,EAAAhd,MAWA,SAAAw4C,KACA,OAAArwB,GAAAzI,MAAA,GAA0B,GAAAlJ,MAAAC,KAAAhT,WAAA,CAC1Bqc,OAAA,SAAA3gB,EAAA+F,EAAA8X,EAAAhd,GACA,IAAAwf,EAAAta,EAAA/F,IAAA,GACAsgB,EAAAzC,EAAA7d,GAEA,WAAAA,EAEA+F,EAAA/F,GAAAm5C,GAAA94B,EAAAC,GACI,UAAAtgB,EAEJ+F,EAAA/F,GAAAgpB,GAAAzI,MAAAF,EAAA,CAAA4uB,GAAAM,iBAAAjvB,EAAApf,MAAAof,IAEA0I,GAAA5I,QAAApgB,EAAA+F,EAAA8X,EAAAhd,MAMA,SAAAy4C,GAAAlQ,GACAA,KAAA,GAIA,IAAAhpC,EAAAgpC,EAAAhpC,KAAAgpC,EAAAhpC,MAAA,GASA,OARAA,EAAAtB,SAAAsB,EAAAtB,UAAA,GACAsB,EAAAE,OAAAF,EAAAE,QAAA,GAEA8oC,EAAAvoC,QAAAw4C,GACAtxB,GAAAxgB,OACAwgB,GAAAqhB,EAAAloC,MACAkoC,EAAAvoC,SAAA,IAEAuoC,EAGA,SAAAmQ,GAAA76C,GACA,IAAA86C,EAAA96C,EAAAmC,QAEAmoB,GAAAvJ,KAAA/gB,EAAAkvB,OAAA,SAAA/T,GACAorB,GAAAG,UAAA1mC,EAAAmb,KAGA2/B,EAAAH,GACAtxB,GAAAxgB,OACAwgB,GAAArpB,EAAA0qC,OAAAloC,MACAs4C,GAEA96C,EAAAmC,QAAAnC,EAAA0qC,OAAAvoC,QAAA24C,EACA96C,EAAA+6C,sBACA/6C,EAAAg7C,sBAGAh7C,EAAAy1C,QAAA3Y,SAAAge,EAAA3e,SACAn8B,EAAAy1C,QAAAtqB,aAGA,SAAA8vB,GAAA/e,GACA,cAAAA,GAAA,WAAAA,EA5HA7S,GAAAT,KAAA,UACA+H,SAAA,GACAuqB,OAAA,CACA,YACA,WACA,QACA,aACA,aAEA1hB,MAAA,CACA2hB,QAAA,KACA1hB,KAAA,UACA8K,WAAA,EACA6W,kBAAA,KAEA1d,QAAA,KACAqQ,qBAAA,EACA5nC,YAAA,EACAk1C,4BAAA,IA6GA,IAAAC,GAAA,SAAAx4B,EAAA4nB,GAEA,OADAztC,KAAAs+C,UAAAz4B,EAAA4nB,GACAztC,MAGAqtB,GAAApI,OAAAo5B,GAAAv2C,UAAA,CAIAw2C,UAAA,SAAAz4B,EAAA4nB,GACA,IAAApoB,EAAArlB,KAEAytC,EAAAkQ,GAAAlQ,GAEA,IAAArgB,EAAAkkB,GAAAvF,eAAAlmB,EAAA4nB,GACArmC,EAAAgmB,KAAAhmB,OACAf,EAAAe,KAAAf,OACAD,EAAAgB,KAAAhB,MAEAif,EAAAlf,GAAAknB,GAAAnK,MACAmC,EAAAsD,IAAAyE,EACA/H,EAAAje,SACAie,EAAAooB,SACApoB,EAAAjf,QACAif,EAAAhf,SACAgf,EAAA0oB,YAAA1nC,EAAAD,EAAAC,EAAA,KACAgf,EAAAngB,QAAAuoC,EAAAvoC,QACAmgB,EAAAk5B,iBAAA,EAUAl5B,EAAAtiB,MAAAsiB,EACAA,EAAAoZ,WAAApZ,EAGAg5B,GAAAG,UAAAn5B,EAAAlf,IAAAkf,EAGArhB,OAAAmrB,eAAA9J,EAAA,QACA+J,IAAA,WACA,OAAA/J,EAAAooB,OAAAhpC,MAEA2E,IAAA,SAAAhI,GACAikB,EAAAooB,OAAAhpC,KAAArD,KAIAgsB,GAAAhmB,GASAie,EAAA6I,aACA7I,EAAAtgB,UALAqd,QAAAC,MAAA,sEAWA6L,WAAA,WACA,IAAA7I,EAAArlB,KAsBA,OAnBAwyC,GAAAM,OAAAztB,EAAA,cAEAgI,GAAAoxB,YAAAp5B,IAAAngB,QAAAw5C,kBAEAr5B,EAAAs5B,aAEAt5B,EAAAngB,QAAAgE,YAEAmc,EAAAu5B,QAAA,GAIAv5B,EAAAy4B,sBACAz4B,EAAA04B,sBACA14B,EAAAw5B,cAGArM,GAAAM,OAAAztB,EAAA,aAEAA,GAGAqD,MAAA,WAEA,OADA2E,GAAAjmB,OAAAshB,MAAA1oB,MACAA,MAGA8+C,KAAA,WAGA,OADArvB,GAAAU,gBAAAnwB,MACAA,MAGA4+C,OAAA,SAAAG,GACA,IAAA15B,EAAArlB,KACAkF,EAAAmgB,EAAAngB,QACAkC,EAAAie,EAAAje,OACA2mC,EAAA7oC,EAAA4rC,qBAAAzrB,EAAA0oB,aAAA,KAMAiR,EAAAzvC,KAAAC,IAAA,EAAAD,KAAAqB,MAAAyc,GAAA4xB,gBAAA73C,KACA83C,EAAA3vC,KAAAC,IAAA,EAAAD,KAAAqB,MAAAm9B,EAAAiR,EAAAjR,EAAA1gB,GAAA8xB,iBAAA/3C,KAEA,IAAAie,EAAAjf,QAAA44C,GAAA35B,EAAAhf,SAAA64C,KAIA93C,EAAAhB,MAAAif,EAAAjf,MAAA44C,EACA53C,EAAAf,OAAAgf,EAAAhf,OAAA64C,EACA93C,EAAArB,MAAAK,MAAA44C,EAAA,KACA53C,EAAArB,MAAAM,OAAA64C,EAAA,KAEA7xB,GAAAoxB,YAAAp5B,EAAAngB,EAAAw5C,mBAEAK,GAAA,CAEA,IAAAK,EAAA,CAAkBh5C,MAAA44C,EAAA34C,OAAA64C,GAClB1M,GAAAM,OAAAztB,EAAA,UAAA+5B,IAGAl6C,EAAAm6C,UACAn6C,EAAAm6C,SAAAh6B,EAAA+5B,GAGA/5B,EAAAy5B,OACAz5B,EAAAtgB,OAAA,CACAuqB,SAAApqB,EAAAk5C,gCAKAN,oBAAA,WACA,IAAA54C,EAAAlF,KAAAkF,QACAo6C,EAAAp6C,EAAA+sB,QAAA,GACAstB,EAAAr6C,EAAAgZ,MAEAmP,GAAAvJ,KAAAw7B,EAAAptB,MAAA,SAAAstB,EAAA58B,GACA48B,EAAAr5C,GAAAq5C,EAAAr5C,IAAA,UAAAyc,IAGAyK,GAAAvJ,KAAAw7B,EAAAltB,MAAA,SAAAqtB,EAAA78B,GACA68B,EAAAt5C,GAAAs5C,EAAAt5C,IAAA,UAAAyc,IAGA28B,IACAA,EAAAp5C,GAAAo5C,EAAAp5C,IAAA,UAOA43C,oBAAA,WACA,IAAA14B,EAAArlB,KACAkF,EAAAmgB,EAAAngB,QACA+sB,EAAA5M,EAAA4M,QAAA,GACAkW,EAAA,GACAuX,EAAA17C,OAAAC,KAAAguB,GAAA0mB,OAAA,SAAA95B,EAAA1Y,GAEA,OADA0Y,EAAA1Y,IAAA,EACA0Y,GACG,IAEH3Z,EAAA+sB,SACAkW,IAAA5oB,QACAra,EAAA+sB,OAAAC,OAAA,IAAA9uB,IAAA,SAAAo8C,GACA,OAAat6C,QAAAs6C,EAAAG,MAAA,WAAAC,UAAA,aAEb16C,EAAA+sB,OAAAG,OAAA,IAAAhvB,IAAA,SAAAq8C,GACA,OAAav6C,QAAAu6C,EAAAE,MAAA,SAAAC,UAAA,YAKb16C,EAAAgZ,OACAiqB,EAAAphC,KAAA,CACA7B,UAAAgZ,MACAyhC,MAAA,eACAE,WAAA,EACAD,UAAA,cAIAvyB,GAAAvJ,KAAAqkB,EAAA,SAAAtiB,GACA,IAAA05B,EAAA15B,EAAA3gB,QACAiB,EAAAo5C,EAAAp5C,GACA25C,EAAAvC,GAAAgC,EAAAh6C,KAAAsgB,EAAA85B,OAEA3B,GAAAuB,EAAAtgB,YAAA+e,GAAAn4B,EAAA+5B,aACAL,EAAAtgB,SAAApZ,EAAA+5B,WAGAF,EAAAv5C,IAAA,EACA,IAAA+X,EAAA,KACA,GAAA/X,KAAA8rB,KAAA9rB,GAAAZ,OAAAu6C,EACA5hC,EAAA+T,EAAA9rB,GACA+X,EAAAhZ,QAAAq6C,EACArhC,EAAAyK,IAAAtD,EAAAsD,IACAzK,EAAAnb,MAAAsiB,MACI,CACJ,IAAA06B,EAAAzM,GAAAK,oBAAAmM,GACA,IAAAC,EACA,OAEA7hC,EAAA,IAAA6hC,EAAA,CACA55C,KACAZ,KAAAu6C,EACA56C,QAAAq6C,EACA52B,IAAAtD,EAAAsD,IACA5lB,MAAAsiB,IAEA4M,EAAA/T,EAAA/X,IAAA+X,EAGAA,EAAA8hC,oBAKAn6B,EAAAg6B,YACAx6B,EAAAnH,WAIAmP,GAAAvJ,KAAA47B,EAAA,SAAAO,EAAA95C,GACA85C,UACAhuB,EAAA9rB,KAIAkf,EAAA4M,SAEAqhB,GAAAS,kBAAA/zC,OAGAkgD,yBAAA,WACA,IAAA76B,EAAArlB,KACAmgD,EAAA,GA0BA,OAxBA9yB,GAAAvJ,KAAAuB,EAAA5gB,KAAAtB,SAAA,SAAAE,EAAAkuB,GACA,IAAAM,EAAAxM,EAAAgN,eAAAd,GACAhsB,EAAAlC,EAAAkC,MAAA8f,EAAAooB,OAAAloC,KAQA,GANAssB,EAAAtsB,MAAAssB,EAAAtsB,WACA8f,EAAA+6B,mBAAA7uB,GACAM,EAAAxM,EAAAgN,eAAAd,IAEAM,EAAAtsB,OAEAssB,EAAA4M,WACA5M,EAAA4M,WAAA7M,YAAAL,GACAM,EAAA4M,WAAA/M,iBACI,CACJ,IAAA2uB,EAAA7Z,GAAA3U,EAAAtsB,MACA,QAAAuF,IAAAu1C,EACA,UAAAC,MAAA,IAAAzuB,EAAAtsB,KAAA,0BAGAssB,EAAA4M,WAAA,IAAA4hB,EAAAh7B,EAAAkM,GACA4uB,EAAAp5C,KAAA8qB,EAAA4M,cAEGpZ,GAEH86B,GAOAI,cAAA,WACA,IAAAl7B,EAAArlB,KACAqtB,GAAAvJ,KAAAuB,EAAA5gB,KAAAtB,SAAA,SAAAE,EAAAkuB,GACAlM,EAAAgN,eAAAd,GAAAkN,WAAA7L,SACGvN,IAMHuN,MAAA,WACA5yB,KAAAugD,gBACAvgD,KAAAw4C,QAAAtqB,cAGAnpB,OAAA,SAAA0oC,GACA,IAAApoB,EAAArlB,KAgBA,GAdAytC,GAAA,kBAAAA,IAEAA,EAAA,CACAne,SAAAme,EACA5d,KAAAlnB,UAAA,KAIAi1C,GAAAv4B,GAIAmtB,GAAAa,YAAAhuB,IAEA,IAAAmtB,GAAAM,OAAAztB,EAAA,iBAKAA,EAAAmzB,QAAA3lB,MAAAxN,EAAA5gB,KAGA,IAAA07C,EAAA96B,EAAA66B,2BAGA7yB,GAAAvJ,KAAAuB,EAAA5gB,KAAAtB,SAAA,SAAAE,EAAAkuB,GACAlM,EAAAgN,eAAAd,GAAAkN,WAAAnL,yBACGjO,GAEHA,EAAAm7B,eAGAn7B,EAAAngB,QAAAmqB,WAAAhK,EAAAngB,QAAAmqB,UAAAC,UACAjC,GAAAvJ,KAAAq8B,EAAA,SAAA1hB,GACAA,EAAA7L,UAIAvN,EAAAo7B,iBAIAp7B,EAAAmzB,QAAAtqB,aAIA7I,EAAAq7B,WAAA,GAGAlO,GAAAM,OAAAztB,EAAA,eAEAA,EAAAk5B,gBACAl5B,EAAAs7B,iBAAA,CACArxB,SAAAme,EAAAne,SACAhC,OAAAmgB,EAAAngB,OACAuC,KAAA4d,EAAA5d,MAGAxK,EAAAvlB,OAAA2tC,KASA+S,aAAA,WACA,IAAAn7B,EAAArlB,MAEA,IAAAwyC,GAAAM,OAAAztB,EAAA,kBAIAikB,GAAAvkC,OAAA/E,UAAAoG,MAAApG,KAAAqG,QASAmsC,GAAAM,OAAAztB,EAAA,oBACAmtB,GAAAM,OAAAztB,EAAA,iBAQAo7B,eAAA,WACA,IAAAp7B,EAAArlB,KAEA,QAAAwyC,GAAAM,OAAAztB,EAAA,yBAIA,QAAAvhB,EAAA,EAAAugB,EAAAgB,EAAA5gB,KAAAtB,SAAAS,OAAiDE,EAAAugB,IAAUvgB,EAC3DuhB,EAAAu7B,cAAA98C,GAGA0uC,GAAAM,OAAAztB,EAAA,yBAQAu7B,cAAA,SAAAh+B,GACA,IAAAyC,EAAArlB,KACA6xB,EAAAxM,EAAAgN,eAAAzP,GACAzS,EAAA,CACA0hB,OACAjP,UAGA,IAAA4vB,GAAAM,OAAAztB,EAAA,uBAAAlV,MAIA0hB,EAAA4M,WAAA15B,SAEAytC,GAAAM,OAAAztB,EAAA,sBAAAlV,MAGArQ,OAAA,SAAA2tC,GACA,IAAApoB,EAAArlB,KAEAytC,GAAA,kBAAAA,IAEAA,EAAA,CACAne,SAAAme,EACA5d,KAAAlnB,UAAA,KAIA,IAAAk4C,EAAAx7B,EAAAngB,QAAAmqB,UACAC,EAAAiuB,GAAA9P,EAAAne,SAAAuxB,KAAAvxB,UACAO,EAAA4d,EAAA5d,KAEA,QAAA2iB,GAAAM,OAAAztB,EAAA,iBAIA,IAAAmK,EAAA,SAAAH,GACAmjB,GAAAM,OAAAztB,EAAA,eACAgI,GAAA1J,SAAAk9B,KAAArxB,WAAA,CAAAH,GAAAhK,IAGA,GAAAw7B,GAAAvxB,EAAA,CACA,IAAAD,EAAA,IAAAH,GAAA,CACAH,SAAAO,EAAA,MACAhC,OAAAmgB,EAAAngB,QAAAuzB,EAAAvzB,OAEAxtB,OAAA,SAAAiD,EAAA+9C,GACA,IAAAC,EAAA1zB,GAAAC,OAAArH,QAAA66B,EAAAxzB,QACAwB,EAAAgyB,EAAAhyB,YACAkyB,EAAAlyB,EAAAgyB,EAAA/xB,SAEAhsB,EAAA4wB,KAAAotB,EAAAC,KAAAlyB,IAGAE,oBAAA6xB,EAAAtxB,WACAN,oBAAAO,IAGAC,GAAAG,aAAAvK,EAAAgK,EAAAC,EAAAO,QAEAxK,EAAAsO,OAGAnE,EAAA,IAAAN,GAAA,CAAkCH,SAAA,EAAAhsB,MAAAsiB,KAGlC,OAAAA,IAGAsO,KAAA,SAAAF,GACA,IAAApO,EAAArlB,KAEAqlB,EAAAqD,QAEA2E,GAAAlK,cAAAsQ,KACAA,EAAA,GAGApO,EAAAmJ,WAAAiF,GAEApO,EAAAjf,OAAA,GAAAif,EAAAhf,QAAA,IAIA,IAAAmsC,GAAAM,OAAAztB,EAAA,cAAAoO,MAKApG,GAAAvJ,KAAAuB,EAAA2jB,MAAA,SAAAC,GACAA,EAAAtV,KAAAtO,EAAA6T,YACG7T,GAEHA,EAAA47B,aAAAxtB,GACApO,EAAA67B,aAAAztB,GAEA+e,GAAAM,OAAAztB,EAAA,aAAAoO,MAMAjF,WAAA,SAAAiF,GAGA,IAFA,IAAApO,EAAArlB,KAEA8D,EAAA,EAAAugB,GAAAgB,EAAA5gB,KAAAtB,UAAA,IAAAS,OAAyDE,EAAAugB,IAAUvgB,EACnEuhB,EAAA4Y,iBAAAn6B,IACAuhB,EAAAgN,eAAAvuB,GAAA26B,WAAAjQ,WAAAiF,GAIApO,EAAAmzB,QAAAhqB,WAAAiF,IAQAwtB,aAAA,SAAAxtB,GACA,IAAApO,EAAArlB,KAEA,QAAAwyC,GAAAM,OAAAztB,EAAA,sBAAAoO,IAAA,CAKA,QAAA3vB,GAAAuhB,EAAA5gB,KAAAtB,UAAA,IAAAS,OAAA,EAAmDE,GAAA,IAAQA,EAC3DuhB,EAAA4Y,iBAAAn6B,IACAuhB,EAAA87B,YAAAr9C,EAAA2vB,GAIA+e,GAAAM,OAAAztB,EAAA,qBAAAoO,MAQA0tB,YAAA,SAAAv+B,EAAA6Q,GACA,IAAApO,EAAArlB,KACA6xB,EAAAxM,EAAAgN,eAAAzP,GACAzS,EAAA,CACA0hB,OACAjP,QACA6Q,gBAGA,IAAA+e,GAAAM,OAAAztB,EAAA,qBAAAlV,MAIA0hB,EAAA4M,WAAA9K,KAAAF,GAEA+e,GAAAM,OAAAztB,EAAA,oBAAAlV,MAQA+wC,aAAA,SAAAztB,GACA,IAAApO,EAAArlB,KACAw4C,EAAAnzB,EAAAmzB,QACAroC,EAAA,CACAqoC,UACA/kB,gBAGA,IAAA+e,GAAAM,OAAAztB,EAAA,qBAAAlV,MAIAqoC,EAAA7kB,OAEA6e,GAAAM,OAAAztB,EAAA,oBAAAlV,MAOAixC,kBAAA,SAAAp1C,GACA,OAAAo8B,GAAAC,MAAAC,OAAAtoC,KAAAgM,IAGAq1C,mBAAA,SAAAr1C,GACA,OAAAo8B,GAAAC,MAAA/kC,MAAAtD,KAAAgM,EAAA,CAAgDs7B,WAAA,KAGhDga,mBAAA,SAAAt1C,GACA,OAAAo8B,GAAAC,MAAA,UAAAroC,KAAAgM,EAAA,CAAoDs7B,WAAA,KAGpD8V,0BAAA,SAAApxC,EAAAwwB,EAAAt3B,GACA,IAAA8rB,EAAAoX,GAAAC,MAAA7L,GACA,0BAAAxL,EACAA,EAAAhxB,KAAAgM,EAAA9G,GAGA,IAGAq8C,kBAAA,SAAAv1C,GACA,OAAAo8B,GAAAC,MAAAhlC,QAAArD,KAAAgM,EAAA,CAAkDs7B,WAAA,KAGlDjV,eAAA,SAAAd,GACA,IAAAlM,EAAArlB,KACAqD,EAAAgiB,EAAA5gB,KAAAtB,SAAAouB,GACAluB,EAAAm+C,QACAn+C,EAAAm+C,MAAA,IAGA,IAAA3vB,EAAAxuB,EAAAm+C,MAAAn8B,EAAAlf,IAaA,OAZA0rB,IACAA,EAAAxuB,EAAAm+C,MAAAn8B,EAAAlf,IAAA,CACAZ,KAAA,KACAd,KAAA,GACApB,QAAA,KACAo7B,WAAA,KACAtQ,OAAA,KACA6D,QAAA,KACAG,QAAA,OAIAN,GAGA6T,uBAAA,WAEA,IADA,IAAAj7B,EAAA,EACA3G,EAAA,EAAAugB,EAAArkB,KAAAyE,KAAAtB,SAAAS,OAAmDE,EAAAugB,IAAUvgB,EAC7D9D,KAAAi+B,iBAAAn6B,IACA2G,IAGA,OAAAA,GAGAwzB,iBAAA,SAAA1M,GACA,IAAAM,EAAA7xB,KAAAqyB,eAAAd,GAIA,yBAAAM,EAAA1D,QAAA0D,EAAA1D,QAAAnuB,KAAAyE,KAAAtB,SAAAouB,GAAApD,QAGAnnB,eAAA,WACA,OAAAhH,KAAAkF,QAAAg7B,eAAAlgC,OAMAogD,mBAAA,SAAA7uB,GACA,IAAAprB,EAAAnG,KAAAmG,GACA9C,EAAArD,KAAAyE,KAAAtB,SAAAouB,GACAM,EAAAxuB,EAAAm+C,OAAAn+C,EAAAm+C,MAAAr7C,GAEA0rB,IACAA,EAAA4M,WAAAz5B,iBACA3B,EAAAm+C,MAAAr7C,KAIAnB,QAAA,WACA,IAEAlB,EAAAugB,EAFAgB,EAAArlB,KACAoH,EAAAie,EAAAje,OAMA,IAHAie,EAAAy5B,OAGAh7C,EAAA,EAAAugB,EAAAgB,EAAA5gB,KAAAtB,SAAAS,OAA6CE,EAAAugB,IAAUvgB,EACvDuhB,EAAA+6B,mBAAAt8C,GAGAsD,IACAie,EAAAo8B,eACAp0B,GAAAjmB,OAAAshB,MAAArD,GACAisB,GAAAY,eAAA7sB,EAAAsD,KACAtD,EAAAje,OAAA,KACAie,EAAAsD,IAAA,MAGA6pB,GAAAM,OAAAztB,EAAA,kBAEAg5B,GAAAG,UAAAn5B,EAAAlf,KAGAu7C,cAAA,WACA,OAAA1hD,KAAAoH,OAAAu6C,UAAAj5C,MAAA1I,KAAAoH,OAAAuB,YAGAk2C,YAAA,WACA,IAAAx5B,EAAArlB,KACAqlB,EAAAmzB,QAAA,IAAA8E,GAAA,CACAr6C,OAAAoiB,EACAu8B,eAAAv8B,EACAwN,MAAAxN,EAAA5gB,KACAo7B,SAAAxa,EAAAngB,QAAAg6B,UACG7Z,IAMHs5B,WAAA,WACA,IAAAt5B,EAAArlB,KACA6wB,EAAAxL,EAAAw8B,WAAA,GACAlxB,EAAA,WACAtL,EAAAy8B,aAAAp5C,MAAA2c,EAAA1c,YAGA0kB,GAAAvJ,KAAAuB,EAAAngB,QAAA+4C,OAAA,SAAA14C,GACA+rC,GAAAnD,iBAAA9oB,EAAA9f,EAAAorB,GACAE,EAAAtrB,GAAAorB,IAKAtL,EAAAngB,QAAAgE,aACAynB,EAAA,WACAtL,EAAAu5B,UAGAtN,GAAAnD,iBAAA9oB,EAAA,SAAAsL,GACAE,EAAA+tB,OAAAjuB,IAOA8wB,aAAA,WACA,IAAAp8B,EAAArlB,KACA6wB,EAAAxL,EAAAw8B,WACAhxB,WAIAxL,EAAAw8B,WACAx0B,GAAAvJ,KAAA+M,EAAA,SAAAF,EAAAprB,GACA+rC,GAAA7C,oBAAAppB,EAAA9f,EAAAorB,OAIAoxB,iBAAA,SAAAruB,EAAA8I,EAAAyX,GACA,IACA7gB,EAAAtvB,EAAAugB,EADA2M,EAAAijB,EAAA,mCAGA,IAAAnwC,EAAA,EAAAugB,EAAAqP,EAAA9vB,OAAqCE,EAAAugB,IAAUvgB,EAC/CsvB,EAAAM,EAAA5vB,GACAsvB,GACApzB,KAAAqyB,eAAAe,EAAAL,eAAA0L,WAAAzN,GAAAoC,IAQA0uB,aAAA,SAAA91C,GACA,IAAAqZ,EAAArlB,KACAw4C,EAAAnzB,EAAAmzB,QAEA,QAAAhG,GAAAM,OAAAztB,EAAA,eAAArZ,IAAA,CAKAqZ,EAAAk5B,iBAAA,EACAl5B,EAAAs7B,iBAAA,KAEA,IAAA9F,EAAAx1B,EAAA83B,YAAAnxC,GAKAwsC,IACAqC,EAAArC,EAAAjqB,OACAiqB,EAAA2E,YAAAnxC,GACA6uC,EAAArC,EAAA2E,YAAAnxC,IAGAwmC,GAAAM,OAAAztB,EAAA,cAAArZ,IAEA,IAAAg2C,EAAA38B,EAAAs7B,iBAmBA,OAlBAqB,EAEA38B,EAAAvlB,OAAAkiD,GACGnH,IAAAx1B,EAAA4K,YAEH5K,EAAAy5B,OAIAz5B,EAAAvlB,OAAA,CACAwvB,SAAAjK,EAAAngB,QAAAq3B,MAAA4hB,kBACAtuB,MAAA,KAIAxK,EAAAk5B,iBAAA,EACAl5B,EAAAs7B,iBAAA,KAEAt7B,IASA83B,YAAA,SAAAnxC,GACA,IAAAqZ,EAAArlB,KACAkF,EAAAmgB,EAAAngB,SAAA,GACA+8C,EAAA/8C,EAAAq3B,MACAse,GAAA,EAqCA,OAnCAx1B,EAAAq7B,WAAAr7B,EAAAq7B,YAAA,GAGA,aAAA10C,EAAAzG,KACA8f,EAAA01B,OAAA,GAEA11B,EAAA01B,OAAA11B,EAAA+3B,0BAAApxC,EAAAi2C,EAAAzlB,KAAAylB,GAKA50B,GAAA1J,SAAAze,EAAAg5C,SAAAh5C,EAAAq3B,MAAA2hB,QAAA,CAAAlyC,EAAAg7B,OAAA3hB,EAAA01B,QAAA11B,GAEA,YAAArZ,EAAAzG,MAAA,UAAAyG,EAAAzG,MACAL,EAAAu7B,SAEAv7B,EAAAu7B,QAAA9kB,KAAA0J,EAAArZ,EAAAg7B,OAAA3hB,EAAA01B,QAKA11B,EAAAq7B,WAAA98C,QACAyhB,EAAA08B,iBAAA18B,EAAAq7B,WAAAuB,EAAAzlB,MAAA,GAIAnX,EAAA01B,OAAAn3C,QAAAq+C,EAAAzlB,MACAnX,EAAA08B,iBAAA18B,EAAA01B,OAAAkH,EAAAzlB,MAAA,GAGAqe,GAAAxtB,GAAAnJ,YAAAmB,EAAA01B,OAAA11B,EAAAq7B,YAGAr7B,EAAAq7B,WAAAr7B,EAAA01B,OAEAF,KASAwD,GAAAG,UAAA,GAEA,IAAA0D,GAAA7D,GAWAA,GAAA8D,WAAA9D,GASAA,GAAA+D,MAAA,GASA/0B,GAAAg1B,YAAA3E,GASArwB,GAAAi1B,WAAA9E,GAEA,IAAA+E,GAAA,WAiZA,SAAAC,EAAAC,EAAAlU,EAAAmU,GACA,IAAAC,EAYA,MAXA,kBAAAF,GACAE,EAAA3kC,SAAAykC,EAAA,KAEA,IAAAA,EAAAn+C,QAAA,OAEAq+C,IAAA,IAAApU,EAAAwC,WAAA2R,KAGAC,EAAAF,EAGAE,EAOA,SAAAC,EAAAxhD,GACA,YAAA0J,IAAA1J,GAAA,OAAAA,GAAA,SAAAA,EAUA,SAAAyhD,EAAAC,EAAAC,EAAAC,GACA,IAAAv1B,EAAA2hB,SAAA6T,YACAlS,EAAA1jB,GAAA61B,eAAAJ,GACAK,EAAA11B,EAAA21B,iBAAAN,GAAAC,GACAM,EAAA51B,EAAA21B,iBAAArS,GAAAgS,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAh9C,OAAAihC,kBAEA,OAAA6b,GAAAC,EACAh0C,KAAAD,IACAg0C,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EACAD,EAAAf,EAAAa,EAAAtS,EAAAiS,GAAAQ,GAGA,OA3bAn2B,GAAAsb,MAAA,SAAA8a,EAAAC,GACA,GAAAr2B,GAAAjK,QAAAqgC,IAAA/8C,MAAAoB,UAAA1D,OACA,OAAAq/C,EAAAr/C,OAAAs/C,GAEA,IAAAC,EAAA,GAQA,OANAt2B,GAAAvJ,KAAA2/B,EAAA,SAAA59B,GACA69B,EAAA79B,IACA89B,EAAA58C,KAAA8e,KAIA89B,GAEAt2B,GAAA+C,UAAA1pB,MAAAoB,UAAAsoB,UACA,SAAAxK,EAAAjC,EAAAiI,GACA,OAAAhG,EAAAwK,UAAAzM,EAAAiI,IAEA,SAAAhG,EAAAjC,EAAAiI,GACAA,OAAA9gB,IAAA8gB,EAAAhG,EAAAgG,EACA,QAAA9nB,EAAA,EAAAugB,EAAAuB,EAAAhiB,OAAuCE,EAAAugB,IAAUvgB,EACjD,GAAA6f,EAAAhI,KAAAiQ,EAAAhG,EAAA9hB,KAAA8hB,GACA,OAAA9hB,EAGA,UAEAupB,GAAAse,cAAA,SAAAiY,EAAAF,EAAAG,GAEAx2B,GAAAlK,cAAA0gC,KACAA,GAAA,GAEA,QAAA//C,EAAA+/C,EAAA,EAA8B//C,EAAA8/C,EAAAhgD,OAA0BE,IAAA,CACxD,IAAAggD,EAAAF,EAAA9/C,GACA,GAAA4/C,EAAAI,GACA,OAAAA,IAIAz2B,GAAA02B,kBAAA,SAAAH,EAAAF,EAAAG,GAEAx2B,GAAAlK,cAAA0gC,KACAA,EAAAD,EAAAhgD,QAEA,QAAAE,EAAA+/C,EAAA,EAA8B//C,GAAA,EAAQA,IAAA,CACtC,IAAAggD,EAAAF,EAAA9/C,GACA,GAAA4/C,EAAAI,GACA,OAAAA,IAMAz2B,GAAAsB,SAAA,SAAA9uB,GACA,OAAAue,MAAAH,WAAApe,KAAA0jB,SAAA1jB,IAEAwtB,GAAA22B,aAAA,SAAAh5C,EAAAC,EAAAsf,GACA,OAAAhb,KAAAkpB,IAAAztB,EAAAC,GAAAsf,GAEA8C,GAAA42B,YAAA,SAAAj5C,EAAAuf,GACA,IAAA25B,EAAA30C,KAAAyM,MAAAhR,GACA,OAAAk5C,EAAA35B,EAAAvf,GAAAk5C,EAAA35B,EAAAvf,GAEAqiB,GAAA7d,IAAA,SAAAoW,GACA,OAAAA,EAAA+yB,OAAA,SAAAnpC,EAAApO,GACA,OAAAgd,MAAAhd,GAGAoO,EAFAD,KAAAC,MAAApO,IAGGoF,OAAA29C,oBAEH92B,GAAA/d,IAAA,SAAAsW,GACA,OAAAA,EAAA+yB,OAAA,SAAArpC,EAAAlO,GACA,OAAAgd,MAAAhd,GAGAkO,EAFAC,KAAAD,MAAAlO,IAGGoF,OAAAihC,oBAEHpa,GAAA+2B,KAAA70C,KAAA60C,KACA,SAAAp5C,GACA,OAAAuE,KAAA60C,KAAAp5C,IAEA,SAAAA,GAEA,OADAA,KACA,IAAAA,GAAAoT,MAAApT,GACAA,EAEAA,EAAA,QAEAqiB,GAAAg3B,MAAA90C,KAAA80C,MACA,SAAAr5C,GACA,OAAAuE,KAAA80C,MAAAr5C,IAEA,SAAAA,GACA,IAAAs5C,EAAA/0C,KAAAg1C,IAAAv5C,GAAAuE,KAAAi1C,OAGAC,EAAAl1C,KAAAyM,MAAAsoC,GACAI,EAAA15C,IAAAuE,KAAAS,IAAA,GAAAy0C,GAEA,OAAAC,EAAAD,EAAAH,GAEAj3B,GAAAs3B,UAAA,SAAAnjC,GACA,OAAAA,GAAAjS,KAAAoC,GAAA,MAEA0b,GAAAu3B,UAAA,SAAAC,GACA,OAAAA,GAAA,IAAAt1C,KAAAoC,KAUA0b,GAAAy3B,eAAA,SAAA95C,GACA,GAAAqiB,GAAA9J,SAAAvY,GAAA,CAGA,IAAAgB,EAAA,EACA8E,EAAA,EACA,MAAAvB,KAAAyM,MAAAhR,EAAAgB,OAAAhB,EACAgB,GAAA,GACA8E,IAEA,OAAAA,IAIAuc,GAAAqI,kBAAA,SAAAqvB,EAAAC,GACA,IAAAC,EAAAD,EAAAh6C,EAAA+5C,EAAA/5C,EACAk6C,EAAAF,EAAA/5C,EAAA85C,EAAA95C,EACAk6C,EAAA51C,KAAAqC,KAAAqzC,IAAAC,KAEAvvB,EAAApmB,KAAAmC,MAAAwzC,EAAAD,GAMA,OAJAtvB,GAAA,GAAApmB,KAAAoC,KACAgkB,GAAA,EAAApmB,KAAAoC,IAGA,CACAgkB,QACAC,SAAAuvB,IAGA93B,GAAAmpB,sBAAA,SAAA1O,EAAAC,GACA,OAAAx4B,KAAAqC,KAAArC,KAAAS,IAAA+3B,EAAA/8B,EAAA88B,EAAA98B,EAAA,GAAAuE,KAAAS,IAAA+3B,EAAA98B,EAAA68B,EAAA78B,EAAA,KASAoiB,GAAA+3B,WAAA,SAAAC,GACA,OAAAA,EAAA,YAWAh4B,GAAAi4B,YAAA,SAAAviD,EAAAwiD,EAAAn/C,GACA,IAAAs4C,EAAA37C,EAAAyiD,wBACAC,EAAAr/C,EAAA,EACA,OAAAmJ,KAAAyM,OAAAupC,EAAAE,GAAA/G,KAAA+G,GAGAp4B,GAAAoX,YAAA,SAAAihB,EAAAC,EAAAC,EAAA50C,GAMA,IAAA6Z,EAAA66B,EAAArtB,KAAAstB,EAAAD,EACAjuB,EAAAkuB,EACAvpB,EAAAwpB,EAAAvtB,KAAAstB,EAAAC,EAEAC,EAAAt2C,KAAAqC,KAAArC,KAAAS,IAAAynB,EAAAzsB,EAAA6f,EAAA7f,EAAA,GAAAuE,KAAAS,IAAAynB,EAAAxsB,EAAA4f,EAAA5f,EAAA,IACA66C,EAAAv2C,KAAAqC,KAAArC,KAAAS,IAAAosB,EAAApxB,EAAAysB,EAAAzsB,EAAA,GAAAuE,KAAAS,IAAAosB,EAAAnxB,EAAAwsB,EAAAxsB,EAAA,IAEA86C,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAGAC,EAAA3nC,MAAA2nC,GAAA,EAAAA,EACAC,EAAA5nC,MAAA4nC,GAAA,EAAAA,EAEA,IAAAC,EAAAj1C,EAAA+0C,EACAG,EAAAl1C,EAAAg1C,EAEA,OACAn7B,SAAA,CACA7f,EAAAysB,EAAAzsB,EAAAi7C,GAAA7pB,EAAApxB,EAAA6f,EAAA7f,GACAC,EAAAwsB,EAAAxsB,EAAAg7C,GAAA7pB,EAAAnxB,EAAA4f,EAAA5f,IAEAmxB,KAAA,CACApxB,EAAAysB,EAAAzsB,EAAAk7C,GAAA9pB,EAAApxB,EAAA6f,EAAA7f,GACAC,EAAAwsB,EAAAxsB,EAAAi7C,GAAA9pB,EAAAnxB,EAAA4f,EAAA5f,MAIAoiB,GAAA84B,QAAA3/C,OAAA2/C,SAAA,MACA94B,GAAAmX,oBAAA,SAAA5M,GAMA,IAUA9zB,EAAAsiD,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BA1e,EAhEA2e,GAAA/uB,GAAA,IAAAx0B,IAAA,SAAAinB,GACA,OACAqD,MAAArD,EAAAiE,OACAs4B,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAA/iD,OAEA,IAAAE,EAAA,EAAaA,EAAAgjD,IAAehjD,EAE5B,GADAuiD,EAAAM,EAAA7iD,IACAuiD,EAAA34B,MAAA2K,KAAA,CAMA,GAFA+tB,EAAAtiD,EAAA,EAAA6iD,EAAA7iD,EAAA,QACAwiD,EAAAxiD,EAAAgjD,EAAA,EAAAH,EAAA7iD,EAAA,QACAwiD,MAAA54B,MAAA2K,KAAA,CACA,IAAA0uB,EAAAT,EAAA54B,MAAA1iB,EAAAq7C,EAAA34B,MAAA1iB,EAGAq7C,EAAAO,OAAA,IAAAG,GAAAT,EAAA54B,MAAAziB,EAAAo7C,EAAA34B,MAAAziB,GAAA87C,EAAA,GAGAX,KAAA14B,MAAA2K,KACAguB,EAAAQ,GAAAR,EAAAO,QACIN,KAAA54B,MAAA2K,KACJguB,EAAAQ,GAAAT,EAAAQ,OACI5mD,KAAAokD,KAAAgC,EAAAQ,UAAA5mD,KAAAokD,KAAAiC,EAAAO,QACJP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAA9iD,EAAA,EAAaA,EAAAgjD,EAAA,IAAmBhjD,EAChCuiD,EAAAM,EAAA7iD,GACAwiD,EAAAK,EAAA7iD,EAAA,GACAuiD,EAAA34B,MAAA2K,MAAAiuB,EAAA54B,MAAA2K,OAIAhL,GAAA22B,aAAAqC,EAAAO,OAAA,EAAA5mD,KAAAmmD,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,OACAF,EAAAn3C,KAAAS,IAAAu2C,EAAA,GAAAh3C,KAAAS,IAAAw2C,EAAA,GACAE,GAAA,IAIAD,EAAA,EAAAl3C,KAAAqC,KAAA80C,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAA9iD,EAAA,EAAaA,EAAAgjD,IAAehjD,EAC5BuiD,EAAAM,EAAA7iD,GACAuiD,EAAA34B,MAAA2K,OAIA+tB,EAAAtiD,EAAA,EAAA6iD,EAAA7iD,EAAA,QACAwiD,EAAAxiD,EAAAgjD,EAAA,EAAAH,EAAA7iD,EAAA,QACAsiD,MAAA14B,MAAA2K,OACA2P,GAAAqe,EAAA34B,MAAA1iB,EAAAo7C,EAAA14B,MAAA1iB,GAAA,EACAq7C,EAAA34B,MAAAtC,sBAAAi7B,EAAA34B,MAAA1iB,EAAAg9B,EACAqe,EAAA34B,MAAApC,sBAAA+6B,EAAA34B,MAAAziB,EAAA+8B,EAAAqe,EAAAQ,IAEAP,MAAA54B,MAAA2K,OACA2P,GAAAse,EAAA54B,MAAA1iB,EAAAq7C,EAAA34B,MAAA1iB,GAAA,EACAq7C,EAAA34B,MAAArC,kBAAAg7B,EAAA34B,MAAA1iB,EAAAg9B,EACAqe,EAAA34B,MAAAnC,kBAAA86B,EAAA34B,MAAAziB,EAAA+8B,EAAAqe,EAAAQ,MAIAx5B,GAAAqX,SAAA,SAAA+e,EAAA7gC,EAAAokC,GACA,OAAAA,EACApkC,GAAA6gC,EAAA7/C,OAAA,EAAA6/C,EAAA,GAAAA,EAAA7gC,EAAA,GAEAA,GAAA6gC,EAAA7/C,OAAA,EAAA6/C,IAAA7/C,OAAA,GAAA6/C,EAAA7gC,EAAA,IAEAyK,GAAA+K,aAAA,SAAAqrB,EAAA7gC,EAAAokC,GACA,OAAAA,EACApkC,GAAA,EAAA6gC,IAAA7/C,OAAA,GAAA6/C,EAAA7gC,EAAA,GAEAA,GAAA,EAAA6gC,EAAA,GAAAA,EAAA7gC,EAAA,IAGAyK,GAAA45B,QAAA,SAAAvoB,EAAA1iB,GACA,IAEAkrC,EAFA5C,EAAA/0C,KAAAqB,MAAAyc,GAAAg3B,MAAA3lB,IACAyoB,EAAAzoB,EAAAnvB,KAAAS,IAAA,GAAAs0C,GAuBA,OAlBA4C,EAFAlrC,EACAmrC,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,GAGAD,EAAA33C,KAAAS,IAAA,GAAAs0C,IAGAj3B,GAAAgD,iBAAA,WACA,2BAAAvN,OACA,SAAAa,GACAA,KAGAb,OAAAoN,uBACApN,OAAAskC,6BACAtkC,OAAAukC,0BACAvkC,OAAAwkC,wBACAxkC,OAAAykC,yBACA,SAAA5jC,GACA,OAAAb,OAAA0kC,WAAA7jC,EAAA,SAZA,GAgBA0J,GAAA0Z,oBAAA,SAAA0gB,EAAA1kD,GACA,IAAAoyB,EAAAyD,EACA5sB,EAAAy7C,EAAAC,eAAAD,EACArgD,EAAAqgD,EAAAr9C,QAAAq9C,EAAAE,WACAC,EAAAxgD,EAAAygD,wBAEAC,EAAA97C,EAAA87C,QACAA,KAAAlkD,OAAA,GACAuxB,EAAA2yB,EAAA,GAAAC,QACAnvB,EAAAkvB,EAAA,GAAAE,UAGA7yB,EAAAnpB,EAAA+7C,QACAnvB,EAAA5sB,EAAAg8C,SAMA,IAAAC,EAAAhqC,WAAAoP,GAAAkgB,SAAAnmC,EAAA,iBACA8gD,EAAAjqC,WAAAoP,GAAAkgB,SAAAnmC,EAAA,gBACA+gD,EAAAlqC,WAAAoP,GAAAkgB,SAAAnmC,EAAA,kBACAghD,EAAAnqC,WAAAoP,GAAAkgB,SAAAnmC,EAAA,mBACAhB,EAAAwhD,EAAA3+B,MAAA2+B,EAAA7+B,KAAAk/B,EAAAE,EACA9hD,EAAAuhD,EAAA1+B,OAAA0+B,EAAA5+B,IAAAk/B,EAAAE,EAOA,OAHAjzB,EAAA5lB,KAAAyM,OAAAmZ,EAAAyyB,EAAA7+B,KAAAk/B,GAAA,EAAA7gD,EAAAhB,MAAArD,EAAAyiD,yBACA5sB,EAAArpB,KAAAyM,OAAA4c,EAAAgvB,EAAA5+B,IAAAk/B,GAAA,EAAA9gD,EAAAf,OAAAtD,EAAAyiD,yBAEA,CACAx6C,EAAAmqB,EACAlqB,EAAA2tB,IAuDAvL,GAAAg7B,mBAAA,SAAAvF,GACA,OAAAD,EAAAC,EAAA,4BAGAz1B,GAAAi7B,oBAAA,SAAAxF,GACA,OAAAD,EAAAC,EAAA,8BAKAz1B,GAAAk7B,kBAAA,SAAA1X,EAAA5X,EAAAuvB,GAGA,OAFAvvB,EAAA5L,GAAAkgB,SAAAsD,EAAA5X,GAEAA,EAAA30B,QAAA,QAAAkkD,EAAAxqC,SAAAib,EAAA,QAAAjb,SAAAib,EAAA,KAKA5L,GAAA61B,eAAA,SAAAJ,GACA,IAAA2F,EAAA3F,EAAA/R,WAIA,OAHA0X,GAAA,wBAAAA,EAAA/pC,aACA+pC,IAAAC,MAEAD,GAEAp7B,GAAA4xB,gBAAA,SAAA6D,GACA,IAAAjS,EAAAxjB,GAAA61B,eAAAJ,GACA,IAAAjS,EACA,OAAAiS,EAAA9R,YAGA,IAAAA,EAAAH,EAAAG,YACAiX,EAAA56B,GAAAk7B,kBAAA1X,EAAA,eAAAG,GACAmX,EAAA96B,GAAAk7B,kBAAA1X,EAAA,gBAAAG,GAEArhC,EAAAqhC,EAAAiX,EAAAE,EACAQ,EAAAt7B,GAAAg7B,mBAAAvF,GACA,OAAA1kC,MAAAuqC,GAAAh5C,EAAAJ,KAAAD,IAAAK,EAAAg5C,IAEAt7B,GAAA8xB,iBAAA,SAAA2D,GACA,IAAAjS,EAAAxjB,GAAA61B,eAAAJ,GACA,IAAAjS,EACA,OAAAiS,EAAA8F,aAGA,IAAAA,EAAA/X,EAAA+X,aACAV,EAAA76B,GAAAk7B,kBAAA1X,EAAA,cAAA+X,GACAR,EAAA/6B,GAAAk7B,kBAAA1X,EAAA,iBAAA+X,GAEA55C,EAAA45C,EAAAV,EAAAE,EACAS,EAAAx7B,GAAAi7B,oBAAAxF,GACA,OAAA1kC,MAAAyqC,GAAA75C,EAAAO,KAAAD,IAAAN,EAAA65C,IAEAx7B,GAAAkgB,SAAA,SAAA4B,EAAA7B,GACA,OAAA6B,EAAA2Z,aACA3Z,EAAA2Z,aAAAxb,GACA8B,SAAA6T,YAAAG,iBAAAjU,EAAA,MAAA4Z,iBAAAzb,IAEAjgB,GAAAoxB,YAAA,SAAA17C,EAAAimD,GACA,IAAAC,EAAAlmD,EAAAyiD,wBAAAwD,GAAA,qBAAAlmC,eAAA47B,kBAAA,EACA,OAAAuK,EAAA,CAIA,IAAA7hD,EAAArE,EAAAqE,OACAf,EAAAtD,EAAAsD,OACAD,EAAArD,EAAAqD,MAEAgB,EAAAf,SAAA4iD,EACA7hD,EAAAhB,QAAA6iD,EACAlmD,EAAA4lB,IAAAzK,MAAA+qC,KAKA7hD,EAAArB,MAAAM,QAAAe,EAAArB,MAAAK,QACAgB,EAAArB,MAAAM,SAAA,KACAe,EAAArB,MAAAK,QAAA,QAIAinB,GAAAgsB,WAAA,SAAA6P,EAAAj8B,EAAAF,GACA,OAAAE,EAAA,IAAAi8B,EAAA,MAAAn8B,GAEAM,GAAA87B,YAAA,SAAAxgC,EAAA2D,EAAA88B,EAAAjW,GACAA,KAAA,GACA,IAAA1uC,EAAA0uC,EAAA1uC,KAAA0uC,EAAA1uC,MAAA,GACA4kD,EAAAlW,EAAAmW,eAAAnW,EAAAmW,gBAAA,GAEAnW,EAAA7mB,WACA7nB,EAAA0uC,EAAA1uC,KAAA,GACA4kD,EAAAlW,EAAAmW,eAAA,GACAnW,EAAA7mB,QAGA3D,EAAA2D,OACA,IAAAi9B,EAAA,EACAl8B,GAAAvJ,KAAAslC,EAAA,SAAAI,QAEA1+C,IAAA0+C,GAAA,OAAAA,IAAA,IAAAn8B,GAAAjK,QAAAomC,GACAD,EAAAl8B,GAAA+rB,YAAAzwB,EAAAlkB,EAAA4kD,EAAAE,EAAAC,GACIn8B,GAAAjK,QAAAomC,IAGJn8B,GAAAvJ,KAAA0lC,EAAA,SAAAC,QAEA3+C,IAAA2+C,GAAA,OAAAA,GAAAp8B,GAAAjK,QAAAqmC,KACAF,EAAAl8B,GAAA+rB,YAAAzwB,EAAAlkB,EAAA4kD,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAAzlD,OAAA,EACA,GAAA8lD,EAAAN,EAAAxlD,OAAA,CACA,QAAAE,EAAA,EAAkBA,EAAA4lD,EAAW5lD,WAC7BW,EAAA4kD,EAAAvlD,IAEAulD,EAAA9+C,OAAA,EAAAm/C,GAEA,OAAAH,GAEAl8B,GAAA+rB,YAAA,SAAAzwB,EAAAlkB,EAAA4kD,EAAAE,EAAA7rC,GACA,IAAAisC,EAAAllD,EAAAiZ,GAQA,OAPAisC,IACAA,EAAAllD,EAAAiZ,GAAAiL,EAAAywB,YAAA17B,GAAAtX,MACAijD,EAAAtiD,KAAA2W,IAEAisC,EAAAJ,IACAA,EAAAI,GAEAJ,GAEAl8B,GAAAu8B,mBAAA,SAAAR,GACA,IAAAS,EAAA,EAQA,OAPAx8B,GAAAvJ,KAAAslC,EAAA,SAAAI,GACAn8B,GAAAjK,QAAAomC,IACAA,EAAA5lD,OAAAimD,IACAA,EAAAL,EAAA5lD,UAIAimD,GAGAx8B,GAAA3sB,MAAAqiB,GAKA,SAAA3hB,GAMA,OAJAA,aAAA0oD,iBACA1oD,EAAAgrB,GAAAxgB,OAAAigB,cAGA9I,GAAA3hB,IAVA,SAAAA,GAEA,OADAghB,QAAAC,MAAA,uBACAjhB,GAWAisB,GAAA2G,cAAA,SAAA+1B,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eACAC,EACA18B,GAAA3sB,MAAAqpD,GAAA/oC,SAAA,IAAAD,OAAA,IAAA5D,cAIA,SAAA8sC,KACA,UAAA3J,MACA,6GAsBA,SAAA4J,GAAAhlD,GACAlF,KAAAkF,WAAA,GAGAmoB,GAAApI,OAAAilC,GAAApiD,UAAA,CAMAqiD,QAAAF,GASAG,MAAAH,GASAI,OAAAJ,GAUAxZ,IAAAwZ,GAUAK,KAAAL,GAUAM,QAAAN,GAQAO,MAAAP,GAWAQ,QAAA,SAAArpD,GACA,OAAAA,KAIA8oD,GAAAQ,SAAA,SAAAC,GACAt9B,GAAApI,OAAAilC,GAAApiD,UAAA6iD,IAGA,IAAAC,GAAAV,GAEAW,GAAA,CACAD,UAOAE,GAAA,CAKAC,WAAA,CAOA3uC,OAAA,SAAAhb,GACA,OAAAisB,GAAAjK,QAAAhiB,KAAA,GAAAA,GAWA8kB,OAAA,SAAA8kC,EAAApoC,EAAA4Y,GAEA,IAAA/rB,EAAA+rB,EAAA53B,OAAA,EAAA43B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGAjsB,KAAAkpB,IAAAhpB,GAAA,GACAu7C,IAAAz7C,KAAAqB,MAAAo6C,KAEAv7C,EAAAu7C,EAAAz7C,KAAAqB,MAAAo6C,IAIA,IAAAC,EAAA59B,GAAAg3B,MAAA90C,KAAAkpB,IAAAhpB,IACAy7C,EAAA,GAEA,OAAAF,EAAA,CACA,IAAAG,EAAA57C,KAAAC,IAAAD,KAAAkpB,IAAA+C,EAAA,IAAAjsB,KAAAkpB,IAAA+C,IAAA53B,OAAA,KACA,GAAAunD,EAAA,MACA,IAAAC,EAAA/9B,GAAAg3B,MAAA90C,KAAAkpB,IAAAuyB,IACAE,EAAAF,EAAAK,cAAA97C,KAAAqB,MAAAw6C,GAAA77C,KAAAqB,MAAAq6C,QACK,CACL,IAAAK,GAAA,EAAA/7C,KAAAqB,MAAAq6C,GACAK,EAAA/7C,KAAAC,IAAAD,KAAAD,IAAAg8C,EAAA,OACAJ,EAAAF,EAAAlhD,QAAAwhD,SAGAJ,EAAA,IAGA,OAAAA,GAGAK,YAAA,SAAAP,EAAApoC,EAAA4Y,GACA,IAAAgwB,EAAAR,EAAAz7C,KAAAS,IAAA,GAAAT,KAAAqB,MAAAyc,GAAAg3B,MAAA2G,KAEA,WAAAA,EACA,IACI,IAAAQ,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA5oC,OAAA4Y,EAAA53B,OAAA,EACJonD,EAAAK,gBAEA,MAKAI,GAAAp+B,GAAA7J,eACAE,GAAA2J,GAAA3J,sBA2DA,SAAAgoC,GAAAlwB,GACA,IACA13B,EAAAugB,EADA1f,EAAA,GAGA,IAAAb,EAAA,EAAAugB,EAAAmX,EAAA53B,OAAiCE,EAAAugB,IAAUvgB,EAC3Ca,EAAAoC,KAAAy0B,EAAA13B,GAAAR,OAGA,OAAAqB,EAGA,SAAAgnD,GAAAztC,EAAA0E,EAAA+Z,GACA,IAAAivB,EAAA1tC,EAAAwd,gBAAA9Y,GAaA,OAXA+Z,IACA,IAAAze,EAAAud,WAAA73B,OACAgoD,GAAA1tC,EAAAqd,eACAhsB,KAAAC,IAAAo8C,EAAA1tC,EAAA6K,KAAA7K,EAAA+K,MAAA2iC,GACAr8C,KAAAC,IAAAo8C,EAAA1tC,EAAA8K,IAAA9K,EAAAgL,OAAA0iC,GAEAA,GADG,IAAAhpC,GACH1E,EAAAwd,gBAAA,GAAAkwB,GAAA,GAEAA,EAAA1tC,EAAAwd,gBAAA9Y,EAAA,OAGAgpC,EAGA,SAAAC,GAAAz+B,EAAA0+B,EAAAx/B,GACA,OAAAe,GAAAjK,QAAA0oC,GACAz+B,GAAA87B,YAAA/7B,EAAAd,EAAAw/B,GACA1+B,EAAAgsB,YAAA0S,GAAA1lD,MAxFAgmB,GAAAT,KAAA,SACAmZ,SAAA,EACA7F,SAAA,OACAxC,QAAA,EAGAC,UAAA,CACAoI,SAAA,EACApkC,MAAA,qBACAo2B,UAAA,EACAi1B,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACA3vB,iBAAA,EACAvF,WAAA,GACAC,iBAAA,GAIAk1B,WAAA,CAEAznB,SAAA,EAGA0nB,YAAA,GAGAvzB,QAAA,CACAjQ,IAAA,EACAE,OAAA,IAKAsS,MAAA,CACAyJ,aAAA,EACAwnB,YAAA,EACAC,YAAA,GACAC,QAAA,EACA1zB,QAAA,EACAjV,SAAA,EACA8gB,SAAA,EACA8nB,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEAnpC,SAAAmnC,GAAAC,WAAA3uC,OACA2wC,MAAA,GACAC,MAAA,MAsCA,IAAAC,GAAAr+B,GAAA3J,OAAA,CAOAikB,WAAA,WACA,IAAA7jB,EAAArlB,KACA,OACA+oB,KAAA1D,EAAA4iC,aAAA,EACAj/B,IAAA3D,EAAA6iC,YAAA,EACAj/B,MAAA5D,EAAA8iC,cAAA,EACAj/B,OAAA7D,EAAA+iC,eAAA,IAQA3sB,SAAA,WACA,OAAAz7B,KAAAktD,QAOAlN,kBAAA,WACA,IAAAxkB,EAAAx7B,KAAAkF,QAAAs2B,MAWA,QAAAn3B,KAVA,IAAAm3B,EAAAuxB,QACAvxB,EAAAuxB,MAAA,CACAjoB,SAAA,KAGA,IAAAtJ,EAAAwxB,QACAxxB,EAAAwxB,MAAA,CACAloB,SAAA,IAGAtJ,EACA,UAAAn3B,GAAA,UAAAA,IACA,qBAAAm3B,EAAAuxB,MAAA1oD,KACAm3B,EAAAuxB,MAAA1oD,GAAAm3B,EAAAn3B,IAEA,qBAAAm3B,EAAAwxB,MAAA3oD,KACAm3B,EAAAwxB,MAAA3oD,GAAAm3B,EAAAn3B,MAKA8oD,aAAA,WACA9/B,GAAA1J,SAAA3jB,KAAAkF,QAAAioD,aAAA,CAAAntD,QAGA+E,OAAA,SAAAqoD,EAAAC,EAAAC,GACA,IACAxpD,EAAAugB,EAAA1f,EAAArB,EAAAk4B,EAAAswB,EADAzmC,EAAArlB,KA4DA,IAxDAqlB,EAAA8nC,eAGA9nC,EAAA+nC,WACA/nC,EAAAgoC,YACAhoC,EAAAioC,QAAAjgC,GAAApI,OAAA,CACA8D,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACGokC,GAEHjoC,EAAAkoC,eAAA,EACAloC,EAAAmoC,kBAAA,EACAnoC,EAAAooC,iBAAApoC,EAAAooC,kBAAA,GAGApoC,EAAAqoC,sBACAroC,EAAAsoC,gBACAtoC,EAAAuoC,qBAGAvoC,EAAAwoC,mBACAxoC,EAAAyoC,sBACAzoC,EAAA0oC,kBASA1oC,EAAA2oC,mBAIAxyB,EAAAnW,EAAA4oC,cAAA,GAGAzyB,EAAAnW,EAAA6oC,gBAAA1yB,MAEAnW,EAAA8oC,8BAKAxpD,EAAA0gB,EAAA+oC,qBAAA5yB,IAAAnW,EAAAmW,MAEAnW,EAAAgpC,6BAEAhpC,EAAAmW,MAAA72B,EAKAb,EAAA,EAAAugB,EAAA1f,EAAAf,OAAmCE,EAAAugB,IAAUvgB,EAC7CR,EAAAqB,EAAAb,GACAgoD,EAAAtwB,EAAA13B,GACAgoD,EAMAA,EAAAxoD,QALAk4B,EAAAz0B,KAAA+kD,EAAA,CACAxoD,QACA0pD,OAAA,IAoBA,OAbA3nC,EAAA6nC,OAAA1xB,EAGAnW,EAAAipC,8BACAjpC,EAAAkpC,wBACAlpC,EAAAmpC,6BAEAnpC,EAAAopC,YACAppC,EAAAqpC,MACArpC,EAAAspC,WAEAtpC,EAAAupC,cAEAvpC,EAAAic,SAGAstB,YAAA,WACAvhC,GAAA1J,SAAA3jB,KAAAkF,QAAA0pD,YAAA,CAAA5uD,QAKA0tD,oBAAA,WACArgC,GAAA1J,SAAA3jB,KAAAkF,QAAAwoD,oBAAA,CAAA1tD,QAEA2tD,cAAA,WACA,IAAAtoC,EAAArlB,KAEAqlB,EAAAkW,gBAEAlW,EAAAjf,MAAAif,EAAA+nC,SACA/nC,EAAA0D,KAAA,EACA1D,EAAA4D,MAAA5D,EAAAjf,QAEAif,EAAAhf,OAAAgf,EAAAgoC,UAGAhoC,EAAA2D,IAAA,EACA3D,EAAA6D,OAAA7D,EAAAhf,QAIAgf,EAAA4iC,YAAA,EACA5iC,EAAA6iC,WAAA,EACA7iC,EAAA8iC,aAAA,EACA9iC,EAAA+iC,cAAA,GAEAwF,mBAAA,WACAvgC,GAAA1J,SAAA3jB,KAAAkF,QAAA0oD,mBAAA,CAAA5tD,QAIA6tD,iBAAA,WACAxgC,GAAA1J,SAAA3jB,KAAAkF,QAAA2oD,iBAAA,CAAA7tD,QAEA8tD,oBAAAzgC,GAAApK,KACA8qC,gBAAA,WACA1gC,GAAA1J,SAAA3jB,KAAAkF,QAAA6oD,gBAAA,CAAA/tD,QAIAguD,iBAAA,WACA3gC,GAAA1J,SAAA3jB,KAAAkF,QAAA8oD,iBAAA,CAAAhuD,QAEAiuD,WAAA5gC,GAAApK,KACAirC,gBAAA,SAAA1yB,GACA,IAAAnW,EAAArlB,KAEA,OAAAqtB,GAAAjK,QAAAoY,MAAA53B,OACAypB,GAAA1J,SAAA0B,EAAAngB,QAAAgpD,gBAAA,CAAA7oC,EAAAmW,KAGAnW,EAAAmW,MAAAnO,GAAA1J,SAAA0B,EAAAngB,QAAAgpD,gBAAA,CAAA7oC,IAAAmW,SAAAnW,EAAAmW,MACAA,IAGA2yB,4BAAA,WACA9gC,GAAA1J,SAAA3jB,KAAAkF,QAAAipD,4BAAA,CAAAnuD,QAEAouD,qBAAA,WACA,IAAA/oC,EAAArlB,KAEA6uD,EAAAxpC,EAAAngB,QAAAs2B,MACAnW,EAAAmW,MAAAnW,EAAAmW,MAAAp4B,IAAAyrD,EAAAC,cAAAD,EAAAlrC,SAAA3jB,OAEAquD,2BAAA,WACAhhC,GAAA1J,SAAA3jB,KAAAkF,QAAAmpD,2BAAA,CAAAruD,QAKAsuD,4BAAA,WACAjhC,GAAA1J,SAAA3jB,KAAAkF,QAAAopD,4BAAA,CAAAtuD,QAEAuuD,sBAAA,WACA,IAAAlpC,EAAArlB,KACAotB,EAAA/H,EAAAsD,IACAkmC,EAAAxpC,EAAAngB,QAAAs2B,MACA72B,EAAA+mD,GAAArmC,EAAA6nC,QAIA6B,EAAA1hC,GAAAnoB,QAAA0nB,WAAAiiC,GACAzhC,EAAAd,KAAAyiC,EAAArxC,OAEA,IAAAsxC,EAAAH,EAAApC,aAAA,EAEA,GAAA9nD,EAAAf,QAAAyhB,EAAAngB,QAAA4/B,SAAAzf,EAAAkW,eAAA,CACA,IAEA0zB,EAAAC,EAFAC,EAAA9hC,GAAA87B,YAAA/7B,EAAA2hC,EAAArxC,OAAA/Y,EAAA0gB,EAAAooC,kBACA2B,EAAAD,EAIAE,EAAAhqC,EAAAqW,gBAAA,GAAArW,EAAAqW,gBAAA,KAGA,MAAA0zB,EAAAC,GAAAL,EAAAH,EAAAnC,YAAA,CACA,IAAA4C,EAAAjiC,GAAAs3B,UAAAqK,GAIA,GAHAC,EAAA1/C,KAAAuC,IAAAw9C,GACAJ,EAAA3/C,KAAAwC,IAAAu9C,GAEAJ,EAAAC,EAAA9pC,EAAAgoC,UAAA,CAEA2B,IACA,MAGAA,IACAI,EAAAH,EAAAE,GAIA9pC,EAAA2pC,iBAEAR,2BAAA,WACAnhC,GAAA1J,SAAA3jB,KAAAkF,QAAAspD,2BAAA,CAAAxuD,QAKAyuD,UAAA,WACAphC,GAAA1J,SAAA3jB,KAAAkF,QAAAupD,UAAA,CAAAzuD,QAEA0uD,IAAA,WACA,IAAArpC,EAAArlB,KAEAshC,EAAAjc,EAAAic,QAAA,CACAl7B,MAAA,EACAC,OAAA,GAGA1B,EAAA+mD,GAAArmC,EAAA6nC,QAEA/rB,EAAA9b,EAAAngB,QACA2pD,EAAA1tB,EAAA3F,MACA+zB,EAAApuB,EAAAorB,WACAiD,EAAAruB,EAAAzE,UACAoI,EAAAzf,EAAAoqC,aACAxwB,EAAAkC,EAAAlC,SACA1D,EAAAlW,EAAAkW,eAEAm0B,EAAAriC,GAAAnoB,QAAA0nB,WACAmiC,EAAAW,EAAAb,GACA3C,EAAA/qB,EAAAzE,UAAAwvB,eAkBA,GAbA5qB,EAAAl7B,MAFAm1B,EAEAlW,EAAAsqC,cAAAtqC,EAAA+nC,SAAA/nC,EAAAioC,QAAAvkC,KAAA1D,EAAAioC,QAAArkC,MAAA5D,EAAA+nC,SAEAtoB,GAAA0qB,EAAAvD,UAAAC,EAAA,EAKA5qB,EAAAj7B,OADAk1B,EACAuJ,GAAA0qB,EAAAvD,UAAAC,EAAA,EAEA7mC,EAAAgoC,UAIAkC,EAAAzqB,WAAA,CACA,IAAA8qB,EAAAF,EAAAH,GACAM,EAAAxiC,GAAAnoB,QAAAynB,UAAA4iC,EAAAt2B,SACA62B,EAAAF,EAAA5iC,WAAA6iC,EAAAxpD,OAEAk1B,EACA+F,EAAAj7B,QAAAypD,EAEAxuB,EAAAl7B,OAAA0pD,EAKA,GAAAjB,EAAA/pB,WAAA,CACA,IAAAirB,EAAA1iC,GAAA87B,YAAA9jC,EAAAsD,IAAAomC,EAAArxC,OAAA/Y,EAAA0gB,EAAAooC,kBACAuC,EAAA3iC,GAAAu8B,mBAAAjlD,GACAsrD,EAAA,GAAAlB,EAAAplC,KACAumC,EAAA7qC,EAAAngB,QAAAs2B,MAAAvC,QAMA,GAHA5T,EAAAkoC,eAAAyC,EACA3qC,EAAAmoC,kBAAAuC,EAEAx0B,EAAA,CACA,IAAA+zB,EAAAjiC,GAAAs3B,UAAAt/B,EAAA2pC,eACAC,EAAA1/C,KAAAuC,IAAAw9C,GACAJ,EAAA3/C,KAAAwC,IAAAu9C,GAGAa,EAAAjB,EAAAa,EACAhB,EAAA/hC,WAAAgjC,EACAC,EAEA3uB,EAAAj7B,OAAAkJ,KAAAD,IAAA+V,EAAAgoC,UAAA/rB,EAAAj7B,OAAA8pD,EAAAD,GAEA7qC,EAAAsD,IAAA2D,KAAAyiC,EAAArxC,OACA,IAIAuqC,EAAAE,EAJAiI,EAAAvE,GAAAxmC,EAAAsD,IAAAhkB,EAAA,GAAAoqD,EAAArxC,QACA2yC,EAAAxE,GAAAxmC,EAAAsD,IAAAhkB,IAAAf,OAAA,GAAAmrD,EAAArxC,QACA4yC,EAAAjrC,EAAAqW,gBAAA,GAAArW,EAAA0D,KACAwnC,EAAAlrC,EAAA4D,MAAA5D,EAAAqW,gBAAA/2B,EAAAf,OAAA,GAKA,IAAAyhB,EAAA2pC,eACA/G,EAAA,WAAAhpB,EAAAgwB,EAAAmB,EAAAnB,EAAAgB,EACA9H,EAAA,WAAAlpB,EAAAgwB,EAAAgB,EAAAhB,EAAAoB,IAEApI,EAAAmI,EAAA,EACAjI,EAAAkI,EAAA,GAEAhrC,EAAA4iC,YAAA14C,KAAAC,IAAAy4C,EAAAqI,EAAA,KACAjrC,EAAA8iC,aAAA54C,KAAAC,IAAA24C,EAAAoI,EAAA,UAIA1B,EAAAlC,OACAoD,EAAA,EAIAA,GAAAG,EAAAD,EAGA3uB,EAAAl7B,MAAAmJ,KAAAD,IAAA+V,EAAA+nC,SAAA9rB,EAAAl7B,MAAA2pD,GAEA1qC,EAAA6iC,WAAA6G,EAAAplC,KAAA,EACAtE,EAAA+iC,cAAA2G,EAAAplC,KAAA,EAIAtE,EAAAmrC,gBAEAnrC,EAAAjf,MAAAk7B,EAAAl7B,MACAif,EAAAhf,OAAAi7B,EAAAj7B,QAOAmqD,cAAA,WACA,IAAAnrC,EAAArlB,KACAqlB,EAAAioC,UACAjoC,EAAA4iC,YAAA14C,KAAAC,IAAA6V,EAAA4iC,YAAA5iC,EAAAioC,QAAAvkC,KAAA,GACA1D,EAAA6iC,WAAA34C,KAAAC,IAAA6V,EAAA6iC,WAAA7iC,EAAAioC,QAAAtkC,IAAA,GACA3D,EAAA8iC,aAAA54C,KAAAC,IAAA6V,EAAA8iC,aAAA9iC,EAAAioC,QAAArkC,MAAA,GACA5D,EAAA+iC,cAAA74C,KAAAC,IAAA6V,EAAA+iC,cAAA/iC,EAAAioC,QAAApkC,OAAA,KAIAylC,SAAA,WACAthC,GAAA1J,SAAA3jB,KAAAkF,QAAAypD,SAAA,CAAA3uD,QAIAu7B,aAAA,WACA,cAAAv7B,KAAAkF,QAAA+5B,UAAA,WAAAj/B,KAAAkF,QAAA+5B,UAEA0wB,YAAA,WACA,OAAA3vD,KAAAkF,QAAA,WAIAq5B,cAAA,SAAAkyB,GAEA,GAAApjC,GAAAlK,cAAAstC,GACA,OAAA7wB,IAGA,sBAAA6wB,gBAAAjqD,UAAA+c,SAAAktC,GACA,OAAA7wB,IAGA,GAAA6wB,EACA,GAAAzwD,KAAAu7B,gBACA,QAAAzwB,IAAA2lD,EAAAzlD,EACA,OAAAhL,KAAAu+B,cAAAkyB,EAAAzlD,QAEI,QAAAF,IAAA2lD,EAAAxlD,EACJ,OAAAjL,KAAAu+B,cAAAkyB,EAAAxlD,GAKA,OAAAwlD,GAQAzZ,iBAAA3pB,GAAApK,KASAmb,iBAAA/Q,GAAApK,KAOAytC,iBAAArjC,GAAApK,KAMAyY,gBAAA,SAAA9Y,GACA,IAAAyC,EAAArlB,KACAy8B,EAAApX,EAAAngB,QAAAu3B,OACA,GAAApX,EAAAkW,eAAA,CACA,IAAAo1B,EAAAtrC,EAAAjf,OAAAif,EAAA4iC,YAAA5iC,EAAA8iC,cACAkH,EAAAsB,EAAAphD,KAAAC,IAAA6V,EAAA6nC,OAAAtpD,QAAA64B,EAAA,QACA8oB,EAAA8J,EAAAzsC,EAAAyC,EAAA4iC,YAEAxrB,IACA8oB,GAAA8J,EAAA,GAGA,IAAAuB,EAAAvrC,EAAA0D,KAAAw8B,EAEA,OADAqL,GAAAvrC,EAAAsqC,cAAAtqC,EAAAioC,QAAAvkC,KAAA,EACA6nC,EAEA,IAAAC,EAAAxrC,EAAAhf,QAAAgf,EAAA6iC,WAAA7iC,EAAA+iC,eACA,OAAA/iC,EAAA2D,IAAApG,GAAAiuC,GAAAxrC,EAAA6nC,OAAAtpD,OAAA,KAOA+7B,mBAAA,SAAAmxB,GACA,IAAAzrC,EAAArlB,KACA,GAAAqlB,EAAAkW,eAAA,CACA,IAAAo1B,EAAAtrC,EAAAjf,OAAAif,EAAA4iC,YAAA5iC,EAAA8iC,cACA4I,EAAAJ,EAAAG,EAAAzrC,EAAA4iC,YAEA2I,EAAAvrC,EAAA0D,KAAAgoC,EAEA,OADAH,GAAAvrC,EAAAsqC,cAAAtqC,EAAAioC,QAAAvkC,KAAA,EACA6nC,EAEA,OAAAvrC,EAAA2D,IAAA8nC,EAAAzrC,EAAAhf,QAOAk3B,aAAA,WACA,OAAAv9B,KAAAo+B,iBAAAp+B,KAAAgxD,iBAGAA,aAAA,WACA,IAAA3rC,EAAArlB,KACAsP,EAAA+V,EAAA/V,IACAE,EAAA6V,EAAA7V,IAEA,OAAA6V,EAAA4f,YAAA,EACA31B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,GAOA2hD,UAAA,SAAAz1B,GACA,IAiBA13B,EAAAgoD,EAjBAzmC,EAAArlB,KACAu7B,EAAAlW,EAAAkW,eACA21B,EAAA7rC,EAAAngB,QAAAs2B,MAAAuxB,MACAoE,EAAA31B,EAAA53B,OACAwtD,GAAA,EACAC,EAAAH,EAAAI,cAIAC,EAAAlsC,EAAAmsC,aAAAL,EAAA,GAGAM,EAAAl2B,EACAlW,EAAAjf,OAAAif,EAAA4iC,YAAA5iC,EAAA8iC,cACA9iC,EAAAhf,QAAAgf,EAAA6iC,WAAA7iC,EAAAqsC,eAEAzvC,EAAA,GAaA,IAVAsvC,EAAAE,IACAL,EAAA,EAAA7hD,KAAAqB,MAAA2gD,EAAAE,IAKAN,EAAAE,IACAD,EAAA7hD,KAAAC,IAAA4hD,EAAA,EAAA7hD,KAAAqB,MAAAugD,EAAAE,KAGAvtD,EAAA,EAAaA,EAAAqtD,EAAertD,IAC5BgoD,EAAAtwB,EAAA13B,GAEAstD,EAAA,GAAAttD,EAAAstD,EAAA,UAEAtF,EAAAxoD,MAEA2e,EAAAlb,KAAA+kD,GAEA,OAAA7pC,GAMAuvC,UAAA,WACA,IAAAnsC,EAAArlB,KACAu7B,EAAAlW,EAAAkW,eACA21B,EAAA7rC,EAAAngB,QAAAs2B,MAAAuxB,MAGA4E,EAAAtkC,GAAAs3B,UAAAt/B,EAAA2pC,eACAl9C,EAAAvC,KAAAkpB,IAAAlpB,KAAAuC,IAAA6/C,IACA5/C,EAAAxC,KAAAkpB,IAAAlpB,KAAAwC,IAAA4/C,IAEA14B,EAAAi4B,EAAArE,iBAAA,EACAl9C,EAAA0V,EAAAmoC,kBAAAv0B,GAAA,EAEA81B,EAAA1hC,GAAAnoB,QAAA0nB,WAAAskC,GACAliD,EAAAqW,EAAAkoC,eAAAwB,EAAA/hC,WAAAiM,GAAA,EAGA,OAAAsC,EACAvsB,EAAA8C,EAAAnC,EAAAoC,EAAApC,EAAAmC,EAAA9C,EAAA+C,EACA/C,EAAA+C,EAAApC,EAAAmC,EAAA9C,EAAA8C,EAAAnC,EAAAoC,GAMA09C,WAAA,WACA,IAGA3rD,EAAAugB,EAAAwN,EAHAxM,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACA+hC,EAAAzf,EAAAngB,QAAA4/B,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAAhhC,EAAA,EAAAugB,EAAAthB,EAAA0B,KAAAtB,SAAAS,OAAgDE,EAAAugB,IAAUvgB,EAC1D,GAAAf,EAAAk7B,iBAAAn6B,KACA+tB,EAAA9uB,EAAAsvB,eAAAvuB,GACA+tB,EAAAG,UAAA3M,EAAAlf,IAAA0rB,EAAAM,UAAA9M,EAAAlf,IACA,SAKA,UAOAwtB,KAAA,SAAAuF,GACA,IAAA7T,EAAArlB,KACAkF,EAAAmgB,EAAAngB,QAEA,GAAAmgB,EAAAoqC,aAAA,CAIA,IAmCAmC,EAAAC,EAAAC,EAnCA/uD,EAAAsiB,EAAAtiB,MACAqqB,EAAA/H,EAAAsD,IACAkE,EAAAT,GAAAxgB,OACAkgB,EAAAe,EAAAf,iBACAolC,EAAAhsD,EAAAs2B,MAAAuxB,MACAgF,EAAA7sD,EAAAs2B,MAAAwxB,OAAAkE,EACAx0B,EAAAx3B,EAAAw3B,UACA6vB,EAAArnD,EAAAqnD,WACAttB,EAAA/5B,EAAA+5B,SAEA+yB,EAAA,IAAA3sC,EAAA2pC,cACAiD,EAAAf,EAAAvE,OACApxB,EAAAlW,EAAAkW,eAEAm0B,EAAAriC,GAAAnoB,QAAA0nB,WACA4O,EAAA01B,EAAApsB,SAAAosB,EAAAtE,SAAAvnC,EAAA4rC,UAAA5rC,EAAAoW,YAAApW,EAAAoW,WACAy2B,EAAAzG,GAAAyF,EAAAiB,UAAArmC,GACAijC,EAAAW,EAAAwB,GACAlkC,EAAA+hC,EAAA/hC,WACAolC,EAAA3G,GAAAsG,EAAAI,UAAArmC,GACAumC,EAAA3C,EAAAqC,GACA7B,EAAAgB,EAAAj4B,QACA6zB,EAAAoE,EAAApE,YAEAwF,EAAA51B,EAAAuvB,UAAAvvB,EAAAwvB,eAAA,EAEAqG,EAAA9G,GAAAc,EAAA4F,UAAArmC,GACA8jC,EAAAF,EAAAnD,GACAsD,EAAAxiC,GAAAnoB,QAAAynB,UAAA4/B,EAAAtzB,SACAu5B,EAAAnlC,GAAAs3B,UAAAt/B,EAAA2pC,eAEAyD,EAAA,GAEAC,EAAAh2B,EAAAqvB,WAAAroC,GAAAgZ,EAAA5F,UAAA,OACA67B,EAAAtlC,GAAAi4B,YAGA,QAAArmB,GACA2yB,EAAAe,EAAA5vD,EAAAsiB,EAAA6D,OAAAwpC,GACAb,EAAAxsC,EAAA6D,OAAAopC,EACAR,EAAAF,EAAAc,EAAA,GACG,WAAAzzB,GACH2yB,EAAAe,EAAA5vD,EAAAsiB,EAAA2D,IAAA0pC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAzsC,EAAA2D,IAAAspC,GACG,SAAArzB,GACH2yB,EAAAe,EAAA5vD,EAAAsiB,EAAA4D,MAAAypC,GACAb,EAAAxsC,EAAA4D,MAAAqpC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAA5vD,EAAAsiB,EAAA0D,KAAA2pC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAzsC,EAAA0D,KAAAupC,GAGA,IAAA/nC,EAAA,KA6JA,GA3JA8C,GAAAvJ,KAAA0X,EAAA,SAAAswB,EAAAlpC,GAEA,IAAAyK,GAAAlK,cAAA2oC,EAAAxoD,OAAA,CAIA,IACAwzB,EAAA87B,EAAAx7B,EAAAC,EAeAw7B,EAAAC,EAAAC,EAAAC,EAAA15B,EAAAE,EAAAD,EAAA/nB,EAAAyhD,EAAAC,EAAAC,EAAA/W,EAhBA94C,EAAAwoD,EAAAxoD,MAEAsf,IAAAyC,EAAA+tC,eAAAluD,EAAAu3B,SAAAC,EAAAC,iBAEA7F,EAAA4F,EAAAyvB,cACAyG,EAAAl2B,EAAA0vB,cACAh1B,EAAAsF,EAAA2vB,oBAAA,GACAh1B,EAAAqF,EAAA4vB,0BAAA,IAEAx1B,EAAApT,GAAAgZ,EAAA5F,UAAAlU,GACAgwC,EAAAlvC,GAAAgZ,EAAAh8B,MAAAkiB,GACAwU,EAAAsF,EAAAtF,YAAA,GACAC,EAAAqF,EAAArF,kBAAA,GAKA,IAAAke,EAAAloB,GAAAjK,QAAA9f,KAAAM,OAAA,EACAgoD,EAAAD,GAAAtmC,EAAAzC,EAAA8Z,EAAAC,iBAEA,GAAApB,EAAA,CACA,IAAA83B,EAAAf,EAAApC,EAEAtE,EAAAvmC,EAAA0D,KAAAwB,IACAqoC,EAAA,iBAGAC,EAAAE,EAAAz5B,EAAAC,EAAAo5B,EAAA5vD,EAAA6oD,EAAA90B,GACAg8B,EAAAjB,EACAmB,EAAAlB,EACAmB,EAAA5tC,EAAAqW,gBAAA9Y,GAAAkqC,EAEA,QAAA7tB,GACAzF,EAAAm5B,EAAA5vD,EAAAm2B,EAAAlQ,IAAA0pC,KAAA,EACAlhD,EAAA0nB,EAAAhQ,OACAiqC,IAAAnB,EAAA,MAAAzc,GAAAvoB,EACAovB,EAAA4V,EAAA,gBACAkB,EAAA7tC,EAAA6D,OAAAmqC,IAEA75B,EAAAN,EAAAlQ,IACAxX,EAAAmhD,EAAA5vD,EAAAm2B,EAAAhQ,OAAAwpC,KAAA,EACAS,GAAAnB,EAAA,MAAAhlC,EACAovB,EAAA4V,EAAA,iBACAkB,EAAA7tC,EAAA2D,IAAAqqC,OAEI,CACJ,IAAAC,GAAArB,EAAA,EAAAK,GAAApC,EAEAtE,EAAAvmC,EAAA2D,IAAAuB,IACAqoC,EAAA,iBAGAC,EAAAhB,EACAkB,EAAAjB,EACAgB,EAAAE,EAAAx5B,EAAAhoB,EAAAmhD,EAAA5vD,EAAA6oD,EAAA90B,GACAo8B,EAAA7tC,EAAAqW,gBAAA9Y,GAAAkqC,EACAqG,GAAA,EAAA5d,GAAAvoB,EAAA,EAEA,SAAAiS,GACA3F,EAAAq5B,EAAA5vD,EAAAm2B,EAAAnQ,KAAA2pC,KAAA,EACAn5B,EAAAL,EAAAjQ,MACAmzB,EAAA6V,EAAA,eACAgB,EAAA5tC,EAAA4D,MAAAqqC,IAEAh6B,EAAAJ,EAAAnQ,KACAwQ,EAAAo5B,EAAA5vD,EAAAm2B,EAAAjQ,MAAAypC,KAAA,EACAtW,EAAA6V,EAAA,eACAgB,EAAA5tC,EAAA0D,KAAAuqC,GAIAb,EAAA1rD,KAAA,CACA8rD,MACAC,MACAC,MACAC,MACA15B,KACAE,KACAD,KACA/nB,KACAyhD,SACAC,SACAK,QAAAz8B,EACA08B,QAAAZ,EACAa,aAAAr8B,EACAs8B,mBAAAr8B,EACA7N,UAAA,EAAAgpC,EACAlvD,QACA0pD,MAAAlB,EAAAkB,MACAmG,aACA/W,iBAKA/uB,GAAAvJ,KAAA2uC,EAAA,SAAAkB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA2BA,GAzBA92B,EAAAoI,SAAAyuB,GAAAC,IACApmC,EAAA3C,OACA2C,EAAA0J,UAAAy8B,EACAnmC,EAAA4J,YAAAw8B,EACApmC,EAAA8K,cACA9K,EAAA8K,YAAAy7B,EAAAF,cACArmC,EAAA+K,eAAAw7B,EAAAD,oBAGAtmC,EAAArD,YAEA2S,EAAAuvB,YACA7+B,EAAAjE,OAAAwqC,EAAAd,IAAAc,EAAAb,KACA1lC,EAAApD,OAAA2pC,EAAAZ,IAAAY,EAAAX,MAGAt2B,EAAAsvB,kBACA5+B,EAAAjE,OAAAwqC,EAAAr6B,GAAAq6B,EAAAn6B,IACApM,EAAApD,OAAA2pC,EAAAp6B,GAAAo6B,EAAAniD,KAGA4b,EAAAjD,SACAiD,EAAAxC,WAGAsmC,EAAApsB,QAAA,CAEA1X,EAAA3C,OACA2C,EAAAwmC,UAAAD,EAAAV,OAAAU,EAAAT,QACA9lC,EAAA7L,OAAAoyC,EAAAnqC,UACA4D,EAAAd,KAAAqnC,EAAA3G,MAAAqF,EAAA30C,OAAAqxC,EAAArxC,OACA0P,EAAAyJ,UAAA88B,EAAA3G,MAAAoF,EAAAF,EACA9kC,EAAAivB,aAAA,SACAjvB,EAAAgvB,UAAAuX,EAAAvX,UAEA,IAAA94C,EAAAqwD,EAAArwD,MACA2H,EAAA0oD,EAAAR,WACA,GAAA9lC,GAAAjK,QAAA9f,GACA,QAAAQ,EAAA,EAAoBA,EAAAR,EAAAM,SAAkBE,EAEtCspB,EAAAkvB,SAAA,GAAAh5C,EAAAQ,GAAA,EAAAmH,GACAA,GAAA+hB,OAGAI,EAAAkvB,SAAAh5C,EAAA,EAAA2H,GAEAmiB,EAAAxC,aAIA2hC,EAAAznB,QAAA,CAEA,IAAA+uB,EACAC,EACAtqC,EAAA,EACAuqC,EAAAnE,EAAA5iC,WAAA,EAEA,GAAAuO,EACAs4B,EAAAxuC,EAAA0D,MAAA1D,EAAA4D,MAAA5D,EAAA0D,MAAA,EACA+qC,EAAA,WAAA70B,EACA5Z,EAAA6D,OAAA6qC,EAAAlE,EAAA3mC,OACA7D,EAAA2D,IAAA+qC,EAAAlE,EAAA7mC,QACI,CACJ,IAAAgrC,EAAA,SAAA/0B,EACA40B,EAAAG,EACA3uC,EAAA0D,KAAAgrC,EAAAlE,EAAA7mC,IACA3D,EAAA4D,MAAA8qC,EAAAlE,EAAA7mC,IACA8qC,EAAAzuC,EAAA2D,KAAA3D,EAAA6D,OAAA7D,EAAA2D,KAAA,EACAQ,EAAAwqC,GAAA,GAAAzkD,KAAAoC,GAAA,GAAApC,KAAAoC,GAGAyb,EAAA3C,OACA2C,EAAAwmC,UAAAC,EAAAC,GACA1mC,EAAA7L,OAAAiI,GACA4D,EAAAgvB,UAAA,SACAhvB,EAAAivB,aAAA,SACAjvB,EAAAyJ,UAAA07B,EACAnlC,EAAAd,KAAAsjC,EAAAlyC,OACA0P,EAAAkvB,SAAAiQ,EAAAC,YAAA,KACAp/B,EAAAxC,UAGA,GAAA8nC,EAAA,CAEA,IAEAp5B,EAAAC,EAAAC,EAAAhoB,EAFAyiD,EAAAvB,EACAwB,EAAAxwC,GAAAgZ,EAAA5F,UAAA0E,EAAA53B,OAAA,KAGA23B,GACAjC,EAAAq5B,EAAA5vD,EAAAsiB,EAAA0D,KAAAkrC,KAAA,EACA16B,EAAAo5B,EAAA5vD,EAAAsiB,EAAA4D,MAAAirC,KAAA,EACA16B,EAAAhoB,EAAAogD,IAEAp4B,EAAAm5B,EAAA5vD,EAAAsiB,EAAA2D,IAAAirC,KAAA,EACAziD,EAAAmhD,EAAA5vD,EAAAsiB,EAAA6D,OAAAgrC,KAAA,EACA56B,EAAAC,EAAAq4B,GAGAxkC,EAAA0J,UAAA47B,EACAtlC,EAAA4J,YAAAtT,GAAAgZ,EAAAh8B,MAAA,GACA0sB,EAAArD,YACAqD,EAAAjE,OAAAmQ,EAAAE,GACApM,EAAApD,OAAAuP,EAAA/nB,GACA4b,EAAAjD,cAKAgqC,GAAA,CACAl1B,SAAA,UAGAm1B,GAAAnH,GAAAhoC,OAAA,CAMAovC,UAAA,WACA,IAAA5vD,EAAAzE,KAAA+C,MAAA0B,KACA,OAAAzE,KAAAkF,QAAAP,SAAA3E,KAAAu7B,eAAA92B,EAAAI,QAAAJ,EAAAK,UAAAL,EAAAE,QAGAmpD,oBAAA,WACA,IAIA19B,EAJA/K,EAAArlB,KACA2E,EAAA0gB,EAAAgvC,YACAhvC,EAAAivC,SAAA,EACAjvC,EAAAkvC,SAAA5vD,EAAAf,OAAA,OAGAkH,IAAAua,EAAAngB,QAAAs2B,MAAAlsB,MAEA8gB,EAAAzrB,EAAAL,QAAA+gB,EAAAngB,QAAAs2B,MAAAlsB,KACA+V,EAAAivC,UAAA,IAAAlkC,IAAA/K,EAAAivC,eAGAxpD,IAAAua,EAAAngB,QAAAs2B,MAAAhsB,MAEA4gB,EAAAzrB,EAAAL,QAAA+gB,EAAAngB,QAAAs2B,MAAAhsB,KACA6V,EAAAkvC,UAAA,IAAAnkC,IAAA/K,EAAAkvC,UAGAlvC,EAAA/V,IAAA3K,EAAA0gB,EAAAivC,UACAjvC,EAAA7V,IAAA7K,EAAA0gB,EAAAkvC,WAGAtG,WAAA,WACA,IAAA5oC,EAAArlB,KACA2E,EAAA0gB,EAAAgvC,YAEAhvC,EAAAmW,MAAA,IAAAnW,EAAAivC,UAAAjvC,EAAAkvC,WAAA5vD,EAAAf,OAAA,EAAAe,IAAA+W,MAAA2J,EAAAivC,SAAAjvC,EAAAkvC,SAAA,IAGAvd,iBAAA,SAAAp0B,EAAA2O,GACA,IAAAlM,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MAEA,OAAAA,EAAAsvB,eAAAd,GAAAkN,WAAAjM,qBAAAnN,EAAAlf,GACAkf,EAAAkZ,cAAAx7B,EAAA0B,KAAAtB,SAAAouB,GAAA9sB,KAAAme,IAGAyC,EAAAmW,MAAA5Y,EAAAyC,EAAAivC,WAIAl2B,iBAAA,SAAAh9B,EAAAwhB,GACA,IAOA4xC,EAPAnvC,EAAArlB,KACAy8B,EAAApX,EAAAngB,QAAAu3B,OAEAg4B,EAAAllD,KAAAC,IAAA6V,EAAAkvC,SAAA,EAAAlvC,EAAAivC,UAAA73B,EAAA,QAQA,QAHA3xB,IAAA1J,GAAA,OAAAA,IACAozD,EAAAnvC,EAAAkW,eAAAn6B,EAAA4J,EAAA5J,EAAA6J,QAEAH,IAAA0pD,QAAA1pD,IAAA1J,GAAAgd,MAAAwE,GAAA,CACA,IAAAje,EAAA0gB,EAAAgvC,YACAjzD,EAAAozD,GAAApzD,EACA,IAAAwxC,EAAAjuC,EAAAL,QAAAlD,GACAwhB,GAAA,IAAAgwB,IAAAhwB,EAGA,GAAAyC,EAAAkW,eAAA,CACA,IAAAm5B,EAAArvC,EAAAjf,MAAAquD,EACAE,EAAAD,GAAA9xC,EAAAyC,EAAAivC,UAMA,OAJA73B,IACAk4B,GAAAD,EAAA,GAGArvC,EAAA0D,KAAA4rC,EAEA,IAAAC,EAAAvvC,EAAAhf,OAAAouD,EACAI,EAAAD,GAAAhyC,EAAAyC,EAAAivC,UAMA,OAJA73B,IACAo4B,GAAAD,EAAA,GAGAvvC,EAAA2D,IAAA6rC,GAGAn5B,gBAAA,SAAA9Y,GACA,OAAA5iB,KAAAo+B,iBAAAp+B,KAAAw7B,MAAA5Y,KAAA5iB,KAAAs0D,SAAA,OAGA5D,iBAAA,SAAAnL,GACA,IAEAnkD,EAFAikB,EAAArlB,KACAy8B,EAAApX,EAAAngB,QAAAu3B,OAEAg4B,EAAAllD,KAAAC,IAAA6V,EAAA6nC,OAAAtpD,QAAA64B,EAAA,QACAq4B,EAAAzvC,EAAAkW,eACAw5B,GAAAD,EAAAzvC,EAAAjf,MAAAif,EAAAhf,QAAAouD,EAcA,OAZAlP,GAAAuP,EAAAzvC,EAAA0D,KAAA1D,EAAA2D,IAEAyT,IACA8oB,GAAAwP,EAAA,GAIA3zD,EADAmkD,GAAA,EACA,EAEAh2C,KAAAyM,MAAAupC,EAAAwP,GAGA3zD,EAAAikB,EAAAivC,UAGA/2B,aAAA,WACA,OAAAv9B,KAAAkpB,UAKA8rC,GAAAb,GACAC,GAAAY,aAEA,IAAA/xC,GAAAoK,GAAApK,KACAE,GAAAkK,GAAAlK,cAQA,SAAA8xC,GAAAC,EAAAC,GACA,IAeAC,EAAAC,EAAAC,EAAAC,EAfA/5B,EAAA,GAKAg6B,EAAA,MACAC,EAAAP,EAAAO,SACAC,EAAAD,GAAA,EACAE,EAAAT,EAAA7D,SAAA,EACA/hD,EAAA4lD,EAAA5lD,IACAE,EAAA0lD,EAAA1lD,IACAomD,EAAAV,EAAAU,UACAC,EAAAV,EAAA7lD,IACAwmD,EAAAX,EAAA3lD,IACAumD,EAAA1oC,GAAA45B,SAAA6O,EAAAD,GAAAF,EAAAD,KAKA,GAAAK,EAAAP,GAAAryC,GAAA7T,IAAA6T,GAAA3T,GACA,OAAAqmD,EAAAC,GAGAP,EAAAhmD,KAAAymD,KAAAF,EAAAC,GAAAxmD,KAAAqB,MAAAilD,EAAAE,GACAR,EAAAI,IAEAI,EAAA1oC,GAAA45B,QAAAsO,EAAAQ,EAAAJ,EAAAD,MAGAD,GAAAtyC,GAAAyyC,GAEAR,EAAA7lD,KAAAS,IAAA,GAAAqd,GAAAy3B,eAAAiR,KAGAX,EAAA7lD,KAAAS,IAAA,GAAA4lD,GACAG,EAAAxmD,KAAAymD,KAAAD,EAAAX,MAGAC,EAAA9lD,KAAAqB,MAAAilD,EAAAE,KACAT,EAAA/lD,KAAAymD,KAAAF,EAAAC,KAGAN,KAEAtyC,GAAA7T,IAAA+d,GAAA42B,YAAA30C,EAAAymD,IAAA,OACAV,EAAA/lD,IAEA6T,GAAA3T,IAAA6d,GAAA42B,YAAAz0C,EAAAumD,IAAA,OACAT,EAAA9lD,IAIA+lD,GAAAD,EAAAD,GAAAU,EAGAR,EADAloC,GAAA22B,aAAAuR,EAAAhmD,KAAAyM,MAAAu5C,GAAAQ,EAAA,KACAxmD,KAAAyM,MAAAu5C,GAEAhmD,KAAAymD,KAAAT,GAGAF,EAAA9lD,KAAAyM,MAAAq5C,EAAAD,KACAE,EAAA/lD,KAAAyM,MAAAs5C,EAAAF,KACA55B,EAAAz0B,KAAAoc,GAAA7T,GAAA+lD,EAAA/lD,GACA,QAAA4xB,EAAA,EAAgBA,EAAAq0B,IAAer0B,EAC/B1F,EAAAz0B,KAAAwI,KAAAyM,OAAAq5C,EAAAn0B,EAAA60B,GAAAX,MAIA,OAFA55B,EAAAz0B,KAAAoc,GAAA3T,GAAA8lD,EAAA9lD,GAEAgsB,EAGA,IAAAy6B,GAAAhJ,GAAAhoC,OAAA,CACAsZ,cAAA,SAAAn9B,GACA,wBAAAA,GACAA,EAEA6rD,GAAAnlD,UAAAy2B,cAAA5iB,KAAA3b,KAAAoB,IAGA80D,uBAAA,WACA,IAAA7wC,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACA2pD,EAAA1tB,EAAA3F,MAKA,GAAAqzB,EAAA5pB,YAAA,CACA,IAAAkxB,EAAA9oC,GAAA+2B,KAAA/+B,EAAA/V,KACA8mD,EAAA/oC,GAAA+2B,KAAA/+B,EAAA7V,KAEA2mD,EAAA,GAAAC,EAAA,EAEA/wC,EAAA7V,IAAA,EACI2mD,EAAA,GAAAC,EAAA,IAEJ/wC,EAAA/V,IAAA,GAIA,IAAA+mD,OAAAvrD,IAAA+jD,EAAAv/C,UAAAxE,IAAA+jD,EAAAyH,aACAC,OAAAzrD,IAAA+jD,EAAAr/C,UAAA1E,IAAA+jD,EAAA2H,kBAEA1rD,IAAA+jD,EAAAv/C,IACA+V,EAAA/V,IAAAu/C,EAAAv/C,SACGxE,IAAA+jD,EAAAyH,eACH,OAAAjxC,EAAA/V,IACA+V,EAAA/V,IAAAu/C,EAAAyH,aAEAjxC,EAAA/V,IAAAC,KAAAD,IAAA+V,EAAA/V,IAAAu/C,EAAAyH,oBAIAxrD,IAAA+jD,EAAAr/C,IACA6V,EAAA7V,IAAAq/C,EAAAr/C,SACG1E,IAAA+jD,EAAA2H,eACH,OAAAnxC,EAAA7V,IACA6V,EAAA7V,IAAAq/C,EAAA2H,aAEAnxC,EAAA7V,IAAAD,KAAAC,IAAA6V,EAAA7V,IAAAq/C,EAAA2H,eAIAH,IAAAE,GAKAlxC,EAAA/V,KAAA+V,EAAA7V,MACA6mD,EACAhxC,EAAA7V,IAAA6V,EAAA/V,IAAA,EAEA+V,EAAA/V,IAAA+V,EAAA7V,IAAA,GAKA6V,EAAA/V,MAAA+V,EAAA7V,MACA6V,EAAA7V,MAEAq/C,EAAA5pB,aACA5f,EAAA/V,QAKAmnD,aAAA,WACA,IAIApF,EAJAhsC,EAAArlB,KACA6uD,EAAAxpC,EAAAngB,QAAAs2B,MACAi6B,EAAA5G,EAAA4G,SACAnE,EAAAzC,EAAAyC,cAcA,OAXAmE,EACApE,EAAA9hD,KAAAymD,KAAA3wC,EAAA7V,IAAAimD,GAAAlmD,KAAAqB,MAAAyU,EAAA/V,IAAAmmD,GAAA,GAEApE,EAAAhsC,EAAAqxC,oBACApF,KAAA,IAGAA,IACAD,EAAA9hD,KAAAD,IAAAgiD,EAAAD,IAGAA,GAGAqF,kBAAA,WACA,OAAAlwD,OAAAihC,mBAGAkvB,yBAAA1zC,GAEAgrC,WAAA,WACA,IAAA5oC,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACA2pD,EAAA1tB,EAAA3F,MAMA61B,EAAAhsC,EAAAoxC,eACApF,EAAA9hD,KAAAC,IAAA,EAAA6hD,GAEA,IAAAuF,EAAA,CACAvF,WACA/hD,IAAAu/C,EAAAv/C,IACAE,IAAAq/C,EAAAr/C,IACAomD,UAAA/G,EAAA+G,UACAH,SAAApoC,GAAA7J,eAAAqrC,EAAAgI,cAAAhI,EAAA4G,WAEAj6B,EAAAnW,EAAAmW,MAAAy5B,GAAA2B,EAAAvxC,GAEAA,EAAAsxC,2BAIAtxC,EAAA7V,IAAA6d,GAAA7d,IAAAgsB,GACAnW,EAAA/V,IAAA+d,GAAA/d,IAAAksB,GAEAqzB,EAAA7qC,SACAwX,EAAAxX,UAEAqB,EAAAmI,MAAAnI,EAAA7V,IACA6V,EAAAiX,IAAAjX,EAAA/V,MAEA+V,EAAAmI,MAAAnI,EAAA/V,IACA+V,EAAAiX,IAAAjX,EAAA7V,MAIA4+C,qBAAA,WACA,IAAA/oC,EAAArlB,KACAqlB,EAAAyxC,eAAAzxC,EAAAmW,MAAA9f,QACA2J,EAAA+tC,cAAA/tC,EAAAmW,MAAAl3B,QAAA,GAEA2oD,GAAAnlD,UAAAsmD,qBAAAzyC,KAAA0J,MAIA0xC,GAAA,CACA93B,SAAA,OACAzD,MAAA,CACA7X,SAAAmnC,GAAAC,WAAA7kC,SAIA8wC,GAAAf,GAAAhxC,OAAA,CACA6oC,oBAAA,WACA,IAAAzoC,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACAnC,EAAAsiB,EAAAtiB,MACA0B,EAAA1B,EAAA0B,KACAtB,EAAAsB,EAAAtB,SACAo4B,EAAAlW,EAAAkW,eACA07B,EAAA,EACAC,EAAA,EAEA,SAAAC,EAAAtlC,GACA,OAAA0J,EAAA1J,EAAAG,UAAA3M,EAAAlf,GAAA0rB,EAAAM,UAAA9M,EAAAlf,GAIAkf,EAAA/V,IAAA,KACA+V,EAAA7V,IAAA,KAEA,IAAA4nD,EAAAj2B,EAAApD,QAeA,QAdAjzB,IAAAssD,GACA/pC,GAAAvJ,KAAA3gB,EAAA,SAAAE,EAAAkuB,GACA,IAAA6lC,EAAA,CAIA,IAAAvlC,EAAA9uB,EAAAsvB,eAAAd,GACAxuB,EAAAk7B,iBAAA1M,IAAA4lC,EAAAtlC,SACA/mB,IAAA+mB,EAAAgL,QACAu6B,GAAA,MAKAj2B,EAAApD,SAAAq5B,EAAA,CACA,IAAAC,EAAA,GAEAhqC,GAAAvJ,KAAA3gB,EAAA,SAAAE,EAAAkuB,GACA,IAAAM,EAAA9uB,EAAAsvB,eAAAd,GACAltB,EAAA,CACAwtB,EAAAtsB,UAEAuF,IAAAq2B,EAAApD,cAAAjzB,IAAA+mB,EAAAgL,MAAAtL,EAAA,GACAM,EAAAgL,OACA9yB,KAAA,UAEAe,IAAAusD,EAAAhzD,KACAgzD,EAAAhzD,GAAA,CACAizD,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAAhzD,GAAAizD,eACAC,EAAAF,EAAAhzD,GAAAkzD,eAEAx0D,EAAAk7B,iBAAA1M,IAAA4lC,EAAAtlC,IACAxE,GAAAvJ,KAAAzgB,EAAAoB,KAAA,SAAAgsD,EAAA7tC,GACA,IAAAxhB,GAAAikB,EAAAkZ,cAAAkyB,GACAryC,MAAAhd,IAAAywB,EAAAptB,KAAAme,GAAAuL,SAIAmpC,EAAA10C,GAAA00C,EAAA10C,IAAA,EACA20C,EAAA30C,GAAA20C,EAAA30C,IAAA,EAEAue,EAAAq2B,eACAF,EAAA10C,GAAA,IACOxhB,EAAA,EACPm2D,EAAA30C,IAAAxhB,EAEAk2D,EAAA10C,IAAAxhB,OAMAisB,GAAAvJ,KAAAuzC,EAAA,SAAAI,GACA,IAAAr7C,EAAAq7C,EAAAH,eAAA/3C,OAAAk4C,EAAAF,gBACAG,EAAArqC,GAAA/d,IAAA8M,GACAu7C,EAAAtqC,GAAA7d,IAAA4M,GACAiJ,EAAA/V,IAAA,OAAA+V,EAAA/V,IAAAooD,EAAAnoD,KAAAD,IAAA+V,EAAA/V,IAAAooD,GACAryC,EAAA7V,IAAA,OAAA6V,EAAA7V,IAAAmoD,EAAApoD,KAAAC,IAAA6V,EAAA7V,IAAAmoD,UAIAtqC,GAAAvJ,KAAA3gB,EAAA,SAAAE,EAAAkuB,GACA,IAAAM,EAAA9uB,EAAAsvB,eAAAd,GACAxuB,EAAAk7B,iBAAA1M,IAAA4lC,EAAAtlC,IACAxE,GAAAvJ,KAAAzgB,EAAAoB,KAAA,SAAAgsD,EAAA7tC,GACA,IAAAxhB,GAAAikB,EAAAkZ,cAAAkyB,GACAryC,MAAAhd,IAAAywB,EAAAptB,KAAAme,GAAAuL,SAIA,OAAA9I,EAAA/V,IACA+V,EAAA/V,IAAAlO,EACOA,EAAAikB,EAAA/V,MACP+V,EAAA/V,IAAAlO,GAGA,OAAAikB,EAAA7V,IACA6V,EAAA7V,IAAApO,EACOA,EAAAikB,EAAA7V,MACP6V,EAAA7V,IAAApO,QAOAikB,EAAA/V,IAAAiU,SAAA8B,EAAA/V,OAAA8O,MAAAiH,EAAA/V,KAAA+V,EAAA/V,IAAA2nD,EACA5xC,EAAA7V,IAAA+T,SAAA8B,EAAA7V,OAAA4O,MAAAiH,EAAA7V,KAAA6V,EAAA7V,IAAA0nD,EAGAl3D,KAAAk2D,0BAIAQ,kBAAA,WACA,IACA3H,EADA1pC,EAAArlB,KAGA,OAAAqlB,EAAAkW,eACAhsB,KAAAymD,KAAA3wC,EAAAjf,MAAA,KAEA2oD,EAAA1hC,GAAAnoB,QAAA0nB,WAAAvH,EAAAngB,QAAAs2B,OACAjsB,KAAAymD,KAAA3wC,EAAAhf,OAAA0oD,EAAA/hC,cAIA2pC,yBAAA,WACA32D,KAAAu7B,gBAEAv7B,KAAAw7B,MAAAxX,WAIAgzB,iBAAA,SAAAp0B,EAAA2O,GACA,OAAAvxB,KAAAu+B,cAAAv+B,KAAA+C,MAAA0B,KAAAtB,SAAAouB,GAAA9sB,KAAAme,KAIAwb,iBAAA,SAAAh9B,GAGA,IAIAmkD,EAJAlgC,EAAArlB,KACAwtB,EAAAnI,EAAAmI,MAEA2W,GAAA9e,EAAAkZ,cAAAn9B,GAEAs9B,EAAArZ,EAAAiX,IAAA9O,EAOA,OAJA+3B,EADAlgC,EAAAkW,eACAlW,EAAA0D,KAAA1D,EAAAjf,MAAAs4B,GAAAyF,EAAA3W,GAEAnI,EAAA6D,OAAA7D,EAAAhf,OAAAq4B,GAAAyF,EAAA3W,GAEA+3B,GAGAmL,iBAAA,SAAAnL,GACA,IAAAlgC,EAAArlB,KACAu7B,EAAAlW,EAAAkW,eACAq8B,EAAAr8B,EAAAlW,EAAAjf,MAAAif,EAAAhf,OACAo2B,GAAAlB,EAAAgqB,EAAAlgC,EAAA0D,KAAA1D,EAAA6D,OAAAq8B,GAAAqS,EACA,OAAAvyC,EAAAmI,OAAAnI,EAAAiX,IAAAjX,EAAAmI,OAAAiP,GAGAf,gBAAA,SAAA9Y,GACA,OAAA5iB,KAAAo+B,iBAAAp+B,KAAA82D,eAAAl0C,OAKAi1C,GAAAd,GACAC,GAAAhC,UAAA6C,GAEA,IAAAC,GAAAzqC,GAAA7J,eAQA,SAAAu0C,GAAA7C,EAAAC,GACA,IAMA6C,EAAAC,EANAz8B,EAAA,GAEA08B,EAAAJ,GAAA5C,EAAA5lD,IAAAC,KAAAS,IAAA,GAAAT,KAAAqB,MAAAyc,GAAAg3B,MAAA8Q,EAAA7lD,QAEA6oD,EAAA5oD,KAAAqB,MAAAyc,GAAAg3B,MAAA8Q,EAAA3lD,MACA4oD,EAAA7oD,KAAAymD,KAAAb,EAAA3lD,IAAAD,KAAAS,IAAA,GAAAmoD,IAGA,IAAAD,GACAF,EAAAzoD,KAAAqB,MAAAyc,GAAAg3B,MAAA8Q,EAAAkD,aACAJ,EAAA1oD,KAAAqB,MAAAukD,EAAAkD,WAAA9oD,KAAAS,IAAA,GAAAgoD,IAEAx8B,EAAAz0B,KAAAmxD,GACAA,EAAAD,EAAA1oD,KAAAS,IAAA,GAAAgoD,KAEAA,EAAAzoD,KAAAqB,MAAAyc,GAAAg3B,MAAA6T,IACAD,EAAA1oD,KAAAqB,MAAAsnD,EAAA3oD,KAAAS,IAAA,GAAAgoD,KAEA,IAAApC,EAAAoC,EAAA,EAAAzoD,KAAAS,IAAA,GAAAT,KAAAkpB,IAAAu/B,IAAA,EAEA,GACAx8B,EAAAz0B,KAAAmxD,KAEAD,EACA,KAAAA,IACAA,EAAA,IACAD,EACApC,EAAAoC,GAAA,IAAApC,GAGAsC,EAAA3oD,KAAAyM,MAAAi8C,EAAA1oD,KAAAS,IAAA,GAAAgoD,GAAApC,WACEoC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEF,IAAAE,EAAAR,GAAA5C,EAAA1lD,IAAA0oD,GAGA,OAFA18B,EAAAz0B,KAAAuxD,GAEA98B,EAGA,IAAA+8B,GAAA,CACAt5B,SAAA,OAGAzD,MAAA,CACA7X,SAAAmnC,GAAAC,WAAAQ,cAKA,SAAAiN,GAAAp3D,EAAAqiB,GACA,OAAA4J,GAAA9J,SAAAniB,OAAA,EAAAA,EAAAqiB,EAGA,IAAAg1C,GAAAxL,GAAAhoC,OAAA,CACA6oC,oBAAA,WACA,IAAAzoC,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACAnC,EAAAsiB,EAAAtiB,MACA0B,EAAA1B,EAAA0B,KACAtB,EAAAsB,EAAAtB,SACAo4B,EAAAlW,EAAAkW,eACA,SAAA47B,EAAAtlC,GACA,OAAA0J,EAAA1J,EAAAG,UAAA3M,EAAAlf,GAAA0rB,EAAAM,UAAA9M,EAAAlf,GAIAkf,EAAA/V,IAAA,KACA+V,EAAA7V,IAAA,KACA6V,EAAAgzC,WAAA,KAEA,IAAAjB,EAAAj2B,EAAApD,QAeA,QAdAjzB,IAAAssD,GACA/pC,GAAAvJ,KAAA3gB,EAAA,SAAAE,EAAAkuB,GACA,IAAA6lC,EAAA,CAIA,IAAAvlC,EAAA9uB,EAAAsvB,eAAAd,GACAxuB,EAAAk7B,iBAAA1M,IAAA4lC,EAAAtlC,SACA/mB,IAAA+mB,EAAAgL,QACAu6B,GAAA,MAKAj2B,EAAApD,SAAAq5B,EAAA,CACA,IAAAC,EAAA,GAEAhqC,GAAAvJ,KAAA3gB,EAAA,SAAAE,EAAAkuB,GACA,IAAAM,EAAA9uB,EAAAsvB,eAAAd,GACAltB,EAAA,CACAwtB,EAAAtsB,UAEAuF,IAAAq2B,EAAApD,cAAAjzB,IAAA+mB,EAAAgL,MAAAtL,EAAA,GACAM,EAAAgL,OACA9yB,KAAA,KAEAhH,EAAAk7B,iBAAA1M,IAAA4lC,EAAAtlC,UACA/mB,IAAAusD,EAAAhzD,KACAgzD,EAAAhzD,GAAA,IAGAgpB,GAAAvJ,KAAAzgB,EAAAoB,KAAA,SAAAgsD,EAAA7tC,GACA,IAAAxG,EAAAi7C,EAAAhzD,GACAjD,GAAAikB,EAAAkZ,cAAAkyB,GAEAryC,MAAAhd,IAAAywB,EAAAptB,KAAAme,GAAAuL,QAAA/sB,EAAA,IAGAgb,EAAAwG,GAAAxG,EAAAwG,IAAA,EACAxG,EAAAwG,IAAAxhB,QAKAisB,GAAAvJ,KAAAuzC,EAAA,SAAAI,GACA,GAAAA,EAAA7zD,OAAA,GACA,IAAA8zD,EAAArqC,GAAA/d,IAAAmoD,GACAE,EAAAtqC,GAAA7d,IAAAioD,GACApyC,EAAA/V,IAAA,OAAA+V,EAAA/V,IAAAooD,EAAAnoD,KAAAD,IAAA+V,EAAA/V,IAAAooD,GACAryC,EAAA7V,IAAA,OAAA6V,EAAA7V,IAAAmoD,EAAApoD,KAAAC,IAAA6V,EAAA7V,IAAAmoD,WAKAtqC,GAAAvJ,KAAA3gB,EAAA,SAAAE,EAAAkuB,GACA,IAAAM,EAAA9uB,EAAAsvB,eAAAd,GACAxuB,EAAAk7B,iBAAA1M,IAAA4lC,EAAAtlC,IACAxE,GAAAvJ,KAAAzgB,EAAAoB,KAAA,SAAAgsD,EAAA7tC,GACA,IAAAxhB,GAAAikB,EAAAkZ,cAAAkyB,GAEAryC,MAAAhd,IAAAywB,EAAAptB,KAAAme,GAAAuL,QAAA/sB,EAAA,IAIA,OAAAikB,EAAA/V,IACA+V,EAAA/V,IAAAlO,EACOA,EAAAikB,EAAA/V,MACP+V,EAAA/V,IAAAlO,GAGA,OAAAikB,EAAA7V,IACA6V,EAAA7V,IAAApO,EACOA,EAAAikB,EAAA7V,MACP6V,EAAA7V,IAAApO,GAGA,IAAAA,IAAA,OAAAikB,EAAAgzC,YAAAj3D,EAAAikB,EAAAgzC,cACAhzC,EAAAgzC,WAAAj3D,QAQApB,KAAAk2D,0BAGAA,uBAAA,WACA,IAAA7wC,EAAArlB,KACA6uD,EAAAxpC,EAAAngB,QAAAs2B,MACAy7B,EAAA,EACAC,EAAA,GAEA7xC,EAAA/V,IAAAkpD,GAAA3J,EAAAv/C,IAAA+V,EAAA/V,KACA+V,EAAA7V,IAAAgpD,GAAA3J,EAAAr/C,IAAA6V,EAAA7V,KAEA6V,EAAA/V,MAAA+V,EAAA7V,MACA,IAAA6V,EAAA/V,KAAA,OAAA+V,EAAA/V,KACA+V,EAAA/V,IAAAC,KAAAS,IAAA,GAAAT,KAAAqB,MAAAyc,GAAAg3B,MAAAh/B,EAAA/V,MAAA,GACA+V,EAAA7V,IAAAD,KAAAS,IAAA,GAAAT,KAAAqB,MAAAyc,GAAAg3B,MAAAh/B,EAAA7V,MAAA,KAEA6V,EAAA/V,IAAA2nD,EACA5xC,EAAA7V,IAAA0nD,IAGA,OAAA7xC,EAAA/V,MACA+V,EAAA/V,IAAAC,KAAAS,IAAA,GAAAT,KAAAqB,MAAAyc,GAAAg3B,MAAAh/B,EAAA7V,MAAA,IAEA,OAAA6V,EAAA7V,MACA6V,EAAA7V,IAAA,IAAA6V,EAAA/V,IACAC,KAAAS,IAAA,GAAAT,KAAAqB,MAAAyc,GAAAg3B,MAAAh/B,EAAA/V,MAAA,GACA4nD,GAEA,OAAA7xC,EAAAgzC,aACAhzC,EAAA/V,IAAA,EACA+V,EAAAgzC,WAAAhzC,EAAA/V,IACI+V,EAAA7V,IAAA,EACJ6V,EAAAgzC,WAAA9oD,KAAAS,IAAA,GAAAT,KAAAqB,MAAAyc,GAAAg3B,MAAAh/B,EAAA7V,OAEA6V,EAAAgzC,WAAApB,IAKAhJ,WAAA,WACA,IAAA5oC,EAAArlB,KACA6uD,EAAAxpC,EAAAngB,QAAAs2B,MACAxX,GAAAqB,EAAAkW,eAEA25B,EAAA,CACA5lD,IAAAkpD,GAAA3J,EAAAv/C,KACAE,IAAAgpD,GAAA3J,EAAAr/C,MAEAgsB,EAAAnW,EAAAmW,MAAAu8B,GAAA7C,EAAA7vC,GAIAA,EAAA7V,IAAA6d,GAAA7d,IAAAgsB,GACAnW,EAAA/V,IAAA+d,GAAA/d,IAAAksB,GAEAqzB,EAAA7qC,SACAA,KACAqB,EAAAmI,MAAAnI,EAAA7V,IACA6V,EAAAiX,IAAAjX,EAAA/V,MAEA+V,EAAAmI,MAAAnI,EAAA/V,IACA+V,EAAAiX,IAAAjX,EAAA7V,KAEAwU,GACAwX,EAAAxX,WAIAoqC,qBAAA,WACApuD,KAAA04D,WAAA14D,KAAAw7B,MAAA9f,QAEAuxC,GAAAnlD,UAAAsmD,qBAAAzyC,KAAA3b,OAIAg3C,iBAAA,SAAAp0B,EAAA2O,GACA,OAAAvxB,KAAAu+B,cAAAv+B,KAAA+C,MAAA0B,KAAAtB,SAAAouB,GAAA9sB,KAAAme,KAGA8Y,gBAAA,SAAA9Y,GACA,OAAA5iB,KAAAo+B,iBAAAp+B,KAAA04D,WAAA91C,KASA+1C,mBAAA,SAAAv3D,GACA,IAAA42D,EAAAzoD,KAAAqB,MAAAyc,GAAAg3B,MAAAjjD,IACA62D,EAAA1oD,KAAAqB,MAAAxP,EAAAmO,KAAAS,IAAA,GAAAgoD,IAEA,OAAAC,EAAA1oD,KAAAS,IAAA,GAAAgoD,IAGA55B,iBAAA,SAAAh9B,GACA,IAMAw2D,EAAArS,EAAA/3B,EAAA8O,EAAA8nB,EANA/+B,EAAArlB,KACA6uD,EAAAxpC,EAAAngB,QAAAs2B,MACAxX,EAAA6qC,EAAA7qC,QACAqgC,EAAAh3B,GAAAg3B,MACAuU,EAAAvzC,EAAAszC,mBAAAtzC,EAAAgzC,YACA57B,EAAA,EAgCA,OA7BAr7B,GAAAikB,EAAAkZ,cAAAn9B,GACA4iB,GACAwJ,EAAAnI,EAAAiX,IACAA,EAAAjX,EAAAmI,MACA42B,GAAA,IAEA52B,EAAAnI,EAAAmI,MACA8O,EAAAjX,EAAAiX,IACA8nB,EAAA,GAEA/+B,EAAAkW,gBACAq8B,EAAAvyC,EAAAjf,MACAm/C,EAAAvhC,EAAAqB,EAAA4D,MAAA5D,EAAA0D,OAEA6uC,EAAAvyC,EAAAhf,OACA+9C,IAAA,EACAmB,EAAAvhC,EAAAqB,EAAA2D,IAAA3D,EAAA6D,QAEA9nB,IAAAosB,IACA,IAAAA,IACAiP,EAAAq7B,GAAAjJ,EAAA/hC,SAAAV,GAAAxgB,OAAAogB,iBACA4rC,GAAAn7B,EACAjP,EAAAorC,GAEA,IAAAx3D,IACAq7B,GAAAm7B,GAAAvT,EAAA/nB,GAAA+nB,EAAA72B,KAAA62B,EAAAjjD,GAAAijD,EAAA72B,KAEA+3B,GAAAnB,EAAA3nB,GAEA8oB,GAGAmL,iBAAA,SAAAnL,GACA,IAKAqS,EAAApqC,EAAA8O,EAAAl7B,EALAikB,EAAArlB,KACA6uD,EAAAxpC,EAAAngB,QAAAs2B,MACAxX,EAAA6qC,EAAA7qC,QACAqgC,EAAAh3B,GAAAg3B,MACAuU,EAAAvzC,EAAAszC,mBAAAtzC,EAAAgzC,YAiBA,GAdAr0C,GACAwJ,EAAAnI,EAAAiX,IACAA,EAAAjX,EAAAmI,QAEAA,EAAAnI,EAAAmI,MACA8O,EAAAjX,EAAAiX,KAEAjX,EAAAkW,gBACAq8B,EAAAvyC,EAAAjf,MACAhF,EAAA4iB,EAAAqB,EAAA4D,MAAAs8B,IAAAlgC,EAAA0D,OAEA6uC,EAAAvyC,EAAAhf,OACAjF,EAAA4iB,EAAAuhC,EAAAlgC,EAAA2D,IAAA3D,EAAA6D,OAAAq8B,GAEAnkD,IAAAosB,EAAA,CACA,OAAAA,EAAA,CACA,IAAAiP,EAAAq7B,GAAAjJ,EAAA/hC,SAAAV,GAAAxgB,OAAAogB,iBACA5qB,GAAAq7B,EACAm7B,GAAAn7B,EACAjP,EAAAorC,EAEAx3D,GAAAijD,EAAA/nB,GAAA+nB,EAAA72B,GACApsB,GAAAw2D,EACAx2D,EAAAmO,KAAAS,IAAA,GAAAq0C,EAAA72B,GAAApsB,GAEA,OAAAA,KAKAy3D,GAAAN,GACAE,GAAAzD,UAAA6D,GAEA,IAAAC,GAAAzrC,GAAA7J,eACAu1C,GAAA1rC,GAAA3J,sBACAs1C,GAAA3rC,GAAAnoB,QAAAgoB,QAEA+rC,GAAA,CACAn0B,SAAA,EAGAo0B,SAAA,EACAj6B,SAAA,YAEA4F,WAAA,CACAC,SAAA,EACApkC,MAAA,qBACAo2B,UAAA,EACAM,WAAA,GACAC,iBAAA,GAGAqF,UAAA,CACAqI,UAAA,GAIAvJ,MAAA,CAEA29B,mBAAA,EAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEA31C,SAAAmnC,GAAAC,WAAA7kC,QAGA8e,YAAA,CAEAF,SAAA,EAGAhY,SAAA,GAGAnJ,SAAA,SAAArgB,GACA,OAAAA,KAKA,SAAAi2D,GAAAr7C,GACA,IAAAijB,EAAAjjB,EAAAhZ,QACA,OAAAi8B,EAAA0D,WAAAC,SAAA3D,EAAA6D,YAAAF,QAAA5mB,EAAAnb,MAAA0B,KAAAE,OAAAf,OAAA,EAGA,SAAA41D,GAAAr4B,GACA,IAAA0tB,EAAA1tB,EAAA3F,MAEA,OAAAqzB,EAAA/pB,SAAA3D,EAAA2D,QACAg0B,GAAAjK,EAAA/hC,SAAAV,GAAAxgB,OAAAogB,iBAAA,EAAA6iC,EAAAwK,iBAEA,EAGA,SAAAI,GAAA9wC,EAAAqE,EAAA1pB,GACA,OAAA+pB,GAAAjK,QAAA9f,GACA,CACAqM,EAAA0d,GAAA87B,YAAAxgC,IAAA2D,KAAAhpB,GACA0L,EAAA1L,EAAAM,OAAAopB,GAIA,CACArd,EAAAgZ,EAAAywB,YAAA91C,GAAA8C,MACA4I,EAAAge,GAIA,SAAA0sC,GAAA/jC,EAAAmZ,EAAAnlB,EAAAra,EAAAE,GACA,OAAAmmB,IAAArmB,GAAAqmB,IAAAnmB,EACA,CACAge,MAAAshB,EAAAnlB,EAAA,EACA2S,IAAAwS,EAAAnlB,EAAA,GAEEgM,EAAArmB,GAAAqmB,EAAAnmB,EACF,CACAge,MAAAshB,EAAAnlB,EACA2S,IAAAwS,GAIA,CACAthB,MAAAshB,EACAxS,IAAAwS,EAAAnlB,GAOA,SAAAgwC,GAAAz7C,GA4BA,IAWApa,EAAA81D,EAAAvzB,EAXAwzB,EAAAxsC,GAAAnoB,QAAA0nB,WAAA1O,EAAAhZ,QAAA8/B,aAIA80B,EAAA,CACA5qD,EAAA,EACAC,EAAA+O,EAAA9X,MACA4K,EAAA,EACA3B,EAAA6O,EAAA7X,OAAA6X,EAAAgqC,YAEA6R,EAAA,GAGA77C,EAAAyK,IAAA2D,KAAAutC,EAAAn8C,OACAQ,EAAA87C,iBAAA,GAEA,IAAAC,EAAAV,GAAAr7C,GACA,IAAApa,EAAA,EAAYA,EAAAm2D,EAAgBn2D,IAAA,CAC5BuiC,EAAAnoB,EAAAg8C,iBAAAp2D,EAAAoa,EAAAi8C,YAAA,GACAP,EAAAH,GAAAv7C,EAAAyK,IAAAkxC,EAAA7sC,WAAA9O,EAAA8mB,YAAAlhC,IAAA,IACAoa,EAAA87C,iBAAAl2D,GAAA81D,EAGA,IAAAtK,EAAApxC,EAAAk8C,cAAAt2D,GACA6xB,EAAAtI,GAAAu3B,UAAA0K,GAAA,IACA+K,EAAAX,GAAA/jC,EAAA0Q,EAAAr7B,EAAA4uD,EAAAjqD,EAAA,OACA2qD,EAAAZ,GAAA/jC,EAAA0Q,EAAAp7B,EAAA2uD,EAAA5qD,EAAA,QAEAqrD,EAAA7sC,MAAAssC,EAAA5qD,IACA4qD,EAAA5qD,EAAAmrD,EAAA7sC,MACAusC,EAAA7qD,EAAAogD,GAGA+K,EAAA/9B,IAAAw9B,EAAA3qD,IACA2qD,EAAA3qD,EAAAkrD,EAAA/9B,IACAy9B,EAAA5qD,EAAAmgD,GAGAgL,EAAA9sC,MAAAssC,EAAA9oD,IACA8oD,EAAA9oD,EAAAspD,EAAA9sC,MACAusC,EAAA/oD,EAAAs+C,GAGAgL,EAAAh+B,IAAAw9B,EAAAzqD,IACAyqD,EAAAzqD,EAAAirD,EAAAh+B,IACAy9B,EAAA1qD,EAAAigD,GAIApxC,EAAAq8C,cAAAr8C,EAAAi8C,YAAAL,EAAAC,GAGA,SAAAS,GAAA7kC,GACA,WAAAA,GAAA,MAAAA,EACA,SACEA,EAAA,IACF,OAGA,QAGA,SAAA2mB,GAAA3zB,EAAAwX,EAAAlB,EAAAjS,GACA,IACAlpB,EAAAugB,EADApZ,EAAAg0B,EAAAh0B,EAAA+hB,EAAA,EAGA,GAAAK,GAAAjK,QAAA+c,GACA,IAAAr8B,EAAA,EAAAugB,EAAA8b,EAAAv8B,OAAiCE,EAAAugB,IAAUvgB,EAC3C6kB,EAAA2zB,SAAAnc,EAAAr8B,GAAAm7B,EAAAj0B,EAAAC,GACAA,GAAA+hB,OAGArE,EAAA2zB,SAAAnc,EAAAlB,EAAAj0B,EAAAC,GAIA,SAAAwvD,GAAA9kC,EAAAikC,EAAA36B,GACA,KAAAtJ,GAAA,MAAAA,EACAsJ,EAAAh0B,GAAA2uD,EAAA5qD,EAAA,GACE2mB,EAAA,KAAAA,EAAA,MACFsJ,EAAAh0B,GAAA2uD,EAAA5qD,GAIA,SAAA0rD,GAAAx8C,GACA,IAAAyK,EAAAzK,EAAAyK,IACAwY,EAAAjjB,EAAAhZ,QACAy1D,EAAAx5B,EAAA0D,WACA2qB,EAAAruB,EAAAzE,UACAk+B,EAAAz5B,EAAA6D,YACAlO,EAAAgiC,GAAA6B,EAAA7jC,UAAA04B,EAAA14B,WACA87B,EAAAkG,GAAA6B,EAAAj6D,MAAA8uD,EAAA9uD,OACAm6D,EAAArB,GAAAr4B,GAEAxY,EAAA8B,OACA9B,EAAAmO,YACAnO,EAAAqO,YAAA47B,EACAjqC,EAAAuP,cACAvP,EAAAuP,YAAA8gC,GAAA,CAAA2B,EAAAvjC,WAAAo4B,EAAAp4B,WAAA,MACAzO,EAAAwP,eAAA6gC,GAAA,CAAA2B,EAAAtjC,iBAAAm4B,EAAAn4B,iBAAA,KAGA,IAAAyjC,EAAA58C,EAAA4nB,8BAAA3E,EAAA3F,MAAAxX,QAAA9F,EAAA5O,IAAA4O,EAAA1O,KAGAqqD,EAAAxsC,GAAAnoB,QAAA0nB,WAAAguC,GAEAjyC,EAAA2D,KAAAutC,EAAAn8C,OACAiL,EAAA0zB,aAAA,SAEA,QAAAv4C,EAAAy1D,GAAAr7C,GAAA,EAAuCpa,GAAA,EAAQA,IAAA,CAC/C,GAAA62D,EAAA71B,SAAAhO,GAAA87B,EAAA,CACA,IAAAmI,EAAA78C,EAAAg8C,iBAAAp2D,EAAAg3D,GACAnyC,EAAAoB,YACApB,EAAAQ,OAAAjL,EAAAynB,QAAAznB,EAAA0nB,SACAjd,EAAAqB,OAAA+wC,EAAA/vD,EAAA+vD,EAAA9vD,GACA0d,EAAAwB,SAGA,GAAAywC,EAAA91B,QAAA,CAEA,IAAAk2B,EAAA,IAAAl3D,EAAA+2D,EAAA,IACAI,EAAA/8C,EAAAg8C,iBAAAp2D,EAAAg3D,EAAAE,EAAA,GAGAE,EAAAnC,GAAA6B,EAAAzI,UAAAruD,EAAAsoB,GAAAxgB,OAAAkgB,kBACAnD,EAAAkO,UAAAqkC,EAEA,IAAA5L,EAAApxC,EAAAk8C,cAAAt2D,GACA6xB,EAAAtI,GAAAu3B,UAAA0K,GACA3mC,EAAAyzB,UAAAoe,GAAA7kC,GACA8kC,GAAA9kC,EAAAzX,EAAA87C,iBAAAl2D,GAAAm3D,GACA3e,GAAA3zB,EAAAzK,EAAA8mB,YAAAlhC,IAAA,GAAAm3D,EAAApB,EAAA7sC,aAGArE,EAAAiC,UAGA,SAAAuwC,GAAAj9C,EAAAsxC,EAAA1mC,EAAAlG,GACA,IAKAyjB,EALA1d,EAAAzK,EAAAyK,IACAoc,EAAAyqB,EAAAzqB,SACAk1B,EAAAV,GAAAr7C,GACA00C,EAAAmG,GAAAvJ,EAAA9uD,MAAAkiB,EAAA,GACAkU,EAAAiiC,GAAAvJ,EAAA14B,UAAAlU,EAAA,GAGA,IAAAmiB,GAAAk1B,IAAArH,GAAA97B,EAAA,CAaA,GATAnO,EAAA8B,OACA9B,EAAAqO,YAAA47B,EACAjqC,EAAAmO,YACAnO,EAAAuP,cACAvP,EAAAuP,YAAAs3B,EAAAp4B,YAAA,IACAzO,EAAAwP,eAAAq3B,EAAAn4B,kBAAA,GAGA1O,EAAAoB,YACAgb,EAEApc,EAAAS,IAAAlL,EAAAynB,QAAAznB,EAAA0nB,QAAA9c,EAAA,IAAAvZ,KAAAoC,QACE,CAEF00B,EAAAnoB,EAAAg8C,iBAAA,EAAApxC,GACAH,EAAAQ,OAAAkd,EAAAr7B,EAAAq7B,EAAAp7B,GAEA,QAAAnH,EAAA,EAAiBA,EAAAm2D,EAAgBn2D,IACjCuiC,EAAAnoB,EAAAg8C,iBAAAp2D,EAAAglB,GACAH,EAAAqB,OAAAqc,EAAAr7B,EAAAq7B,EAAAp7B,GAGA0d,EAAAU,YACAV,EAAAwB,SACAxB,EAAAiC,WAGA,SAAAwwC,GAAAC,GACA,OAAAhuC,GAAAsB,SAAA0sC,KAAA,EAGA,IAAAC,GAAArF,GAAAhxC,OAAA,CACA0oC,cAAA,WACA,IAAAtoC,EAAArlB,KAGAqlB,EAAAjf,MAAAif,EAAA+nC,SACA/nC,EAAAhf,OAAAgf,EAAAgoC,UACAhoC,EAAA6iC,WAAAsR,GAAAn0C,EAAAngB,SAAA,EACAmgB,EAAAsgB,QAAAp2B,KAAAqB,MAAAyU,EAAAjf,MAAA,GACAif,EAAAugB,QAAAr2B,KAAAqB,OAAAyU,EAAAhf,OAAAgf,EAAA6iC,YAAA,GACA7iC,EAAA80C,YAAA5qD,KAAAD,IAAA+V,EAAAhf,OAAAgf,EAAA6iC,WAAA7iC,EAAAjf,OAAA,GAGA0nD,oBAAA,WACA,IAAAzoC,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAuM,EAAA9I,OAAAihC,kBACAj4B,EAAAhJ,OAAA29C,kBAEA92B,GAAAvJ,KAAA/gB,EAAA0B,KAAAtB,SAAA,SAAAE,EAAAkuB,GACA,GAAAxuB,EAAAk7B,iBAAA1M,GAAA,CACA,IAAAM,EAAA9uB,EAAAsvB,eAAAd,GAEAlE,GAAAvJ,KAAAzgB,EAAAoB,KAAA,SAAAgsD,EAAA7tC,GACA,IAAAxhB,GAAAikB,EAAAkZ,cAAAkyB,GACAryC,MAAAhd,IAAAywB,EAAAptB,KAAAme,GAAAuL,SAIA7e,EAAAC,KAAAD,IAAAlO,EAAAkO,GACAE,EAAAD,KAAAC,IAAApO,EAAAoO,SAKA6V,EAAA/V,QAAA9I,OAAAihC,kBAAA,EAAAn4B,EACA+V,EAAA7V,QAAAhJ,OAAA29C,kBAAA,EAAA30C,EAGA6V,EAAA6wC,0BAIAQ,kBAAA,WACA,OAAAnnD,KAAAymD,KAAAh2D,KAAAm6D,YAAAX,GAAAx5D,KAAAkF,WAGAkpD,qBAAA,WACA,IAAA/oC,EAAArlB,KAEAi2D,GAAAnuD,UAAAsmD,qBAAAzyC,KAAA0J,GAGAA,EAAA2f,YAAA3f,EAAAtiB,MAAA0B,KAAAE,OAAAvB,IAAAiiB,EAAAngB,QAAA8/B,YAAArhB,SAAA0B,IAGA2xB,iBAAA,SAAAp0B,EAAA2O,GACA,OAAAvxB,KAAAu+B,cAAAv+B,KAAA+C,MAAA0B,KAAAtB,SAAAouB,GAAA9sB,KAAAme,KAGA8rC,IAAA,WACA,IAAArpC,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QAEAi8B,EAAA2D,SAAA3D,EAAA6D,YAAAF,QACA60B,GAAAt0C,GAEAA,EAAAk2C,eAAA,UAQAhB,cAAA,SAAAiB,EAAA1B,EAAAC,GACA,IAAA10C,EAAArlB,KACAy7D,EAAA3B,EAAA5qD,EAAAK,KAAAwC,IAAAgoD,EAAA7qD,GACAwsD,EAAAnsD,KAAAC,IAAAsqD,EAAA3qD,EAAAkW,EAAAjf,MAAA,GAAAmJ,KAAAwC,IAAAgoD,EAAA5qD,GACAwsD,GAAA7B,EAAA9oD,EAAAzB,KAAAuC,IAAAioD,EAAA/oD,GACA4qD,GAAArsD,KAAAC,IAAAsqD,EAAAzqD,GAAAgW,EAAAhf,OAAAgf,EAAA6iC,YAAA,GAAA34C,KAAAuC,IAAAioD,EAAA1qD,GAEAosD,EAAAL,GAAAK,GACAC,EAAAN,GAAAM,GACAC,EAAAP,GAAAO,GACAC,EAAAR,GAAAQ,GAEAv2C,EAAA80C,YAAA5qD,KAAAD,IACAC,KAAAqB,MAAA4qD,GAAAC,EAAAC,GAAA,GACAnsD,KAAAqB,MAAA4qD,GAAAG,EAAAC,GAAA,IACAv2C,EAAAk2C,eAAAE,EAAAC,EAAAC,EAAAC,IAGAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAA32C,EAAArlB,KACAi8D,EAAA52C,EAAAjf,MAAA01D,EAAAz2C,EAAA80C,YACA+B,EAAAL,EAAAx2C,EAAA80C,YACAgC,EAAAJ,EAAA12C,EAAA80C,YACAiC,EAAA/2C,EAAAhf,OAAAgf,EAAA6iC,WAAA8T,EAAA32C,EAAA80C,YAEA90C,EAAAsgB,QAAAp2B,KAAAqB,OAAAsrD,EAAAD,GAAA,EAAA52C,EAAA0D,MACA1D,EAAAugB,QAAAr2B,KAAAqB,OAAAurD,EAAAC,GAAA,EAAA/2C,EAAA2D,IAAA3D,EAAA6iC,aAGAkS,cAAA,SAAAx3C,GACA,IAAAy5C,EAAA,EAAA9sD,KAAAoC,GAAA4nD,GAAAv5D,MACA61B,EAAA71B,KAAA+C,MAAAmC,SAAAlF,KAAA+C,MAAAmC,QAAA2wB,WACA71B,KAAA+C,MAAAmC,QAAA2wB,WACA,EAEAymC,EAAAzmC,EAAAtmB,KAAAoC,GAAA,MAGA,OAAAiR,EAAAy5C,EAAAC,GAGAx2B,8BAAA,SAAA1kC,GACA,IAAAikB,EAAArlB,KAEA,UAAAoB,EACA,SAIA,IAAAm7D,EAAAl3C,EAAA80C,aAAA90C,EAAA7V,IAAA6V,EAAA/V,KACA,OAAA+V,EAAAngB,QAAAs2B,MAAAxX,SACAqB,EAAA7V,IAAApO,GAAAm7D,GAEAn7D,EAAAikB,EAAA/V,KAAAitD,GAGArC,iBAAA,SAAAt3C,EAAA45C,GACA,IAAAn3C,EAAArlB,KACAy8D,EAAAp3C,EAAA+0C,cAAAx3C,GAAArT,KAAAoC,GAAA,EACA,OACA3G,EAAAuE,KAAAuC,IAAA2qD,GAAAD,EAAAn3C,EAAAsgB,QACA16B,EAAAsE,KAAAwC,IAAA0qD,GAAAD,EAAAn3C,EAAAugB,UAIAU,yBAAA,SAAA1jB,EAAAxhB,GACA,OAAApB,KAAAk6D,iBAAAt3C,EAAA5iB,KAAA8lC,8BAAA1kC,KAGAs7D,gBAAA,WACA,IAAAr3C,EAAArlB,KACAsP,EAAA+V,EAAA/V,IACAE,EAAA6V,EAAA7V,IAEA,OAAA6V,EAAAihB,yBAAA,EACAjhB,EAAA4f,YAAA,EACA31B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,IAGAqkB,KAAA,WACA,IAAAtO,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACAsqD,EAAAruB,EAAAzE,UACAmyB,EAAA1tB,EAAA3F,MAEA,GAAA2F,EAAA2D,QAAA,CACA,IAAAnc,EAAAtD,EAAAsD,IACAkN,EAAA71B,KAAAo6D,cAAA,GACArL,EAAA1hC,GAAAnoB,QAAA0nB,WAAAiiC,IAEA1tB,EAAA0D,WAAAC,SAAA3D,EAAA6D,YAAAF,UACA41B,GAAAr1C,GAGAgI,GAAAvJ,KAAAuB,EAAAmW,MAAA,SAAAl4B,EAAAsf,GAEA,GAAAA,EAAA,GAAAisC,EAAA7qC,QAAA,CACA,IAAA24C,EAAAt3C,EAAAygB,8BAAAzgB,EAAAyxC,eAAAl0C,IAOA,GAJA4sC,EAAA1qB,SAAA,IAAAliB,GACAu4C,GAAA91C,EAAAmqC,EAAAmN,EAAA/5C,GAGAisC,EAAA/pB,QAAA,CACA,IAAAotB,EAAA4G,GAAAjK,EAAAsD,UAAA/lC,GAAAxgB,OAAAkgB,kBAOA,GANAnD,EAAA2D,KAAAyiC,EAAArxC,OAEAiL,EAAA8B,OACA9B,EAAAirC,UAAAvuC,EAAAsgB,QAAAtgB,EAAAugB,SACAjd,EAAApH,OAAAsU,GAEAg5B,EAAAsK,kBAAA,CACA,IAAA/J,EAAAzmC,EAAAywB,YAAA91C,GAAA8C,MACAuiB,EAAAkO,UAAAg4B,EAAAuK,cACAzwC,EAAAkS,UACAu0B,EAAA,EAAAP,EAAAyK,kBACAqD,EAAA5N,EAAAplC,KAAA,EAAAklC,EAAAwK,iBACAjK,EAAA,EAAAP,EAAAyK,iBACAvK,EAAAplC,KAAA,EAAAklC,EAAAwK,kBAIA1wC,EAAAyzB,UAAA,SACAzzB,EAAA0zB,aAAA,SACA1zB,EAAAkO,UAAAq7B,EACAvpC,EAAA2zB,SAAAh5C,EAAA,GAAAq5D,GACAh0C,EAAAiC,kBASAgyC,GAAA3D,GACAqC,GAAAtG,UAAA4H,GAEA,IAAAC,GAAAxvC,GAAA7J,eAGAs5C,GAAAt2D,OAAAu2D,mBAAA,iBACAC,GAAAx2D,OAAAy2D,kBAAA,iBAEAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACAzzC,KAAA,EACA0zC,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACAzzC,KAAA,IACA0zC,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACAzzC,KAAA,IACA0zC,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACAzzC,KAAA,KACA0zC,MAAA,cAEAI,IAAA,CACAL,QAAA,EACAzzC,KAAA,MACA0zC,MAAA,SAEAK,KAAA,CACAN,QAAA,EACAzzC,KAAA,OACA0zC,MAAA,WAEAM,MAAA,CACAP,QAAA,EACAzzC,KAAA,OACA0zC,MAAA,SAEAO,QAAA,CACAR,QAAA,EACAzzC,KAAA,OACA0zC,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACAzzC,KAAA,SAIAm0C,GAAA95D,OAAAC,KAAAi5D,IAEA,SAAAa,GAAA72D,EAAAmI,GACA,OAAAnI,EAAAmI,EAGA,SAAA2uD,GAAA71B,GACA,IAEArkC,EAAAugB,EAAAwB,EAFAo4C,EAAA,GACAC,EAAA,GAGA,IAAAp6D,EAAA,EAAAugB,EAAA8jB,EAAAvkC,OAAiCE,EAAAugB,IAAUvgB,EAC3C+hB,EAAAsiB,EAAArkC,GACAm6D,EAAAp4C,KACAo4C,EAAAp4C,IAAA,EACAq4C,EAAAn3D,KAAA8e,IAIA,OAAAq4C,EAkBA,SAAAC,GAAAC,EAAA9uD,EAAAE,EAAA6uD,GACA,cAAAA,IAAAD,EAAAx6D,OACA,OACA,CAAI06D,KAAAhvD,EAAAw/B,IAAA,GACJ,CAAIwvB,KAAA9uD,EAAAs/B,IAAA,IAIJ,IAEAhrC,EAAAugB,EAAAgX,EAAAC,EAAAc,EAFAmiC,EAAA,GACAp2B,EAAA,CAAA74B,GAGA,IAAAxL,EAAA,EAAAugB,EAAA+5C,EAAAx6D,OAAsCE,EAAAugB,IAAUvgB,EAChDw3B,EAAA8iC,EAAAt6D,GACAw3B,EAAAhsB,GAAAgsB,EAAA9rB,GACA24B,EAAAphC,KAAAu0B,GAMA,IAFA6M,EAAAphC,KAAAyI,GAEA1L,EAAA,EAAAugB,EAAA8jB,EAAAvkC,OAAiCE,EAAAugB,IAAUvgB,EAC3Cs4B,EAAA+L,EAAArkC,EAAA,GACAu3B,EAAA8M,EAAArkC,EAAA,GACAw3B,EAAA6M,EAAArkC,QAGAgH,IAAAuwB,QAAAvwB,IAAAsxB,GAAA7sB,KAAAyM,OAAAogB,EAAAf,GAAA,KAAAC,GACAijC,EAAAx3D,KAAA,CAAeu3D,KAAAhjC,EAAAwT,IAAAhrC,GAAAugB,EAAA,KAIf,OAAAk6C,EAIA,SAAAC,GAAAD,EAAAl6D,EAAAjD,GACA,IAEAq9D,EAAAC,EAAAC,EAFAC,EAAA,EACAjuD,EAAA4tD,EAAA36D,OAAA,EAGA,MAAAg7D,GAAA,GAAAA,GAAAjuD,EAAA,CAKA,GAJA8tD,EAAAG,EAAAjuD,GAAA,EACA+tD,EAAAH,EAAAE,EAAA,SACAE,EAAAJ,EAAAE,IAEAC,EAEA,OAAWE,GAAA,KAAAjuD,GAAAguD,GACR,GAAAA,EAAAt6D,GAAAjD,EACHw9D,EAAAH,EAAA,MACG,MAAAC,EAAAr6D,GAAAjD,GAGH,OAAWw9D,GAAAF,EAAA/tD,GAAAguD,GAFXhuD,EAAA8tD,EAAA,GAOA,OAASG,GAAAD,EAAAhuD,GAAA,MAST,SAAAkuD,GAAAN,EAAAO,EAAAn6C,EAAAo6C,GACA,IAAArgC,EAAA8/B,GAAAD,EAAAO,EAAAn6C,GAGA0W,EAAAqD,EAAAkgC,GAAAlgC,EAAA/tB,GAAA+tB,EAAAkgC,GAAAL,IAAA36D,OAAA,GAAA26D,EAAA,GACAniC,EAAAsC,EAAAkgC,GAAAlgC,EAAA/tB,GAAA+tB,EAAA/tB,GAAA4tD,IAAA36D,OAAA,GAAA26D,EAAA,GAEAS,EAAA5iC,EAAA0iC,GAAAzjC,EAAAyjC,GACAztD,EAAA2tD,GAAAr6C,EAAA0W,EAAAyjC,IAAAE,EAAA,EACAviC,GAAAL,EAAA2iC,GAAA1jC,EAAA0jC,IAAA1tD,EAEA,OAAAgqB,EAAA0jC,GAAAtiC,EAGA,SAAAwiC,GAAA/gD,EAAAghD,GACA,IAAAC,EAAAjhD,EAAAkhD,SACAl6D,EAAAgZ,EAAAhZ,QAAAo5D,KACAe,EAAAn6D,EAAAm6D,OACAhV,EAAAgV,GAAAn6D,EAAAmlD,OACAjpD,EAAA89D,EAaA,MAXA,oBAAAG,IACAj+D,EAAAi+D,EAAAj+D,IAIAisB,GAAA9J,SAAAniB,KACAA,EAAA,kBAAAipD,EACA8U,EAAA/U,MAAAhpD,EAAAipD,GACA8U,EAAA/U,MAAAhpD,IAGA,OAAAA,GACAA,GAKAi+D,GAAA,oBAAAhV,IACAjpD,EAAAipD,EAAA6U,GAGA7xC,GAAA9J,SAAAniB,KACAA,EAAA+9D,EAAA/U,MAAAhpD,KAIAA,GAGA,SAAAgpD,GAAAlsC,EAAAghD,GACA,GAAA7xC,GAAAlK,cAAA+7C,GACA,YAGA,IAAAh6D,EAAAgZ,EAAAhZ,QAAAo5D,KACAl9D,EAAA69D,GAAA/gD,IAAAqgB,cAAA2gC,IACA,cAAA99D,EACAA,GAGA8D,EAAA8W,QACA5a,GAAA8c,EAAAkhD,SAAA7U,QAAAnpD,EAAA8D,EAAA8W,QAGA5a,GAOA,SAAAk+D,GAAAhwD,EAAAE,EAAAkmD,EAAA6J,GACA,IAIAz7D,EAAAugB,EAAA+wC,EAJA12B,EAAAlvB,EAAAF,EACAkwD,EAAAtC,GAAAxH,GACA+J,EAAAD,EAAA71C,KACA0zC,EAAAmC,EAAAnC,MAGA,IAAAA,EACA,OAAA9tD,KAAAymD,KAAAt3B,GAAA6gC,EAAAE,IAGA,IAAA37D,EAAA,EAAAugB,EAAAg5C,EAAAz5D,OAAiCE,EAAAugB,IAAUvgB,EAE3C,GADAsxD,EAAAiI,EAAAv5D,GACAyL,KAAAymD,KAAAt3B,GAAA+gC,EAAArK,KAAAmK,EACA,MAIA,OAAAnK,EAMA,SAAAsK,GAAAC,EAAArwD,EAAAE,EAAA+vD,GACA,IACAz7D,EAAA07D,EAAApK,EADA/wC,EAAAy5C,GAAAl6D,OAGA,IAAAE,EAAAg6D,GAAAx5D,QAAAq7D,GAAiC77D,EAAAugB,EAAA,IAAcvgB,EAI/C,GAHA07D,EAAAtC,GAAAY,GAAAh6D,IACAsxD,EAAAoK,EAAAnC,MAAAmC,EAAAnC,MAAAmC,EAAAnC,MAAAz5D,OAAA,GAAAo5D,GAEAwC,EAAApC,QAAA7tD,KAAAymD,MAAAxmD,EAAAF,IAAA8lD,EAAAoK,EAAA71C,QAAA41C,EACA,OAAAzB,GAAAh6D,GAIA,OAAAg6D,GAAAz5C,EAAA,GAMA,SAAAu7C,GAAA1hD,EAAAsd,EAAAmkC,EAAArwD,EAAAE,GACA,IACA1L,EAAA4xD,EADArxC,EAAAy5C,GAAAl6D,OAGA,IAAAE,EAAAugB,EAAA,EAAmBvgB,GAAAg6D,GAAAx5D,QAAAq7D,GAA6B77D,IAEhD,GADA4xD,EAAAoI,GAAAh6D,GACAo5D,GAAAxH,GAAA0H,QAAAl/C,EAAAkhD,SAAA9U,KAAA96C,EAAAF,EAAAomD,IAAAl6B,EAAA53B,OACA,OAAA8xD,EAIA,OAAAoI,GAAA6B,EAAA7B,GAAAx5D,QAAAq7D,GAAA,GAGA,SAAAE,GAAAnK,GACA,QAAA5xD,EAAAg6D,GAAAx5D,QAAAoxD,GAAA,EAAArxC,EAAAy5C,GAAAl6D,OAA2DE,EAAAugB,IAAUvgB,EACrE,GAAAo5D,GAAAY,GAAAh6D,IAAAs5D,OACA,OAAAU,GAAAh6D,GAWA,SAAAg8D,GAAA5hD,EAAA5O,EAAAE,EAAA+vD,GACA,IAYAjB,EAZAa,EAAAjhD,EAAAkhD,SACAl6D,EAAAgZ,EAAAhZ,QACA66D,EAAA76D,EAAAo5D,KACAvR,EAAAgT,EAAArK,MAAAgK,GAAAK,EAAAJ,QAAArwD,EAAAE,EAAA+vD,GACAvS,EAAA6S,GAAA9S,GACA0I,EAAAoH,GAAAkD,EAAAtK,SAAAsK,EAAAC,cACAC,EAAA,SAAAlT,GAAAgT,EAAAG,WACAC,EAAAj7D,EAAAs2B,MAAAwxB,MAAA/Y,QACAurB,EAAAtC,GAAAnQ,GACAqT,EAAA9wD,EACAwuB,EAAAtuB,EACAgsB,EAAA,GAgCA,IA7BAi6B,IACAA,EAAA6J,GAAAhwD,EAAAE,EAAAu9C,EAAAwS,IAIAU,IACAG,GAAAjB,EAAA5U,QAAA6V,EAAA,UAAAH,GACAniC,GAAAqhC,EAAA5U,QAAAzsB,EAAA,UAAAmiC,IAIAG,GAAAjB,EAAA5U,QAAA6V,EAAAH,EAAA,MAAAlT,GACAjvB,GAAAqhC,EAAA5U,QAAAzsB,EAAAmiC,EAAA,MAAAlT,GAGAjvB,EAAAtuB,IACAsuB,GAAAqhC,EAAA1uB,IAAA3S,EAAA,EAAAivB,IAGAuR,EAAA8B,EAEAD,GAAAnT,IAAAiT,IAAAF,EAAA/jD,QAIAsiD,GAAAa,EAAA5U,QAAA+T,EAAAtR,GACAsR,GAAAa,EAAA1uB,IAAA6tB,MAAA8B,EAAA9B,IAAAkB,EAAA71C,KAAA8rC,MAAA1I,IAGOuR,EAAAxgC,EAAawgC,GAAAa,EAAA1uB,IAAA6tB,EAAA7I,EAAA1I,GACpBvxB,EAAAz0B,MAAAu3D,GAKA,OAFA9iC,EAAAz0B,MAAAu3D,GAEA9iC,EASA,SAAA6kC,GAAA9B,EAAA/iC,EAAAlsB,EAAAE,EAAAtK,GACA,IAEAk7D,EAAAtiC,EAFAtQ,EAAA,EACA8O,EAAA,EAsBA,OAnBAp3B,EAAAu3B,QAAAjB,EAAA53B,SACAsB,EAAAo5D,KAAAhvD,MACA8wD,EAAAvB,GAAAN,EAAA,OAAA/iC,EAAA,UAEAhO,EADA,IAAAgO,EAAA53B,OACA,EAAAw8D,GAEAvB,GAAAN,EAAA,OAAA/iC,EAAA,UAAA4kC,GAAA,GAGAl7D,EAAAo5D,KAAA9uD,MACAsuB,EAAA+gC,GAAAN,EAAA,OAAA/iC,IAAA53B,OAAA,UAEA04B,EADA,IAAAd,EAAA53B,OACAk6B,GAEAA,EAAA+gC,GAAAN,EAAA,OAAA/iC,IAAA53B,OAAA,eAKA,CAAS4pB,QAAA8O,OAGT,SAAAgkC,GAAApiD,EAAA9B,EAAAmkD,GACA,IACAz8D,EAAAugB,EAAAjjB,EAAA4rD,EADAxxB,EAAA,GAGA,IAAA13B,EAAA,EAAAugB,EAAAjI,EAAAxY,OAAkCE,EAAAugB,IAAUvgB,EAC5C1C,EAAAgb,EAAAtY,GACAkpD,IAAAuT,GAAAn/D,KAAA8c,EAAAkhD,SAAA7U,QAAAnpD,EAAAm/D,GAEA/kC,EAAAz0B,KAAA,CACA3F,QACA4rD,UAIA,OAAAxxB,EAGA,IAAAglC,GAAA,CACAvhC,SAAA,SASAo/B,aAAA,SASAhkC,OAAA,OAEAomC,SAAA,GACAnC,KAAA,CACAe,QAAA,EACAhV,QAAA,EACAqL,MAAA,EACA15C,OAAA,EACA0kD,eAAA,EACAR,YAAA,EACAP,QAAA,cACAgB,eAAA,IAEAnlC,MAAA,CACAoxB,UAAA,EAUA1qC,OAAA,OAEA8qC,MAAA,CACA/Y,SAAA,KAKA2sB,GAAA3T,GAAAhoC,OAAA,CACAiJ,WAAA,WACAluB,KAAAggD,oBACAiN,GAAAnlD,UAAAomB,WAAAvS,KAAA3b,OAGA+E,OAAA,WACA,IAAAsgB,EAAArlB,KACAkF,EAAAmgB,EAAAngB,QACAo5D,EAAAp5D,EAAAo5D,OAAAp5D,EAAAo5D,KAAA,IACAa,EAAA95C,EAAA+5C,SAAA,IAAAvU,GAAAD,MAAA1lD,EAAAu7D,SAAAI,MAaA,OAVAvC,EAAAjU,QACAjoC,QAAA0+C,KAAA,0EAOAzzC,GAAAvI,QAAAw5C,EAAAqC,eAAAxB,EAAAhV,WAEA8C,GAAAnlD,UAAA/C,OAAA2D,MAAA2c,EAAA1c,YAMA41B,cAAA,SAAAkyB,GAIA,OAHAA,QAAA3lD,IAAA2lD,EAAAz/C,IACAy/C,IAAAz/C,GAEAi8C,GAAAnlD,UAAAy2B,cAAA5iB,KAAA3b,KAAAywD,IAGA3C,oBAAA,WACA,IAUAhqD,EAAAo9B,EAAA7c,EAAA8iB,EAAA1iC,EAAAs8D,EAVA17C,EAAArlB,KACA+C,EAAAsiB,EAAAtiB,MACAo8D,EAAA95C,EAAA+5C,SACAW,EAAA16C,EAAAngB,QAAAo5D,KACA5I,EAAAqK,EAAArK,MAAA,MACApmD,EAAA0tD,GACAxtD,EAAAstD,GACAsB,EAAA,GACAj7D,EAAA,GACAwB,EAAA,GAEAq8D,EAAAj+D,EAAA0B,KAAAE,QAAA,GAGA,IAAAb,EAAA,EAAAugB,EAAA28C,EAAAp9D,OAAuCE,EAAAugB,IAAUvgB,EACjDa,EAAAoC,KAAAqjD,GAAA/kC,EAAA27C,EAAAl9D,KAIA,IAAAA,EAAA,EAAAugB,GAAAthB,EAAA0B,KAAAtB,UAAA,IAAAS,OAAwDE,EAAAugB,IAAUvgB,EAClE,GAAAf,EAAAk7B,iBAAAn6B,GAIA,GAHAW,EAAA1B,EAAA0B,KAAAtB,SAAAW,GAAAW,KAGA4oB,GAAA/J,SAAA7e,EAAA,IAGA,IAFAtB,EAAAW,GAAA,GAEAo9B,EAAA,EAAAiG,EAAA1iC,EAAAb,OAAoCs9B,EAAAiG,IAAUjG,EAC9C6/B,EAAA3W,GAAA/kC,EAAA5gB,EAAAy8B,IACAk9B,EAAAr3D,KAAAg6D,GACA59D,EAAAW,GAAAo9B,GAAA6/B,MAEK,CACL,IAAA7/B,EAAA,EAAAiG,EAAAxiC,EAAAf,OAAsCs9B,EAAAiG,IAAUjG,EAChDk9B,EAAAr3D,KAAApC,EAAAu8B,IAEA/9B,EAAAW,GAAAa,EAAA+W,MAAA,QAGAvY,EAAAW,GAAA,GAIAa,EAAAf,SAEAe,EAAAq5D,GAAAr5D,GAAAmkC,KAAAi1B,IACAzuD,EAAAC,KAAAD,MAAA3K,EAAA,IACA6K,EAAAD,KAAAC,MAAA7K,IAAAf,OAAA,KAGAw6D,EAAAx6D,SACAw6D,EAAAJ,GAAAI,GAAAt1B,KAAAi1B,IACAzuD,EAAAC,KAAAD,MAAA8uD,EAAA,IACA5uD,EAAAD,KAAAC,MAAA4uD,IAAAx6D,OAAA,KAGA0L,EAAA86C,GAAA/kC,EAAA06C,EAAAzwD,QACAE,EAAA46C,GAAA/kC,EAAA06C,EAAAvwD,QAGAF,MAAA0tD,IAAAmC,EAAA5U,QAAAx6B,KAAAC,MAAA0lC,GAAApmD,EACAE,MAAAstD,IAAAqC,EAAA3U,MAAAz6B,KAAAC,MAAA0lC,GAAA,EAAAlmD,EAGA6V,EAAA/V,IAAAC,KAAAD,MAAAE,GACA6V,EAAA7V,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAGA6V,EAAA47C,YAAA57C,EAAAkW,eACAlW,EAAA67C,OAAA,GACA77C,EAAA87C,YAAA,CACA18D,KAAA25D,EACAj7D,WACAwB,WAIAspD,WAAA,WACA,IAOAnqD,EAAAugB,EAAA08C,EAPA17C,EAAArlB,KACAsP,EAAA+V,EAAA/V,IACAE,EAAA6V,EAAA7V,IACAtK,EAAAmgB,EAAAngB,QACA66D,EAAA76D,EAAAo5D,KACAF,EAAA,GACA5iC,EAAA,GAGA,OAAAt2B,EAAAs2B,MAAAtZ,QACA,WACAk8C,EAAA/4C,EAAA87C,YAAA18D,KACA,MACA,aACA25D,EAAA/4C,EAAA87C,YAAAx8D,OACA,MACA,WACA,QACAy5D,EAAA0B,GAAAz6C,EAAA/V,EAAAE,EAAA6V,EAAA+7C,iBAAA9xD,GAAApK,GAaA,IAVA,UAAAA,EAAAm1B,QAAA+jC,EAAAx6D,SACA0L,EAAA8uD,EAAA,GACA5uD,EAAA4uD,IAAAx6D,OAAA,IAIA0L,EAAA86C,GAAA/kC,EAAA06C,EAAAzwD,QACAE,EAAA46C,GAAA/kC,EAAA06C,EAAAvwD,QAGA1L,EAAA,EAAAugB,EAAA+5C,EAAAx6D,OAAuCE,EAAAugB,IAAUvgB,EACjDi9D,EAAA3C,EAAAt6D,GACAi9D,GAAAzxD,GAAAyxD,GAAAvxD,GACAgsB,EAAAz0B,KAAAg6D,GAiBA,OAbA17C,EAAA/V,MACA+V,EAAA7V,MAGA6V,EAAAg8C,MAAAtB,EAAArK,MAAAkK,GAAAv6C,EAAAmW,EAAAukC,EAAAJ,QAAAt6C,EAAA/V,IAAA+V,EAAA7V,KACA6V,EAAAi8C,WAAAzB,GAAAx6C,EAAAg8C,OACAh8C,EAAA67C,OAAA/C,GAAA94C,EAAA87C,YAAA18D,KAAA6K,EAAAE,EAAAtK,EAAAm5D,cACAh5C,EAAAk8C,SAAAlB,GAAAh7C,EAAA67C,OAAA1lC,EAAAlsB,EAAAE,EAAAtK,GAEAA,EAAAs2B,MAAAxX,SACAwX,EAAAxX,UAGAs8C,GAAAj7C,EAAAmW,EAAAnW,EAAAi8C,aAGAtqB,iBAAA,SAAAp0B,EAAA2O,GACA,IAAAlM,EAAArlB,KACAm/D,EAAA95C,EAAA+5C,SACA36D,EAAA4gB,EAAAtiB,MAAA0B,KACAs7D,EAAA16C,EAAAngB,QAAAo5D,KACAh7D,EAAAmB,EAAAE,QAAAie,EAAAne,EAAAE,OAAAf,OAAAa,EAAAE,OAAAie,GAAA,GACAxhB,EAAAqD,EAAAtB,SAAAouB,GAAA9sB,KAAAme,GAKA,OAHAyK,GAAA/J,SAAAliB,KACAkC,EAAA+hB,EAAAkZ,cAAAn9B,IAEA2+D,EAAAyB,cACArC,EAAA9U,OAAA4U,GAAA55C,EAAA/hB,GAAAy8D,EAAAyB,eAEA,kBAAAl+D,EACAA,EAEA67D,EAAA9U,OAAA4U,GAAA55C,EAAA/hB,GAAAy8D,EAAAY,eAAAc,WAOAC,mBAAA,SAAApD,EAAA17C,EAAA4Y,EAAA6uB,GACA,IAAAhlC,EAAArlB,KACAm/D,EAAA95C,EAAA+5C,SACAl6D,EAAAmgB,EAAAngB,QACAilD,EAAAjlD,EAAAo5D,KAAAqC,eACAgB,EAAAxX,EAAA9kC,EAAAg8C,OACAd,EAAAl7C,EAAAi8C,WACAM,EAAAzX,EAAAoW,GACAsB,GAAA1C,EAAA5U,QAAA+T,EAAAiC,GACAuB,EAAA58D,EAAAs2B,MAAAwxB,MACAA,EAAA8U,EAAA7tB,SAAAssB,GAAAqB,GAAAtD,IAAAuD,EACAv+D,EAAA67D,EAAA9U,OAAAiU,EAAAjU,IAAA2C,EAAA4U,EAAAD,IACA9S,EAAA7B,EAAA8U,EAAA58D,EAAAs2B,MAAAuxB,MACAgV,EAAAlF,GAAAhO,EAAAlrC,SAAAkrC,EAAAC,cAEA,OAAAiT,IAAAz+D,EAAAsf,EAAA4Y,GAAAl4B,GAGA8qD,qBAAA,SAAA5yB,GACA,IACA13B,EAAAugB,EADA1f,EAAA,GAGA,IAAAb,EAAA,EAAAugB,EAAAmX,EAAA53B,OAAkCE,EAAAugB,IAAUvgB,EAC5Ca,EAAAoC,KAAA/G,KAAA0hE,mBAAAlmC,EAAA13B,GAAA1C,MAAA0C,EAAA03B,IAGA,OAAA72B,GAMAq9D,kBAAA,SAAA1D,GACA,IAAAj5C,EAAArlB,KACAiiE,EAAA58C,EAAAngB,QAAAs2B,MAAAxX,QACA2F,EAAAtE,EAAA47C,YAAA57C,EAAAjf,MAAAif,EAAAhf,OACAmnB,EAAAnI,EAAA47C,YAAAgB,EAAA58C,EAAA4D,MAAA5D,EAAA0D,KAAAk5C,EAAA58C,EAAA6D,OAAA7D,EAAA2D,IACA8lB,EAAA+vB,GAAAx5C,EAAA67C,OAAA,OAAA5C,EAAA,OACA7hC,EAAA9S,GAAAtE,EAAAk8C,SAAA/zC,MAAAshB,IAAAzpB,EAAAk8C,SAAA/zC,MAAA,EAAAnI,EAAAk8C,SAAAjlC,KAEA,OAAA2lC,EAAAz0C,EAAAiP,EAAAjP,EAAAiP,GAGA2B,iBAAA,SAAAh9B,EAAAwhB,EAAA2O,GACA,IAAAlM,EAAArlB,KACAs+D,EAAA,KAUA,QARAxzD,IAAA8X,QAAA9X,IAAAymB,IACA+sC,EAAAj5C,EAAA87C,YAAAh+D,SAAAouB,GAAA3O,IAGA,OAAA07C,IACAA,EAAAlU,GAAA/kC,EAAAjkB,IAGA,OAAAk9D,EACA,OAAAj5C,EAAA28C,kBAAA1D,IAIA5iC,gBAAA,SAAA9Y,GACA,IAAA4Y,EAAAx7B,KAAAy7B,WACA,OAAA7Y,GAAA,GAAAA,EAAA4Y,EAAA53B,OACA5D,KAAAgiE,kBAAAxmC,EAAA5Y,GAAAxhB,OACA,MAGAsvD,iBAAA,SAAAnL,GACA,IAAAlgC,EAAArlB,KACA2pB,EAAAtE,EAAA47C,YAAA57C,EAAAjf,MAAAif,EAAAhf,OACAmnB,EAAAnI,EAAA47C,YAAA57C,EAAA0D,KAAA1D,EAAA2D,IACA8lB,GAAAnlB,GAAA47B,EAAA/3B,GAAA7D,EAAA,IAAAtE,EAAAk8C,SAAA/zC,MAAA,EAAAnI,EAAAk8C,SAAA/zC,OAAAnI,EAAAk8C,SAAAjlC,IACAgiC,EAAAO,GAAAx5C,EAAA67C,OAAA,MAAApyB,EAAA,QAGA,OAAAzpB,EAAA+5C,SAAA3U,QAAA6T,IAOA4D,cAAA,SAAA5+D,GACA,IAAA+hB,EAAArlB,KACAmiE,EAAA98C,EAAAngB,QAAAs2B,MACA4mC,EAAA/8C,EAAAsD,IAAAywB,YAAA91C,GAAA8C,MACAuvB,EAAAtI,GAAAs3B,UAAAwd,EAAAzV,aACAuC,EAAA1/C,KAAAuC,IAAA6jB,GACAu5B,EAAA3/C,KAAAwC,IAAA4jB,GACA0sC,EAAAxF,GAAAsF,EAAAr1C,SAAAV,GAAAxgB,OAAAogB,iBAEA,OAAAo2C,EAAAnT,EAAAoT,EAAAnT,GAMAkS,iBAAA,SAAAkB,GACA,IAAAj9C,EAAArlB,KAGAqqD,EAAAhlC,EAAAngB,QAAAo5D,KAAAqC,eAAAxD,YACAoF,EAAAl9C,EAAAq8C,mBAAAY,EAAA,KAAAjY,GACA+X,EAAA/8C,EAAA68C,cAAAK,GACA5R,EAAAtrC,EAAAkW,eAAAlW,EAAAjf,MAAAif,EAAAhf,OACAk5D,EAAAhwD,KAAAqB,MAAA+/C,EAAAyR,GAEA,OAAA7C,EAAA,EAAAA,EAAA,KAKAiD,GAAAhC,GACAI,GAAA5L,UAAAwN,GAEA,IAAAvwC,GAAA,CACAwwC,SAAArO,GACAluC,OAAA8wC,GACAzL,YAAAkN,GACAiK,aAAApH,GACAgD,KAAAsC,IAGA+B,GAAA,CACAlB,SAAA,yBACAtE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGAhT,GAAAD,MAAAF,SAAA,oBAAAz+C,EAAA,CACA22D,IAAA,SAEAzY,QAAA,WACA,OAAAwY,IAGAvY,MAAA,SAAAhpD,EAAAipD,GAMA,MALA,kBAAAjpD,GAAA,kBAAAipD,EACAjpD,EAAA6K,EAAA7K,EAAAipD,GACGjpD,aAAA6K,IACH7K,EAAA6K,EAAA7K,IAEAA,EAAA6d,UAAA7d,EAAAyhE,UAAA,MAGAxY,OAAA,SAAAiU,EAAAjU,GACA,OAAAp+C,EAAAqyD,GAAAjU,WAGA5Z,IAAA,SAAA6tB,EAAAwE,EAAApN,GACA,OAAAzpD,EAAAqyD,GAAA7tB,IAAAqyB,EAAApN,GAAAmN,WAGAvY,KAAA,SAAA96C,EAAAF,EAAAomD,GACA,OAAAzpD,EAAAqjB,SAAArjB,EAAAuD,GAAA86C,KAAAr+C,EAAAqD,KAAAyzD,GAAArN,IAGAnL,QAAA,SAAA+T,EAAA5I,EAAAuK,GAEA,OADA3B,EAAAryD,EAAAqyD,GACA,YAAA5I,EACA4I,EAAA4B,WAAAD,GAAA4C,UAEAvE,EAAA/T,QAAAmL,GAAAmN,WAGArY,MAAA,SAAA8T,EAAA5I,GACA,OAAAzpD,EAAAqyD,GAAA9T,MAAAkL,GAAAmN,WAWApY,QAAA,SAAA6T,GACA,OAAAryD,EAAAqyD,KAEC,IAEDlyC,GAAAT,KAAA,UACAllB,QAAA,CACAu8D,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACA7/D,QAAA,SAAA6e,GACA,IAAAU,EAAAV,EAAAgI,KACAnnB,EAAAmf,EAAAnf,MACA8uB,EAAA9uB,EAAAsvB,eAAAzP,GACAugD,EAAAtxC,GAAA9uB,EAAAk7B,iBAAArb,GACAgV,EAAAurC,GAAAtxC,EAAAxuB,QAAAw0B,WAAA,GACAj0B,EAAAg0B,EAAAh0B,QAAA,EAEA,OAAAA,EAAA,SAAAymB,EAAAvmB,GACA,OAAAA,EAAAF,GAAAg0B,EAAA9zB,GAAAuqB,OAAA,MADA,MAKA+0C,SAAA,SAAAlhD,GACA,IAAAkhD,EAAAlhD,EAAAkhD,SACAp4D,EAAAo4D,IAAAp4D,EAAA,KACAC,EAAAm4D,IAAAn4D,EAAA,KAEA,gBAAAof,GACA,OACArf,EAAA,OAAAA,EAAAqf,EAAArf,IACAC,EAAA,OAAAA,EAAAof,EAAApf,QAOA,SAAAo4D,GAAAl0B,EAAAvsB,EAAAnY,GACA,IAEAL,EAFAsjB,EAAAyhB,EAAA7gB,QAAA,GACApE,EAAAwD,EAAAxD,KAOA,QAJApf,IAAAof,IACAA,IAAAwD,EAAAzkB,kBAGA,IAAAihB,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAIA,GADA9f,EAAA6T,WAAAiM,EAAA,IACA3G,SAAAnZ,IAAAmF,KAAAqB,MAAAxG,OAKA,MAJA,MAAA8f,EAAA,UAAAA,EAAA,KACA9f,EAAAwY,EAAAxY,KAGAA,IAAAwY,GAAAxY,EAAA,GAAAA,GAAAK,IAIAL,EAGA,OAAA8f,GAEA,aACA,cACA,UACA,YACA,WACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,UAIA,SAAAo5C,GAAAphD,GACA,IAIA8X,EAJAtM,EAAAxL,EAAAitB,GAAA7gB,QAAA,GACApQ,EAAAgE,EAAAitB,GAAA5L,QAAA,GACArZ,EAAAhI,EAAAgI,KACA9f,EAAA,KAGA,GAAAmZ,SAAA2G,GACA,YAmBA,GAZA,UAAAA,EACA9f,OAAAU,IAAA4iB,EAAA61C,YAAArlD,EAAAgL,OAAAwE,EAAA61C,YACE,QAAAr5C,EACF9f,OAAAU,IAAA4iB,EAAA81C,SAAAtlD,EAAA8K,IAAA0E,EAAA81C,cACE14D,IAAA4iB,EAAA+1C,UACFr5D,EAAAsjB,EAAA+1C,UACEvlD,EAAAw+C,gBACFtyD,EAAA8T,EAAAw+C,kBACEx+C,EAAAqf,eACFnzB,EAAA8T,EAAAqf,qBAGAzyB,IAAAV,GAAA,OAAAA,EAAA,CACA,QAAAU,IAAAV,EAAAY,QAAAF,IAAAV,EAAAa,EACA,OAAAb,EAGA,GAAAijB,GAAA9J,SAAAnZ,GAEA,OADA4vB,EAAA9b,EAAAqd,eACA,CACAvwB,EAAAgvB,EAAA5vB,EAAA,KACAa,EAAA+uB,EAAA,KAAA5vB,GAKA,YAGA,SAAAs5D,GAAA3+C,EAAAnC,EAAAqgD,GACA,IAGA74D,EAHA8X,EAAA6C,EAAAnC,GACAsH,EAAAhI,EAAAgI,KACAy5C,EAAA,CAAA/gD,GAGA,IAAAqgD,EACA,OAAA/4C,EAGA,WAAAA,IAAA,IAAAy5C,EAAAr/D,QAAA4lB,GAAA,CACA,IAAA3G,SAAA2G,GACA,OAAAA,EAIA,GADA9f,EAAA2a,EAAAmF,IACA9f,EACA,SAGA,GAAAA,EAAA+4D,QACA,OAAAj5C,EAGAy5C,EAAA58D,KAAAmjB,GACAA,EAAA9f,EAAA8f,KAGA,SAGA,SAAA05C,GAAA1hD,GACA,IAAAgI,EAAAhI,EAAAgI,KACA3kB,EAAA,UAEA,WAAA2kB,EACA,MAGA3G,SAAA2G,KACA3kB,EAAA,YAGA29D,GAAA39D,GAAA2c,IAGA,SAAA2hD,GAAAx5C,GACA,OAAAA,MAAAgO,KAGA,SAAAyrC,GAAAn7C,EAAAo7C,EAAAC,EAAAC,EAAAC,GACA,IAAApgE,EAEA,GAAAmgE,GAAAC,EAAA,CAMA,IADAv7C,EAAAQ,OAAA46C,EAAA,GAAA/4D,EAAA+4D,EAAA,GAAA94D,GACAnH,EAAA,EAAYA,EAAAmgE,IAAUngE,EACtBupB,GAAAjmB,OAAA4iB,OAAArB,EAAAo7C,EAAAjgE,EAAA,GAAAigE,EAAAjgE,IAOA,IAHA6kB,EAAAqB,OAAAg6C,EAAAE,EAAA,GAAAl5D,EAAAg5D,EAAAE,EAAA,GAAAj5D,GAGAnH,EAAAogE,EAAA,EAAmBpgE,EAAA,IAAOA,EAC1BupB,GAAAjmB,OAAA4iB,OAAArB,EAAAq7C,EAAAlgE,GAAAkgE,EAAAlgE,EAAA,QAIA,SAAAqgE,GAAAx7C,EAAAiP,EAAAwsC,EAAA32C,EAAA/sB,EAAAsmD,GACA,IAMAljD,EAAAugB,EAAAzB,EAAAyhD,EAAAC,EAAAC,EAAAC,EANA/5D,EAAAmtB,EAAAh0B,OACAo7D,EAAAvxC,EAAAkK,SACAosC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAKA,IAFAv7C,EAAAoB,YAEAjmB,EAAA,EAAAugB,EAAA5Z,IAAAu8C,EAAqCljD,EAAAugB,IAAUvgB,EAC/C8e,EAAA9e,EAAA2G,EACA45D,EAAAzsC,EAAAhV,GAAAyL,MACAi2C,EAAAF,EAAAC,EAAAzhD,EAAA6K,GACA82C,EAAAV,GAAAQ,GACAG,EAAAX,GAAAS,GAEAC,GAAAC,GACAP,EAAAF,EAAAh9D,KAAAs9D,GACAH,EAAAF,EAAAj9D,KAAAu9D,IACGL,GAAAC,IACHlF,GAMAuF,GACAR,EAAAh9D,KAAAs9D,GAEAG,GACAR,EAAAj9D,KAAAu9D,KATAR,GAAAn7C,EAAAo7C,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAYAF,GAAAn7C,EAAAo7C,EAAAC,EAAAC,EAAAC,GAEAv7C,EAAAU,YACAV,EAAAkO,UAAAn2B,EACAioB,EAAAuB,OAGA,IAAAu6C,GAAA,CACAt+D,GAAA,SAEAu+D,oBAAA,SAAA3hE,EAAAmC,GACA,IAGA2sB,EAAA/tB,EAAAqrC,EAAAjtB,EAHAzX,GAAA1H,EAAA0B,KAAAtB,UAAA,IAAAS,OACAq/D,EAAA/9D,EAAA+9D,UACAl+C,EAAA,GAGA,IAAAjhB,EAAA,EAAaA,EAAA2G,IAAW3G,EACxB+tB,EAAA9uB,EAAAsvB,eAAAvuB,GACAqrC,EAAAtd,EAAAxuB,QACA6e,EAAA,KAEAitB,KAAA7gB,QAAA6gB,aAAAzb,GAAAqH,OACA7Y,EAAA,CACAihD,QAAApgE,EAAAk7B,iBAAAn6B,GACAomB,KAAAm5C,GAAAl0B,EAAArrC,EAAA2G,GACA1H,QACAosC,OAIAtd,EAAA8yC,QAAAziD,EACA6C,EAAAhe,KAAAmb,GAGA,IAAApe,EAAA,EAAaA,EAAA2G,IAAW3G,EACxBoe,EAAA6C,EAAAjhB,GACAoe,IAIAA,EAAAgI,KAAAw5C,GAAA3+C,EAAAjhB,EAAAm/D,GACA/gD,EAAAkhD,SAAAE,GAAAphD,GACAA,EAAAkiD,OAAAR,GAAA1hD,KAIA0iD,kBAAA,SAAA7hE,EAAAoN,GACA,IAAA0hB,EAAA1hB,EAAA0hB,KAAA8yC,QACA,GAAA9yC,EAAA,CAIA,IAAAlJ,EAAA5lB,EAAA4lB,IACAwmB,EAAAtd,EAAAsd,GACA1hB,EAAA0hB,EAAA9gB,MACAuJ,EAAAuX,EAAAtX,WAAA,GACAusC,EAAAvyC,EAAAuyC,OACA1jE,EAAA+sB,EAAAxkB,iBAAAmjB,GAAAxgB,OAAAigB,aAEAu4C,GAAA1jE,GAAAk3B,EAAAh0B,SACAypB,GAAAjmB,OAAAojB,SAAA7B,EAAA5lB,EAAAm2B,WACAirC,GAAAx7C,EAAAiP,EAAAwsC,EAAA32C,EAAA/sB,EAAAyuC,EAAAnX,OACA3K,GAAAjmB,OAAAujB,WAAAhC,OAKAk8C,GAAAx3C,GAAApK,KACA6hD,GAAAz3C,GAAA7J,eAoFA,SAAAuhD,GAAAC,EAAAl4C,GACA,OAAAk4C,EAAAC,eAAAD,EAAAE,SAAAp4C,EACAA,EACAk4C,EAAAE,SArFA94C,GAAAT,KAAA,UACAyU,OAAA,CACA0E,SAAA,EACA7F,SAAA,MACAuK,WAAA,EACAxlB,SAAA,EACArC,OAAA,IAGA8e,QAAA,SAAAz0B,EAAA00B,GACA,IAAA9d,EAAA8d,EAAAnP,aACA4zC,EAAAnlE,KAAA+C,MACA8uB,EAAAszC,EAAA9yC,eAAAzP,GAGAiP,EAAA1D,OAAA,OAAA0D,EAAA1D,QAAAg3C,EAAA1gE,KAAAtB,SAAAyf,GAAAuL,OAAA,KAGAg3C,EAAApgE,UAGAm5C,QAAA,KACAknB,QAAA,KAEAzgE,OAAA,CACAugE,SAAA,GACAjsC,QAAA,GAYAoH,eAAA,SAAAt9B,GACA,IAAA0B,EAAA1B,EAAA0B,KACA,OAAA4oB,GAAAjK,QAAA3e,EAAAtB,UAAAsB,EAAAtB,SAAAC,IAAA,SAAAC,EAAAS,GACA,OACAq8B,KAAA98B,EAAAC,MACAuzB,UAAAxJ,GAAAjK,QAAA/f,EAAA4F,iBAAA5F,EAAA4F,gBAAA,GAAA5F,EAAA4F,gBACAklB,QAAAprB,EAAAk7B,iBAAAn6B,GACAm0B,QAAA50B,EAAA8zB,eACAkuC,SAAAhiE,EAAA+zB,WACAe,eAAA90B,EAAAg0B,iBACAN,SAAA1zB,EAAAi0B,gBACAR,UAAAzzB,EAAA4wB,YACA+C,YAAA3zB,EAAA2F,YACA6vB,WAAAx1B,EAAAw1B,WAGAtH,aAAAztB,IAEK9D,MAAA,MAKLkgC,eAAA,SAAAn9B,GACA,IAAAo9B,EAAA,GACAA,EAAAp5B,KAAA,cAAAhE,EAAAoD,GAAA,aACA,QAAArC,EAAA,EAAiBA,EAAAf,EAAA0B,KAAAtB,SAAAS,OAAgCE,IACjDq8B,EAAAp5B,KAAA,qCAAAhE,EAAA0B,KAAAtB,SAAAW,GAAAmF,gBAAA,aACAlG,EAAA0B,KAAAtB,SAAAW,GAAAR,OACA68B,EAAAp5B,KAAAhE,EAAA0B,KAAAtB,SAAAW,GAAAR,OAEA68B,EAAAp5B,KAAA,SAGA,OADAo5B,EAAAp5B,KAAA,SACAo5B,EAAAp2B,KAAA,OAmBA,IAAAu7D,GAAA12C,GAAA3J,OAAA,CAEAiJ,WAAA,SAAAuf,GACApgB,GAAApI,OAAAjlB,KAAAytC,GAGAztC,KAAAulE,eAAA,GAKAvlE,KAAAwlE,aAAA,KAGAxlE,KAAAylE,cAAA,GAOAtY,aAAA0X,GACA9/D,OAAA,SAAAqoD,EAAAC,EAAAC,GACA,IAAAjoC,EAAArlB,KA0BA,OAvBAqlB,EAAA8nC,eAGA9nC,EAAA+nC,WACA/nC,EAAAgoC,YACAhoC,EAAAioC,UAGAjoC,EAAAqoC,sBACAroC,EAAAsoC,gBACAtoC,EAAAuoC,qBAEAvoC,EAAAqgD,oBACArgD,EAAAsgD,cACAtgD,EAAAugD,mBAGAvgD,EAAAopC,YACAppC,EAAAqpC,MACArpC,EAAAspC,WAEAtpC,EAAAupC,cAEAvpC,EAAAic,SAEAstB,YAAAiW,GAIAnX,oBAAAmX,GACAlX,cAAA,WACA,IAAAtoC,EAAArlB,KAEAqlB,EAAAkW,gBAEAlW,EAAAjf,MAAAif,EAAA+nC,SACA/nC,EAAA0D,KAAA,EACA1D,EAAA4D,MAAA5D,EAAAjf,QAEAif,EAAAhf,OAAAgf,EAAAgoC,UAGAhoC,EAAA2D,IAAA,EACA3D,EAAA6D,OAAA7D,EAAAhf,QAIAgf,EAAA4iC,YAAA,EACA5iC,EAAA6iC,WAAA,EACA7iC,EAAA8iC,aAAA,EACA9iC,EAAA+iC,cAAA,EAGA/iC,EAAAic,QAAA,CACAl7B,MAAA,EACAC,OAAA,IAGAunD,mBAAAiX,GAIAa,kBAAAb,GACAc,YAAA,WACA,IAAAtgD,EAAArlB,KACAglE,EAAA3/C,EAAAngB,QAAAP,QAAA,GACAkhE,EAAAx4C,GAAA1J,SAAAqhD,EAAA3kC,eAAA,CAAAhb,EAAAtiB,OAAAsiB,IAAA,GAEA2/C,EAAA5gE,SACAyhE,IAAAzhE,OAAA,SAAAyhB,GACA,OAAAm/C,EAAA5gE,OAAAyhB,EAAAR,EAAAtiB,MAAA0B,SAIA4gB,EAAAngB,QAAA8e,SACA6hD,EAAA7hD,UAGAqB,EAAAwgD,eAEAD,iBAAAf,GAIApW,UAAAoW,GACAnW,IAAA,WACA,IAAArpC,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACA8/D,EAAA7jC,EAAAx8B,OACAmgC,EAAA3D,EAAA2D,QAEAnc,EAAAtD,EAAAsD,IAEAm9C,EAAAz4C,GAAAnoB,QAAA0nB,WAAAo4C,GACAl4C,EAAAg5C,EAAAn8C,KAGAo8C,EAAA1gD,EAAAkgD,eAAA,GAEAjkC,EAAAjc,EAAAic,QACA/F,EAAAlW,EAAAkW,eAWA,GATAA,GACA+F,EAAAl7B,MAAAif,EAAA+nC,SACA9rB,EAAAj7B,OAAAy+B,EAAA,OAEAxD,EAAAl7B,MAAA0+B,EAAA,KACAxD,EAAAj7B,OAAAgf,EAAAgoC,WAIAvoB,EAGA,GAFAnc,EAAA2D,KAAAw5C,EAAApoD,OAEA6d,EAAA,CAIA,IAAAyqC,EAAA3gD,EAAA2gD,WAAA,IACAC,EAAA,EAEAt9C,EAAAyzB,UAAA,OACAzzB,EAAA0zB,aAAA,MAEAhvB,GAAAvJ,KAAAuB,EAAAwgD,YAAA,SAAAnlC,EAAA58B,GACA,IAAAohE,EAAAH,GAAAC,EAAAl4C,GACA1mB,EAAA8+D,EAAAp4C,EAAA,EAAAnE,EAAAywB,YAAA1Y,EAAAP,MAAA/5B,OAEA,IAAAtC,GAAAkiE,IAAApiE,OAAA,GAAAwC,EAAA4+D,EAAA/rC,QAAAqI,EAAAl7B,SACA6/D,GAAAn5C,EAAAk4C,EAAA/rC,QACA+sC,IAAApiE,QAAAE,EAAA,QAAAkhE,EAAA/rC,SAIA8sC,EAAAjiE,GAAA,CACAilB,KAAA,EACAC,IAAA,EACA5iB,QACAC,OAAAymB,GAGAk5C,IAAApiE,OAAA,IAAAwC,EAAA4+D,EAAA/rC,UAGAqI,EAAAj7B,QAAA4/D,MAEI,CACJ,IAAAC,EAAAlB,EAAA/rC,QACAktC,EAAA9gD,EAAA8gD,aAAA,GACAC,EAAApB,EAAA/rC,QACAotC,EAAA,EACAC,EAAA,EACAC,EAAAz5C,EAAAo5C,EAEA74C,GAAAvJ,KAAAuB,EAAAwgD,YAAA,SAAAnlC,EAAA58B,GACA,IAAAohE,EAAAH,GAAAC,EAAAl4C,GACA05C,EAAAtB,EAAAp4C,EAAA,EAAAnE,EAAAywB,YAAA1Y,EAAAP,MAAA/5B,MAGAtC,EAAA,GAAAwiE,EAAAC,EAAAjlC,EAAAj7B,OAAA6/D,IACAE,GAAAC,EAAArB,EAAA/rC,QACAktC,EAAAp/D,KAAAs/D,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAA92D,KAAAC,IAAA62D,EAAAG,GACAF,GAAAC,EAGAR,EAAAjiE,GAAA,CACAilB,KAAA,EACAC,IAAA,EACA5iB,MAAAogE,EACAngE,OAAAymB,KAIAs5C,GAAAC,EACAF,EAAAp/D,KAAAs/D,GACA/kC,EAAAl7B,OAAAggE,EAIA/gD,EAAAjf,MAAAk7B,EAAAl7B,MACAif,EAAAhf,OAAAi7B,EAAAj7B,QAEAsoD,SAAAkW,GAGAtpC,aAAA,WACA,cAAAv7B,KAAAkF,QAAA+5B,UAAA,WAAAj/B,KAAAkF,QAAA+5B,UAIAtL,KAAA,WACA,IAAAtO,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACA8/D,EAAA7jC,EAAAx8B,OACAkoB,EAAAT,GAAAxgB,OACAigB,EAAAgB,EAAAhB,aACA46C,EAAA55C,EAAA6G,SAAAwD,KACAwvC,EAAArhD,EAAAjf,MACA4/D,EAAA3gD,EAAA2gD,WAEA,GAAA7kC,EAAA2D,QAAA,CACA,IAIA6hC,EAJAh+C,EAAAtD,EAAAsD,IACAwpC,EAAA2S,GAAAE,EAAA7S,UAAAtlC,EAAAf,kBACAg6C,EAAAz4C,GAAAnoB,QAAA0nB,WAAAo4C,GACAl4C,EAAAg5C,EAAAn8C,KAIAhB,EAAAyzB,UAAA,OACAzzB,EAAA0zB,aAAA,SACA1zB,EAAAmO,UAAA,GACAnO,EAAAqO,YAAAm7B,EACAxpC,EAAAkO,UAAAs7B,EACAxpC,EAAA2D,KAAAw5C,EAAApoD,OAEA,IAAAwnD,EAAAH,GAAAC,EAAAl4C,GACAi5C,EAAA1gD,EAAAkgD,eAGAqB,EAAA,SAAA57D,EAAAC,EAAAy1B,GACA,KAAAtiB,MAAA8mD,OAAA,IAKAv8C,EAAA8B,OAEA,IAAAqM,EAAAguC,GAAApkC,EAAA5J,UAAA2vC,EAAAxyC,aAaA,GAZAtL,EAAAkO,UAAAiuC,GAAApkC,EAAA7J,UAAAhL,GACAlD,EAAAsP,QAAA6sC,GAAApkC,EAAAzI,QAAAwuC,EAAAtvC,gBACAxO,EAAAwP,eAAA2sC,GAAApkC,EAAAvI,eAAAsuC,EAAApvC,kBACA1O,EAAAoO,SAAA+tC,GAAApkC,EAAA3J,SAAA0vC,EAAAnvC,iBACA3O,EAAAmO,YACAnO,EAAAqO,YAAA8tC,GAAApkC,EAAA1J,YAAAnL,GAEAlD,EAAAuP,aAEAvP,EAAAuP,YAAA4sC,GAAApkC,EAAA2kC,SAAAoB,EAAArvC,aAGA+J,EAAAx8B,QAAAw8B,EAAAx8B,OAAAsgE,cAAA,CAGA,IAAAn8C,EAAAo8C,EAAA31D,KAAAs3D,MAAA,EACArkC,EAAAx3B,EAAAk6D,EAAA,EACAziC,EAAAx3B,EAAA6hB,EAAA,EAGAO,GAAAjmB,OAAAmiB,UAAAZ,EAAA+X,EAAA7H,WAAA/P,EAAA0Z,EAAAC,QAGA,IAAA3L,GACAnO,EAAAk0B,WAAA7xC,EAAAC,EAAAi6D,EAAAp4C,GAEAnE,EAAAkS,SAAA7vB,EAAAC,EAAAi6D,EAAAp4C,GAGAnE,EAAAiC,YAEA0xB,EAAA,SAAAtxC,EAAAC,EAAAy1B,EAAAipB,GACA,IAAAmd,EAAAh6C,EAAA,EACAi6C,EAAA7B,EAAA4B,EAAA97D,EACAg8D,EAAA/7D,EAAA67D,EAEAn+C,EAAA2zB,SAAA5b,EAAAP,KAAA4mC,EAAAC,GAEAtmC,EAAAvS,SAEAxF,EAAAoB,YACApB,EAAAmO,UAAA,EACAnO,EAAAQ,OAAA49C,EAAAC,GACAr+C,EAAAqB,OAAA+8C,EAAApd,EAAAqd,GACAr+C,EAAAwB,WAKAoR,EAAAlW,EAAAkW,eAEAorC,EADAprC,EACA,CACAvwB,EAAAqa,EAAA0D,MAAA29C,EAAAV,EAAA,MAAAhB,EAAA/rC,QACAhuB,EAAAoa,EAAA2D,IAAAg8C,EAAA/rC,QACA/B,KAAA,GAGA,CACAlsB,EAAAqa,EAAA0D,KAAAi8C,EAAA/rC,QACAhuB,EAAAoa,EAAA2D,IAAAg8C,EAAA/rC,QACA/B,KAAA,GAIA,IAAAqvC,EAAAz5C,EAAAk4C,EAAA/rC,QACA5L,GAAAvJ,KAAAuB,EAAAwgD,YAAA,SAAAnlC,EAAA58B,GACA,IAAA6lD,EAAAhhC,EAAAywB,YAAA1Y,EAAAP,MAAA/5B,MACAA,EAAA8+D,EAAAp4C,EAAA,EAAA68B,EACA3+C,EAAA27D,EAAA37D,EACAC,EAAA07D,EAAA17D,EAKAswB,EACAz3B,EAAA,GAAAkH,EAAA5E,EAAA4+D,EAAA/rC,QAAA5T,EAAA0D,KAAA1D,EAAAic,QAAAl7B,QACA6E,EAAA07D,EAAA17D,GAAAs7D,EACAI,EAAAzvC,OACAlsB,EAAA27D,EAAA37D,EAAAqa,EAAA0D,MAAA29C,EAAAV,EAAAW,EAAAzvC,OAAA,EAAA8tC,EAAA/rC,SAEKn1B,EAAA,GAAAmH,EAAAs7D,EAAAlhD,EAAA2D,IAAA3D,EAAAic,QAAAj7B,SACL2E,EAAA27D,EAAA37D,IAAAqa,EAAA8gD,aAAAQ,EAAAzvC,MAAA8tC,EAAA/rC,QACAhuB,EAAA07D,EAAA17D,EAAAoa,EAAA2D,IAAAg8C,EAAA/rC,QACA0tC,EAAAzvC,QAGA0vC,EAAA57D,EAAAC,EAAAy1B,GAEAqlC,EAAAjiE,GAAAilB,KAAA/d,EACA+6D,EAAAjiE,GAAAklB,IAAA/d,EAGAqxC,EAAAtxC,EAAAC,EAAAy1B,EAAAipB,GAEApuB,EACAorC,EAAA37D,GAAA5E,EAAA4+D,EAAA/rC,QAEA0tC,EAAA17D,GAAAs7D,MAUAU,iBAAA,SAAAj8D,EAAAC,GACA,IACAnH,EAAAojE,EAAAC,EADA9hD,EAAArlB,KAGA,GAAAgL,GAAAqa,EAAA0D,MAAA/d,GAAAqa,EAAA4D,OAAAhe,GAAAoa,EAAA2D,KAAA/d,GAAAoa,EAAA6D,OAGA,IADAi+C,EAAA9hD,EAAAkgD,eACAzhE,EAAA,EAAcA,EAAAqjE,EAAAvjE,SAAeE,EAG7B,GAFAojE,EAAAC,EAAArjE,GAEAkH,GAAAk8D,EAAAn+C,MAAA/d,GAAAk8D,EAAAn+C,KAAAm+C,EAAA9gE,OAAA6E,GAAAi8D,EAAAl+C,KAAA/d,GAAAi8D,EAAAl+C,IAAAk+C,EAAA7gE,OAEA,OAAAgf,EAAAwgD,YAAA/hE,GAKA,aAQAq5C,YAAA,SAAAnxC,GACA,IAGAo7D,EAHA/hD,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACAK,EAAA,YAAAyG,EAAAzG,KAAA,QAAAyG,EAAAzG,KAGA,iBAAAA,GACA,IAAA47B,EAAA+c,UAAA/c,EAAAikC,QACA,WAEG,cAAA7/D,EAKH,OAJA,IAAA47B,EAAAV,QACA,OAOA2mC,EAAA/hD,EAAA4hD,iBAAAj7D,EAAAhB,EAAAgB,EAAAf,GAEA,UAAA1F,EACA6hE,GAAAjmC,EAAAV,SAEAU,EAAAV,QAAA9kB,KAAA0J,EAAArZ,EAAAg7B,OAAAogC,IAGAjmC,EAAAikC,SAAAgC,IAAA/hD,EAAAmgD,eACAngD,EAAAmgD,cACArkC,EAAAikC,QAAAzpD,KAAA0J,EAAArZ,EAAAg7B,OAAA3hB,EAAAmgD,cAEAngD,EAAAmgD,aAAA4B,GAGAjmC,EAAA+c,SAAAkpB,GAEAjmC,EAAA+c,QAAAviC,KAAA0J,EAAArZ,EAAAg7B,OAAAogC,OAMA,SAAAC,GAAAtkE,EAAAukE,GACA,IAAAlnC,EAAA,IAAAklC,GAAA,CACA38C,IAAA5lB,EAAA4lB,IACAzjB,QAAAoiE,EACAvkE,UAGAumC,GAAAK,UAAA5mC,EAAAq9B,EAAAknC,GACAh+B,GAAAC,OAAAxmC,EAAAq9B,GACAr9B,EAAAq9B,SAGA,IAAAmnC,GAAA,CACAphE,GAAA,SASAqhE,SAAAlC,GAEAmC,WAAA,SAAA1kE,GACA,IAAAukE,EAAAvkE,EAAAmC,QAAAk7B,OAEAknC,GACAD,GAAAtkE,EAAAukE,IAIAna,aAAA,SAAApqD,GACA,IAAAukE,EAAAvkE,EAAAmC,QAAAk7B,OACAA,EAAAr9B,EAAAq9B,OAEAknC,GACAj6C,GAAAvI,QAAAwiD,EAAAl7C,GAAAxgB,OAAAw0B,QAEAA,GACAkJ,GAAAK,UAAA5mC,EAAAq9B,EAAAknC,GACAlnC,EAAAl7B,QAAAoiE,GAEAD,GAAAtkE,EAAAukE,IAEGlnC,IACHkJ,GAAAG,UAAA1mC,EAAAq9B,UACAr9B,EAAAq9B,SAIAsnC,WAAA,SAAA3kE,EAAAiJ,GACA,IAAAo0B,EAAAr9B,EAAAq9B,OACAA,GACAA,EAAA+c,YAAAnxC,KAKA27D,GAAAt6C,GAAApK,KAEAmJ,GAAAT,KAAA,UACArgB,MAAA,CACAw5B,SAAA,EACA7X,UAAA,OACAuc,WAAA,EACAvQ,QAAA,GACAgG,SAAA,MACAkB,KAAA,GACAxe,OAAA,OAOA,IAAAimD,GAAAh5C,GAAA3J,OAAA,CACAiJ,WAAA,SAAAuf,GACA,IAAApoB,EAAArlB,KACAqtB,GAAApI,OAAAI,EAAAooB,GAGApoB,EAAAkgD,eAAA,IAKApY,aAAAwa,GACA5iE,OAAA,SAAAqoD,EAAAC,EAAAC,GACA,IAAAjoC,EAAArlB,KA0BA,OAvBAqlB,EAAA8nC,eAGA9nC,EAAA+nC,WACA/nC,EAAAgoC,YACAhoC,EAAAioC,UAGAjoC,EAAAqoC,sBACAroC,EAAAsoC,gBACAtoC,EAAAuoC,qBAEAvoC,EAAAqgD,oBACArgD,EAAAsgD,cACAtgD,EAAAugD,mBAGAvgD,EAAAopC,YACAppC,EAAAqpC,MACArpC,EAAAspC,WAEAtpC,EAAAupC,cAEAvpC,EAAAic,SAGAstB,YAAA+Y,GAIAja,oBAAAia,GACAha,cAAA,WACA,IAAAtoC,EAAArlB,KAEAqlB,EAAAkW,gBAEAlW,EAAAjf,MAAAif,EAAA+nC,SACA/nC,EAAA0D,KAAA,EACA1D,EAAA4D,MAAA5D,EAAAjf,QAEAif,EAAAhf,OAAAgf,EAAAgoC,UAGAhoC,EAAA2D,IAAA,EACA3D,EAAA6D,OAAA7D,EAAAhf,QAIAgf,EAAA4iC,YAAA,EACA5iC,EAAA6iC,WAAA,EACA7iC,EAAA8iC,aAAA,EACA9iC,EAAA+iC,cAAA,EAGA/iC,EAAAic,QAAA,CACAl7B,MAAA,EACAC,OAAA,IAGAunD,mBAAA+Z,GAIAjC,kBAAAiC,GACAhC,YAAAgC,GACA/B,iBAAA+B,GAIAlZ,UAAAkZ,GACAjZ,IAAA,WACA,IAAArpC,EAAArlB,KACAmhC,EAAA9b,EAAAngB,QACA4/B,EAAA3D,EAAA2D,QACAxD,EAAAjc,EAAAic,QACAumC,EAAAx6C,GAAAjK,QAAA+d,EAAAhB,MAAAgB,EAAAhB,KAAAv8B,OAAA,EACAkkE,EAAAz6C,GAAAnoB,QAAA0nB,WAAAuU,GACAy4B,EAAA90B,EAAA+iC,EAAAC,EAAA96C,WAAA,EAAAmU,EAAAlI,QAAA,EAEA5T,EAAAkW,gBACA+F,EAAAl7B,MAAAif,EAAA+nC,SACA9rB,EAAAj7B,OAAAuzD,IAEAt4B,EAAAl7B,MAAAwzD,EACAt4B,EAAAj7B,OAAAgf,EAAAgoC,WAGAhoC,EAAAjf,MAAAk7B,EAAAl7B,MACAif,EAAAhf,OAAAi7B,EAAAj7B,QAGAsoD,SAAAgZ,GAGApsC,aAAA,WACA,IAAAuT,EAAA9uC,KAAAkF,QAAA+5B,SACA,cAAA6P,GAAA,WAAAA,GAIAnb,KAAA,WACA,IAAAtO,EAAArlB,KACA2oB,EAAAtD,EAAAsD,IACAwY,EAAA9b,EAAAngB,QAEA,GAAAi8B,EAAA2D,QAAA,CACA,IAQAsoB,EAAA2a,EAAAC,EARAF,EAAAz6C,GAAAnoB,QAAA0nB,WAAAuU,GACAnU,EAAA86C,EAAA96C,WACAyP,EAAAzP,EAAA,EAAAmU,EAAAlI,QACAzP,EAAA,EACAR,EAAA3D,EAAA2D,IACAD,EAAA1D,EAAA0D,KACAG,EAAA7D,EAAA6D,OACAD,EAAA5D,EAAA4D,MAGAN,EAAAkO,UAAAxJ,GAAA7J,eAAA2d,EAAAgxB,UAAA/lC,GAAAxgB,OAAAkgB,kBACAnD,EAAA2D,KAAAw7C,EAAApqD,OAGA2H,EAAAkW,gBACAwsC,EAAAh/C,GAAAE,EAAAF,GAAA,EACAi/C,EAAAh/C,EAAAyT,EACA2wB,EAAAnkC,EAAAF,IAEAg/C,EAAA,SAAA5mC,EAAAlC,SAAAlW,EAAA0T,EAAAxT,EAAAwT,EACAurC,EAAAh/C,GAAAE,EAAAF,GAAA,EACAokC,EAAAlkC,EAAAF,EACAQ,EAAAja,KAAAoC,IAAA,SAAAwvB,EAAAlC,UAAA,QAGAtW,EAAA8B,OACA9B,EAAAirC,UAAAmU,EAAAC,GACAr/C,EAAApH,OAAAiI,GACAb,EAAAyzB,UAAA,SACAzzB,EAAA0zB,aAAA,SAEA,IAAAlc,EAAAgB,EAAAhB,KACA,GAAA9S,GAAAjK,QAAA+c,GAEA,IADA,IAAAl1B,EAAA,EACAnH,EAAA,EAAmBA,EAAAq8B,EAAAv8B,SAAiBE,EACpC6kB,EAAA2zB,SAAAnc,EAAAr8B,GAAA,EAAAmH,EAAAmiD,GACAniD,GAAA+hB,OAGArE,EAAA2zB,SAAAnc,EAAA,IAAAitB,GAGAzkC,EAAAiC,cAKA,SAAAq9C,GAAAllE,EAAAmlE,GACA,IAAA58D,EAAA,IAAAs8D,GAAA,CACAj/C,IAAA5lB,EAAA4lB,IACAzjB,QAAAgjE,EACAnlE,UAGAumC,GAAAK,UAAA5mC,EAAAuI,EAAA48D,GACA5+B,GAAAC,OAAAxmC,EAAAuI,GACAvI,EAAAolE,WAAA78D,EAGA,IAAA88D,GAAA,CACAjiE,GAAA,QASAqhE,SAAAI,GAEAH,WAAA,SAAA1kE,GACA,IAAAmlE,EAAAnlE,EAAAmC,QAAAoG,MAEA48D,GACAD,GAAAllE,EAAAmlE,IAIA/a,aAAA,SAAApqD,GACA,IAAAmlE,EAAAnlE,EAAAmC,QAAAoG,MACA68D,EAAAplE,EAAAolE,WAEAD,GACA76C,GAAAvI,QAAAojD,EAAA97C,GAAAxgB,OAAAN,OAEA68D,GACA7+B,GAAAK,UAAA5mC,EAAAolE,EAAAD,GACAC,EAAAjjE,QAAAgjE,GAEAD,GAAAllE,EAAAmlE,IAEGC,IACH7+B,GAAAG,UAAA1mC,EAAAolE,UACAplE,EAAAolE,cAKA1hE,GAAA,GACAu8D,GAAAyB,GACArkC,GAAAmnC,GACAj8D,GAAA88D,GA2CA,QAAAt4D,MA1CArJ,GAAAu8D,UACAv8D,GAAA25B,UACA35B,GAAA6E,SAOA42C,GAAAl/B,QAAAqK,GAGAk1B,GAAAL,IAEAA,GAAAmmB,UAAAxd,GACA3I,GAAAomB,UAAAp5C,GACAgzB,GAAAqmB,iBAAA94C,GACAyyB,GAAA1b,eACA0b,GAAA5wB,kBAAAyD,GACAmtB,GAAAx2B,SAAAU,GACA81B,GAAAl0B,QAAAY,GACAszB,GAAAxuB,YACAwuB,GAAAsmB,YAAApgC,GACA8Z,GAAAumB,QAAAn/B,GACA4Y,GAAA5Q,YACA4Q,GAAAz7C,QAAA+rC,GACA0P,GAAAwmB,MAAAzb,GACA/K,GAAAymB,aAAAr1B,GACA4O,GAAA0mB,MAAA9d,GACA5I,GAAA2mB,QAAAvrB,GAIA4E,GAAAl/B,QAAAc,KAAAmO,GAAA,SAAA/T,EAAA3Y,GACA28C,GAAAymB,aAAAn1B,kBAAAjuC,EAAA2Y,IAAA82C,aAQAvuD,GACAA,GAAA/B,eAAAoL,KACAoyC,GAAAz7C,QAAAisC,SAAAjsC,GAAAqJ,KAIAoyC,GAAA5Q,SAAApjB,aAEA,IAAA46C,GAAA5mB,GAyGA,MAxGA,qBAAAp/B,SACAA,OAAAu7B,MAAA6D,IAYAA,GAAA7D,MAAA6D,GASAA,GAAAojB,OAAA7+D,GAAA25B,OAAAonC,SASAtlB,GAAA0lB,MAAAnhE,GAAA6E,MAAAk8D,SASAtlB,GAAA6mB,cAAA7mB,GAAAz7C,QAUAy7C,GAAA8mB,WAAA9mB,GAAAl0B,QAAA/I,OAAA,IASAi9B,GAAA+mB,cAAA/mB,GAAAl/B,QAAA5b,OASA86C,GAAAgnB,cAAAhnB,GAAAumB,QASAvmB,GAAAinB,gBAAAlT,GAQA/T,GAAAl/B,QAAAc,KACA,CACA,MACA,SACA,WACA,OACA,YACA,QACA,WAEA,SAAAslD,GACAlnB,GAAAknB,GAAA,SAAAzgD,EAAA0gD,GACA,WAAAnnB,GAAAv5B,EAAAu5B,GAAAl/B,QAAA4B,MAAAykD,GAAA,GAA0E,CAC1E9jE,KAAA6jE,EAAA5mD,OAAA,GAAA8mD,cAAAF,EAAA1tD,MAAA,SAMAotD,0FCr1cA,IAAAhpE,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,qBAAgC,CAAAN,EAAAQ,GAAA,eAAAJ,EAAA,UAAqCK,MAAA,CAAOuB,KAAA,UAAgBZ,SAAA,CAAWC,MAAArB,EAAAwpE,iBAA4BxoE,GAAA,CAAKO,OAAA,SAAAL,GAA0B,OAAAlB,EAAAypE,qBAAAvoE,MAA0ClB,EAAA0pE,GAAA1pE,EAAA,qBAAA2pE,EAAA9mD,GAAiD,OAAAziB,EAAA,UAAoBkE,IAAAue,EAAAzhB,SAAA,CAAoBC,MAAAwhB,EAAA+mD,UAAA5pE,EAAAmC,GAAAwnE,EAAA7gE,cAAoD,MACnclG,EAAA,2BCYAinE,EAAA,SAAAjiE,GADA,SAAAuD,IAAA,IAAAzC,EAAA,OAAAd,KAAAe,MAAA1I,KAAA2I,YAAA3I,YAWUyI,EAAAohE,YAIFphE,EAAK9H,QACH8H,EAAA8gE,gBAA0B9gE,EAAK5H,cAazC,OA5B6CgH,EAAA,KAAAqD,EAAAvD,GAmBnCuD,EAAApD,UAAAgiE,iBAAR,WACE,OAAO9pE,KAAKupE,iBAINr+D,EAAApD,UAAA0hE,qBAAR,SAA6BvoE,GAC3BjB,KAAKupE,gBAAkB/iE,OAAgCvF,EAAQmJ,OAAQhJ,OACvEpB,KAAK8pE,oBAxBCjiE,EAAA,MAAP7D,OAAAgE,EAAA,KAAAhE,kCAKO6D,EAAA,MAAP7D,OAAAgE,EAAA,KAAAhE,sCAYD6D,EAAA,MADC7D,OAAAgE,EAAA,KAAAhE,CAAK,sDAlBakH,EAAerD,EAAA,MADnCG,EAAA,MACoBkD,GA4BrBA,EA5BA,CAA6ClD,EAAA,MAAxB+hE,EAAA,ECbwUC,EAAA,0BCQ7V5hE,EAAgBpE,OAAAqE,EAAA,KAAArE,CACdgmE,EACAlqE,EACA6C,GACF,EACA,KACA,WACA,MAIegJ,EAAA,KAAAvD,6CCnBf,IAAA6hE,EAAAtqE,EAAA,QAAAuqE,EAAAvqE,EAAAE,EAAAoqE,GAA2iBC,EAAG,qCCA9iB,IAAAxgE,EAAA,oBAAAA,KAsNA,OApNgBA,EAAAygE,qBAAd,SAAmCC,EAAcC,GAC/C,IAAIC,EAAuB/6D,KAAKqC,MAAM,EAAIrC,KAAKg1C,IAAI,EAAIh1C,KAAKg7D,WAO5D,OANkC,IAA9Bh7D,KAAKyM,MAAMzM,KAAKg7D,UAClBD,GAAgB/6D,KAAKwC,IAAI,EAAIxC,KAAKoC,GAAKpC,KAAKg7D,UAE5CD,GAAgB/6D,KAAKuC,IAAI,EAAIvC,KAAKoC,GAAKpC,KAAKg7D,UAE9CD,EAAgBA,EAAeD,EAAqBD,EAC7CE,GAIK5gE,EAAAC,gBAAd,SAA8Bc,EAAe2/D,EAAcC,GAEzD,IADA,IAAI1pE,EAAoB,GACfmD,EAAY,EAAGA,EAAI2G,EAAO3G,IACjCnD,EAAQoG,KAAK/G,KAAKmqE,qBAAqBC,EAAMC,IAE/C,OAAO1pE,GAIK+I,EAAA8gE,4BAAd,SAA0CF,EAAsBG,GAC9D,IAAIx/D,EAAYjL,KAAKmqE,qBAAqB,EAAG,GAC7C,OAAOM,EAAyBH,EAAgB/6D,KAAAS,IAAC,EAAIT,KAAAS,IAAAy6D,EAA0B,GAAM,IAAOx/D,GAIhFvB,EAAAE,6BAAd,SAA2C8gE,EAAyBD,GAApE,IAAAhiE,EAAAzI,KACMiQ,EAAcy6D,EAActnE,IAAI,SAAChC,GACnC,OAAOqH,EAAK+hE,4BAA4BppE,EAAOqpE,KAEjD,OAAOzqE,KAAK2qE,mBAAmB16D,IAInBvG,EAAAihE,mBAAd,SAAiChqE,GAC/B,IAAI0pE,EAA4BrqE,KAAK4qE,sBAAsBjqE,GACvDypE,EAAepqE,KAAK6qE,SAASlqE,GACjC,OAAOA,EAAQyC,IAAI,SAAChC,GAClB,OAA0B,IAAtBipE,GACMjpE,EAAQgpE,GAAQC,EAEjBjpE,EAAQgpE,KAMP1gE,EAAAM,qBAAd,SAAmCrJ,EAAmBypE,EAAcC,GAClE,OAAO1pE,EAAQyC,IAAI,SAAChC,GAClB,OAAQA,EAAQipE,EAAqBD,KAK3B1gE,EAAAiB,eAAd,SAA6BrB,EAAoBC,GAK/C,IAJA,IAAIuhE,EAAgB9qE,KAAK6qE,SAASvhE,GAC9ByhE,EAAgB/qE,KAAK6qE,SAASthE,GAC9ByhE,EAAqB,EACrBpnE,EAAiB5D,KAAKsK,YAAY,CAAChB,EAAS1F,OAAQ2F,EAAS3F,SACxDE,EAAY,EAAGA,EAAIF,EAAQE,IAClCknE,IAAe1hE,EAASxF,GAAKgnE,IAAUvhE,EAASzF,GAAKinE,GAGvD,OADAC,GAAcpnE,EACPonE,GAIKthE,EAAAkB,2BAAd,SAAyCtB,EAAoBC,GAC3D,IAAIyhE,EAAqBhrE,KAAK2K,eAAerB,EAAUC,GACnD0hE,EAA6BjrE,KAAK4qE,sBAAsBthE,GACxD4hE,EAA6BlrE,KAAK4qE,sBAAsBrhE,GAC5D,OAAOyhE,GAAcC,EAAqBC,IAM9BxhE,EAAAyhE,YAAd,SAA0BxqE,GACxB,OAAOA,EAAQmoC,KAAK,SAAC5hC,EAAWmI,GAC9B,IAAI+7D,EAAgB,EAMpB,OALIlkE,EAAImI,EACN+7D,GAAS,EACA/7D,EAAInI,IACbkkE,EAAQ,GAEHA,KAKG1hE,EAAAmhE,SAAd,SAAuBlqE,GACrB,OAAOX,KAAKqrE,QAAQ1qE,GAAWA,EAAQiD,QAI3B8F,EAAA4hE,WAAd,SAAyB3qE,GACvB,IAEI4qE,EAFAC,EAA0BxrE,KAAKmrE,YAAYxqE,GAC3CiD,EAAiB4nE,EAAc5nE,OAOnC,OAJE2nE,EADE3nE,EAAS,IAAM,GACP4nE,EAAe5nE,EAAS,EAAK,GAAK4nE,EAAe5nE,EAAS,IAAO,EAEjE4nE,EAAcj8D,KAAKqB,MAAMhN,EAAS,IAEvC2nE,GAIK7hE,EAAA+hE,SAAd,SAAuB9qE,GACrB,IAMIkqB,EANApgB,EAAgB,EAChB49B,EAAkB,GAClBmjC,EAA0BxrE,KAAKmrE,YAAYxqE,GAC3C+qE,EAEA,GAaJ,GAXAF,EAAc3nE,QAAQ,SAACzC,EAAewhB,GAChCiI,IAAazpB,GACfqJ,IACI,EAAIA,IACNihE,EAActqE,GAASqJ,IAGzBA,EAAQ,EAEVogB,EAAWzpB,IAET,EAAI4C,OAAOC,KAAKynE,GAAe9nE,OAAQ,CACzC,IAAI+nE,EAAmB3nE,OAAOoY,OAAOsvD,GACjCE,EAAmB5rE,KAAK6rE,YAAYF,GACxC3nE,OAAOC,KAAKynE,GAAe7nE,QAAQ,SAACQ,GAC9BqnE,EAAcllE,OAAOnC,MAAUunE,GACjCvjC,EAAMthC,KAAKP,OAAOnC,MAIxB,OAAOgkC,GAIK3+B,EAAA2hE,QAAd,SAAsB1qE,GACpB,OAAOA,EAAQg4C,OAAO,SAAC9tB,EAAkB4M,GACvC,OAAO5M,EAAW4M,KAKR/tB,EAAAoiE,aAAd,SAA2BnrE,GACzB,IAAIypE,EAAepqE,KAAK6qE,SAASlqE,GACjC,OAAOA,EAAQg4C,OAAO,SAAC9tB,EAAkB4M,GACvC,OAAO5M,EAAYtb,KAAAS,IAACynB,EAAU2yC,EAAS,KACpCzpE,EAAQiD,QAID8F,EAAAkhE,sBAAd,SAAoCjqE,GAClC,OAAO4O,KAAKqC,KAAK5R,KAAK8rE,aAAanrE,KAIvB+I,EAAAmiE,YAAd,SAA0BlrE,GACxB,OAAO4O,KAAKC,IAAG9G,MAAR6G,KAAY5O,IAIP+I,EAAAY,YAAd,SAA0B3J,GACxB,OAAO4O,KAAKD,IAAG5G,MAAR6G,KAAY5O,IAIP+I,EAAAqiE,oBAAd,SAAkCprE,GAKhC,IAAIqrE,EAIA,CACFC,gBAAiB,EACjBC,gBAAiB,EACjBC,gBAAiB,GAEf9B,EAA4BrqE,KAAK4qE,sBAAsBjqE,GACvDypE,EAAepqE,KAAK6qE,SAASlqE,GACjCA,EAAQkD,QAAQ,SAACzC,IACW,EAApBipE,EAAyBD,GAAQhpE,GAClCA,GAA8B,EAApBipE,EAAyBD,GACtC4B,EAAqBG,mBAEG,EAApB9B,EAAyBD,GAAQhpE,GAClCA,GAA8B,EAApBipE,EAAyBD,GACtC4B,EAAqBE,mBAEG,EAApB7B,EAAyBD,GAAQhpE,GAClCA,GAA8B,EAApBipE,EAAyBD,GACtC4B,EAAqBC,oBAGzB,IAAIG,EAIA,CACFH,gBAAiBD,EAAqBC,gBAAkBtrE,EAAQiD,OAChEsoE,gBAAiBF,EAAqBE,gBAAkBvrE,EAAQiD,OAChEuoE,gBAAiBH,EAAqBG,gBAAkBxrE,EAAQiD,QAElE,OAAOwoE,GAEX1iE,EAtNA,+CCAA,IAAAG,EAAA,oBAAAA,KAqDA,OAnDgBA,EAAAwiE,UAAd,SAAwB/8D,EAAaE,GACnC,IAAI88D,EAAc98D,EAAMF,EAAM,EAC9B,OAAOA,EAAMC,KAAKqB,MAAMrB,KAAKg7D,SAAW+B,IAI5BziE,EAAAI,YAAd,SAA0BqF,EAAaE,EAAa+8D,GAClD,OAAOvsE,KAAKqsE,UAAU/8D,EAAOC,KAAAS,IAAA,GAAMu8D,GAAa/8D,EAAOD,KAAAS,IAAA,GAAMu8D,IAAgBh9D,KAAAS,IAAA,GAAMu8D,IAIvE1iE,EAAAa,gBAAd,SAA8B8hE,GAC5B,IAAIC,EAA2B,EAC/B,GAAIlmE,OAAOimE,GAAQniE,MAAM,iBAAkB,CACzC,IAAIqiE,EAAuCnmE,OAAOimE,GAAQniE,MAAM,iBAC5C,OAAhBqiE,IACFD,EAAmBC,EAAY,GAAG9oE,QAGtC,OAAO6oE,GAIK5iE,EAAA8iE,aAAd,SAA2BH,GACzB,OAAOI,QAAQJ,EAAOniE,MAAM,8CAIhBR,EAAAgjE,gBAAd,SAA8BL,GAC5B,OAAOI,QAAQJ,EAAOniE,MAAM,4BAIhBR,EAAAijE,6BAAd,SAA2CN,GACzC,OAAOI,QAAQJ,EAAOniE,MAAM,oBAIhBR,EAAAkjE,QAAd,SAAsBP,EAAgB5oE,GACpC,OAAQ,IAAIopE,OAAOppE,GAAU2C,OAAOimE,IAAS9wD,OAAO9X,IAIxCiG,EAAAC,QAAd,SAAsB0iE,EAAgBD,GACpC,OAAOC,EAAO1iE,QAAQyiE,IAIV1iE,EAAAojE,eAAd,SAA6BT,GAC3B,OAAOA,EAAOS,kBAElBpjE,EArDA,+CCAA,IAAA/J,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,YAAuB,CAAAF,EAAA,UAAeE,YAAA,gBAAAG,MAAA,CAAmC+E,KAAA,UAAgBxE,GAAA,CAAKmsE,MAAA,SAAAjsE,GAAyB,OAAAlB,EAAAotE,YAAAlsE,MAAiC,CAAAlB,EAAAQ,GAAA,SAAAR,EAAAmC,GAAAnC,EAAA4B,gBAAA,UAAAxB,EAAA,QAAkE2B,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAAZ,MAAArB,EAAA,aAAAkC,WAAA,iBAAgF5B,YAAA,SAAA0F,MAAAhG,EAAA,oBACja4C,EAAA,2BCYAyqE,EAAA,SAAAzlE,GADA,SAAAyD,IAAA,IAAA3C,EAAA,OAAAd,KAAAe,MAAA1I,KAAA2I,YAAA3I,YAMUyI,EAAA9G,eAAqC8G,EAAK/G,WAC1C+G,EAAA4kE,aAAuB,KA8BjC,OApCqCxlE,EAAA,KAAAuD,EAAAzD,GAUnCyD,EAAAtD,UAAAwlE,cAAA,SAAcC,EAAkBC,KAKxBpiE,EAAAtD,UAAA2lE,gBAAR,aAGQriE,EAAAtD,UAAAqlE,YAAR,SAAoBlsE,GAApB,IAAAwH,EAAAzI,KACQ0tE,EAAkB,IAClBC,EAAyD1sE,EAAQmJ,OACnEwjE,EAAsBD,EAAYE,YAClCC,EAAmCH,EAAY9lB,wBAC/C9+B,EAAeviB,OAAavF,EAAQ8sE,OAASD,EAAW/kD,KAAOjG,OAAOkrD,YAAeJ,EAAc,EACnG5kD,EAAcxiB,OAAavF,EAAQgtE,OAASH,EAAW9kD,IAAMlG,OAAOorD,YAAeN,EAAc,EACjG3uC,EAAmB,GACvBA,GAAY,QAAUlW,EAAO,MAC7BkW,GAAY,OAASjW,EAAM,MAC3BiW,GAAY,SAAW2uC,EAAc,MACrC3uC,GAAY,UAAY2uC,EAAc,MACtC5tE,KAAKqtE,aAAepuC,EACpBuoB,WAAW,WACT/+C,EAAK4kE,aAAe,IACnBK,GACH1tE,KAAKytE,mBAhCC5lE,EAAA,MAAP7D,OAAAgE,EAAA,KAAAhE,qCAQD6D,EAAA,MADC7D,OAAAgE,EAAA,KAAAhE,CAAM,mDAMP6D,EAAA,MADC7D,OAAAgE,EAAA,KAAAhE,CAAK,oDAdaoH,EAAOvD,EAAA,MAD3BG,EAAA,MACoBoD,GAoCrBA,EApCA,CAAqCpD,EAAA,MAAhBmmE,EAAA,ECbgUC,EAAA,0BCQrVhmE,EAAgBpE,OAAAqE,EAAA,KAAArE,CACdoqE,EACAtuE,EACA6C,GACF,EACA,KACA,WACA,MAIegJ,EAAA,KAAAvD,6CCnBf,IAAAimE,EAAA1uE,EAAA,QAAA2uE,EAAA3uE,EAAAE,EAAAwuE,GAAikBC,EAAG","file":"js/chunk-ca4f8a3c.7d4590fa.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CButton.vue?vue&type=style&index=0&id=722269f6&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CButton.vue?vue&type=style&index=0&id=722269f6&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"average\"},[_vm._m(0),_c('div',{staticClass:\"card\"},[_c('h2',{staticClass:\"title\"},[_vm._v(\"設定\")]),_c('p',[_vm._v(\"\\n      標本を対にして入力してください。\\n    \")]),_c('p',{staticClass:\"note\"},[_c('font-awesome-icon',{attrs:{\"icon\":\"exclamation-triangle\",\"color\":\"#5ea1f2\"}}),_vm._v(\" \\n      XとYの数値を順に紐づけて集計します。\\n    \")],1),_c('p',{staticClass:\"note\"},[_c('font-awesome-icon',{attrs:{\"icon\":\"exclamation-triangle\",\"color\":\"#5ea1f2\"}}),_vm._v(\" \\n      XとYで度数が異なる場合は、少ない方に合わせて集計します。\\n    \")],1),_c('p',{staticClass:\"note\"},[_c('font-awesome-icon',{attrs:{\"icon\":\"exclamation-triangle\",\"color\":\"#5ea1f2\"}}),_vm._v(\" \\n      下記「例」の標本は、このページを開いたときに初期化されます。\\n    \")],1),_c('p',{staticClass:\"note\"},[_c('font-awesome-icon',{attrs:{\"icon\":\"coffee\"}}),_vm._v(\" \\n      標準正規分布とは、正規分布のうち、平均値が0で標準偏差が1のものです。\\n    \")],1),_c('div',{staticClass:\"examples-wrapper\"},[_c('CSelectorSample',{attrs:{\"samples\":_vm.dataSampleExamples,\"sampleIndex\":_vm.dataSelectedSampleExampleIndex},on:{\"selectSample\":function($event){return _vm.listenOnSampleExampleSelect($event)}}})],1),_c('div',{staticClass:\"setting-sections\"},[_c('div',{staticClass:\"setting-section\"},[_c('div',{staticClass:\"textarea-caption\"},[_vm._v(\"X\")]),_c('textarea',{staticClass:\"textarea\",domProps:{\"value\":_vm.dataTextX},on:{\"change\":function($event){return _vm.listenInputX($event)}}})]),_c('div',{staticClass:\"setting-section\"},[_c('div',{staticClass:\"textarea-caption\"},[_vm._v(\"Y\")]),_c('textarea',{staticClass:\"textarea\",domProps:{\"value\":_vm.dataTextY},on:{\"change\":function($event){return _vm.listenInputY($event)}}})])]),_c('CButton',{attrs:{\"buttonText\":_vm.dataButtonText},on:{\"clickButton\":function($event){return _vm.calcCorrelation()}}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.dataCovariance),expression:\"dataCovariance\"}],staticClass:\"card\"},[_c('h2',{staticClass:\"title\"},[_vm._v(\"出力結果\")]),_c('p',[_vm._v(\"結果です。\")]),_c('dl',{staticClass:\"definition statistics-data\"},[_c('dt',[_vm._v(\"共分散\")]),_c('dd',[_vm._v(_vm._s(_vm.dataCovariance))]),_c('dt',[_vm._v(\"相関係数\")]),_c('dd',[_vm._v(_vm._s(_vm.dataCorrelationCoefficient))])]),_c('p',{staticClass:\"note\"},[_c('font-awesome-icon',{attrs:{\"icon\":\"coffee\"}}),_vm._v(\" \\n      相関係数は-1以上1以下の実数値を取り、絶対値が1に近い方が相関関係が高くなり、0に近いとほぼ無関係です。\\n    \")],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.dataCovariance),expression:\"dataCovariance\"}],staticClass:\"card\"},[_c('h2',{staticClass:\"title\"},[_vm._v(\"散布図\")]),_c('p',[_vm._v(\"散布図です。\")]),_c('div',{staticClass:\"chart\"},[_c('CCorrelationChart',{attrs:{\"chartData\":_vm.dataChartData,\"chartOptions\":_vm.dataChartOptions}})],1)]),_c('CStatistics',{attrs:{\"linkTitle\":_vm.dataLinkTitle}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\"},[_c('h1',{staticClass:\"page_title\"},[_vm._v(\"相関係数と散布図\")]),_c('p',[_vm._v(\"与えられた標本から共分散と相関係数を取得し、散布図を描きます。\")])])}]\n\nexport { render, staticRenderFns }","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","var render, staticRenderFns\nimport script from \"./CCorrelationChart.vue?vue&type=script&lang=ts&\"\nexport * from \"./CCorrelationChart.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport { Component, Prop, Watch, Mixins, Vue } from 'vue-property-decorator';\nimport { Scatter, mixins } from 'vue-chartjs';\nimport Chart from \"chart.js\";\n\n@Component({\n  components: {},\n})\nexport default class CCorrelationChart extends Mixins(Scatter, mixins.reactiveProp) {\n  @Prop() public chartData!: Chart.ChartData;\n  @Prop() public chartOptions!: Chart.ChartOptions;\n\n  private mounted() {\n    this.renderChart(this.chartData, this.chartOptions);\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CCorrelationChart.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CCorrelationChart.vue?vue&type=script&lang=ts&\"","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Watch, Prop, Vue } from 'vue-property-decorator';\nimport Chart from \"chart.js\";\nimport CStatistics from '@/components/links/CStatistics.vue';\nimport CButton from '@/components/CButton.vue';\nimport CSelectorSample from '@/components/CSelectorSample.vue';\nimport CCorrelationChart from '@/components/CCorrelationChart.vue';\nimport MathUtil from '@/typescript/MathUtil.ts';\nimport StatisticsCalc from '@/typescript/StatisticsCalc.ts';\n\ninterface ChartPoint extends Chart.ChartPoint {\n  x: number;\n  y: number;\n}\n\n@Component({\n  components: {\n    CSelectorSample,\n    CStatistics,\n    CButton,\n    CCorrelationChart,\n  },\n  head: {\n    title: {\n      inner: '相関係数と散布図',\n    },\n  },\n})\nexport default class CorrelationChart extends Vue {\n  // Data\n  private dataLinkTitle: string = '関連リンク一覧';\n  private dataButtonText: string = '出力';\n  private dataDotColor: string = '#e37660';\n  private dataTextX: string = '';\n  private dataTextY: string = '';\n  private dataSelectedSampleExampleIndex: number = 0;\n  private dataSampleExamples: {\n    name: string,\n    caption: string,\n    content: string,\n  }[] = [\n    {\n      name: 'none',\n      caption: '',\n      content: '/',\n    },\n    {\n      name: 'high_CC',\n      caption: '正の高い相関関係を持つ標準正規乱数',\n      content: '/',\n    },\n    {\n      name: 'low_CC',\n      caption: '負の低い相関関係を持つ標準正規乱数',\n      content: '/',\n    },\n    {\n      name: 'test',\n      caption: 'センター試験（国語と数学II）',\n      content: '/',\n    },\n    {\n      name: 'normal',\n      caption: '無関係な対の正規乱数',\n      content: '/',\n    },\n    {\n      name: 'uniform',\n      caption: '無関係な対の一様乱数',\n      content: '/',\n    },\n  ];\n  private dataCovariance: string = '';\n  private dataCorrelationCoefficient: string = '';\n  private dataDatasets: Chart.ChartDataSets[] = [\n    {\n      label: '横軸X 縦軸Y',\n      borderColor: this.dataDotColor,\n      backgroundColor: this.dataDotColor,\n      data: [],\n    },\n  ];\n  private dataChartData: Chart.ChartData = {\n    datasets: this.dataDatasets,\n  };\n  private dataChartOptions: Chart.ChartOptions = {\n    responsive: true,\n  };\n\n  private created(): void {\n    let i: number = 1;\n    Vue.set(this.dataSampleExamples[i++], 'content', this.generateSample('high_CC'));\n    Vue.set(this.dataSampleExamples[i++], 'content', this.generateSample('low_CC'));\n    Vue.set(this.dataSampleExamples[i++], 'content', this.generateSample('test'));\n    Vue.set(this.dataSampleExamples[i++], 'content', this.generateSample('normal'));\n    Vue.set(this.dataSampleExamples[i++], 'content', this.generateSample('uniform'));\n  }\n\n  // Methods\n  private generateSample(name: string): string {\n    let sampleXs: number[] = [];\n    let sampleYs: number[] = [];\n    let sampleTextX: string = '';\n    let sampleTextY: string = '';\n    switch(name) {\n      case 'high_CC':\n        sampleXs = StatisticsCalc.generateSamples(100, 0, 1);\n        sampleYs = StatisticsCalc.generateCorrelationalSamples(sampleXs, 0.9);\n        sampleXs = sampleXs.map((value: number): number => { return Number(MathUtil.toFixed(value, 3)); });\n        sampleYs = sampleYs.map((value: number): number => { return Number(MathUtil.toFixed(value, 3)); });\n        sampleTextX = sampleXs.join(',');\n        sampleTextY = sampleYs.join(',');\n        break;\n      case 'low_CC':\n        sampleXs = StatisticsCalc.generateSamples(300, 0, 1);\n        sampleYs = StatisticsCalc.generateCorrelationalSamples(sampleXs, -0.3);\n        sampleXs = sampleXs.map((value: number): number => { return Number(MathUtil.toFixed(value, 4)); });\n        sampleYs = sampleYs.map((value: number): number => { return Number(MathUtil.toFixed(value, 4)); });\n        sampleTextX = '\"' + sampleXs.join('\", \"') + '\"';\n        sampleTextY = '\"' + sampleYs.join('\", \"') + '\"';\n        break;\n      case 'test':\n        sampleXs = StatisticsCalc.generateSamples(500, 0, 1);\n        sampleYs = StatisticsCalc.generateCorrelationalSamples(sampleXs, 0.5);\n        sampleXs = StatisticsCalc.unstandardizeSamples(sampleXs, 172.11, 5.69);\n        sampleYs = StatisticsCalc.unstandardizeSamples(sampleYs, 31.73, 18.29);\n        sampleXs = sampleXs.map((value: number): number => { return Number(MathUtil.toFixed(value, 0)); });\n        sampleYs = sampleYs.map((value: number): number => { return Number(MathUtil.toFixed(value, 0)); });\n        sampleTextX = sampleXs.join(' ');\n        sampleTextY = sampleYs.join(' ');\n        break;\n      case 'normal':\n        sampleXs = StatisticsCalc.generateSamples(512, 0, 1);\n        sampleYs = StatisticsCalc.generateSamples(512, 50, 10);\n        sampleXs = sampleXs.map((value: number): number => { return Number(MathUtil.toFixed(value, 3)); });\n        sampleYs = sampleYs.map((value: number): number => { return Number(MathUtil.toFixed(value, 1)); });\n        sampleTextX = sampleXs.join(' : ');\n        sampleTextY = sampleYs.join(' : ');\n        break;\n      case 'uniform':\n        for (let i: number = 0; i < 256; i++) {\n          sampleXs.push(MathUtil.randomFloat(-1, 1, 5));\n          sampleYs.push(MathUtil.randomFloat(0, 100, 2));\n        }\n        sampleTextX = sampleXs.join(', ');\n        sampleTextY = sampleYs.join(', ');\n        break;\n    }\n    return sampleTextX + '/' + sampleTextY;\n  }\n  private listenOnSampleExampleSelect($event: Event): void {\n    this.dataSelectedSampleExampleIndex = Number(<any>$event);\n    let sampleTexts: string[] = this.dataSampleExamples[this.dataSelectedSampleExampleIndex].content.split('/');\n    this.dataTextX = sampleTexts[0];\n    this.dataTextY = sampleTexts[1];\n  }\n  private listenInputX($event: Event): void {\n    this.dataTextX = (<HTMLInputElement>(<any>$event).target).value;\n  }\n  private listenInputY($event: Event): void {\n    this.dataTextY = (<HTMLInputElement>(<any>$event).target).value;\n  }\n  private calcCorrelation(): void {\n    let sampleXs: string[] | number[] | null = this.dataTextX.match(/(\\+|\\-)?([1-9][0-9]+|[0-9])(\\.[0-9]+)?/g);\n    let sampleYs: string[] | number[] | null = this.dataTextY.match(/(\\+|\\-)?([1-9][0-9]+|[0-9])(\\.[0-9]+)?/g);\n    if (sampleXs !== null && sampleYs !== null) {\n      sampleXs = sampleXs.map((value: string): number => {\n        return Number(value);\n      });\n      sampleYs = sampleYs.map((value: string): number => {\n        return Number(value);\n      });\n      let length: number = StatisticsCalc.calcMinimum([sampleXs.length, sampleYs.length, ]);\n      sampleXs = sampleXs.splice(0, length);\n      sampleYs = sampleYs.splice(0, length);\n      let decimalPartCount: number = 0;\n      sampleXs.forEach((value: number): void => {\n        let count: number = MathUtil.countDecimlPart(value);\n        if (decimalPartCount < count) {\n          decimalPartCount = count;\n        }\n      });\n      sampleYs.forEach((value: number): void => {\n        let count: number = MathUtil.countDecimlPart(value);\n        if (decimalPartCount < count) {\n          decimalPartCount = count;\n        }\n      });\n      this.dataCovariance = MathUtil.toFixed(StatisticsCalc.calcCovariance(sampleXs, sampleYs), decimalPartCount + 2);\n      this.dataCorrelationCoefficient = MathUtil.toFixed(StatisticsCalc.calcCorrelationCoefficient(sampleXs, sampleYs), 4);\n      this.pushChartPoints(sampleXs, sampleYs);\n    }\n  }\n  private pushChartPoints(sampleXs: number[], sampleYs: number[]) {\n    if (this.dataDatasets[0].data !== undefined) {\n      this.dataDatasets[0].data.length = 0;\n      let chartPoints: ChartPoint[] = [];\n      for (let i: number = 0; i < sampleXs.length; i++) {\n        chartPoints.push({x: sampleXs[i], y: sampleYs[i]});\n      }\n      // Chartjs再描画のために、this.dataChartDataの再初期化必須\n      this.dataChartData = {};\n      Vue.set(this.dataDatasets[0], 'data', chartPoints);\n      Vue.set(this.dataChartData, 'datasets', this.dataDatasets);\n    }\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CorrelationChart.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CorrelationChart.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CorrelationChart.vue?vue&type=template&id=26813714&scoped=true&\"\nimport script from \"./CorrelationChart.vue?vue&type=script&lang=ts&\"\nexport * from \"./CorrelationChart.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CorrelationChart.vue?vue&type=style&index=0&id=26813714&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"26813714\",\n  null\n  \n)\n\nexport default component.exports","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"c-selector-sample\"},[_vm._v(\"\\n  例: \\n  \"),_c('select',{attrs:{\"name\":\"sample\"},domProps:{\"value\":_vm.dataSampleIndex},on:{\"change\":function($event){return _vm.listenOnSelectSample($event)}}},_vm._l((_vm.dataSamples),function(sample,index){return _c('option',{key:index,domProps:{\"value\":index,\"innerHTML\":_vm._s(sample.caption)}})}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Watch, Emit, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class CSelectorSample extends Vue {\n  // Props\n  @Prop() public samples!: {\n    name: string,\n    caption: string,\n    content: string,\n  }[];\n  @Prop() public sampleIndex!: number;\n\n  // Data\n  private dataSamples: {\n    name: string,\n    caption: string,\n    content: string,\n  }[] = this.samples;\n  private dataSampleIndex: number = this.sampleIndex;\n\n  // Emit\n  @Emit('selectSample')\n  private emitSelectSample(): number {\n    return this.dataSampleIndex;\n  }\n\n  // Methods\n  private listenOnSelectSample($event: Event): void {\n    this.dataSampleIndex = Number((<HTMLInputElement>(<any>$event).target).value);\n    this.emitSelectSample();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CSelectorSample.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CSelectorSample.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CSelectorSample.vue?vue&type=template&id=684531a8&scoped=true&\"\nimport script from \"./CSelectorSample.vue?vue&type=script&lang=ts&\"\nexport * from \"./CSelectorSample.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CSelectorSample.vue?vue&type=style&index=0&id=684531a8&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"684531a8\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CSelectorSample.vue?vue&type=style&index=0&id=684531a8&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CSelectorSample.vue?vue&type=style&index=0&id=684531a8&lang=scss&scoped=true&\"","export default class StatisticsCalc {\n  // 正規乱数 - ボックス＝ミュラー法\n  public static generateNormalRandom(mean: number, standardDeviation: number): number {\n    let normalRandom: number = Math.sqrt(-2 * Math.log(1 - Math.random()));\n    if (Math.round(Math.random()) === 1) {\n      normalRandom *= Math.sin(2 * Math.PI * Math.random());\n    } else {\n      normalRandom *= Math.cos(2 * Math.PI * Math.random());\n    }\n    normalRandom = (normalRandom * standardDeviation) + mean;\n    return normalRandom;\n  }\n\n  // 指定された標本の大きさを持つ正規乱数たちを作成\n  public static generateSamples(count: number, mean: number, standardDeviation: number): number[] {\n    let samples: number[] = [];\n    for (let i: number = 0; i < count; i++) {\n      samples.push(this.generateNormalRandom(mean, standardDeviation));\n    }\n    return samples;\n  }\n\n  // 相関関係にある正規乱数を作成\n  public static generateCorrelationalRandom(normalRandom: number, correlationCoefficient: number): number {\n    let y: number = this.generateNormalRandom(1, 1);\n    return correlationCoefficient * normalRandom + ((1 - correlationCoefficient ** 2) ** 0.5) * y;\n  }\n\n  // 指定された正規乱数たちと相関関係にある標準正規乱数たちを作成\n  public static generateCorrelationalSamples(normalRandoms: number[], correlationCoefficient: number): number[] {\n    let z: number[] = normalRandoms.map((value: number): number => {\n      return this.generateCorrelationalRandom(value, correlationCoefficient);\n    });\n    return this.standardizeSamples(z);\n  }\n\n  // 標本の標準化\n  public static standardizeSamples(samples: number[]): number[] {\n    let standardDeviation: number = this.calcStandardDeviation(samples);\n    let mean: number = this.calcMean(samples);\n    return samples.map((value: number): number => {\n      if (standardDeviation !== 0) {\n        return (value - mean) / standardDeviation;\n      } else {\n        return value - mean;\n      }\n    });\n  }\n\n  // 標準正規乱数の非標準化\n  public static unstandardizeSamples(samples: number[], mean: number, standardDeviation: number): number[] {\n    return samples.map((value: number): number => {\n      return (value * standardDeviation) + mean;\n    });\n  }\n\n  // 共分散\n  public static calcCovariance(sampleXs: number[], sampleYs: number[]): number {\n    let meanX: number = this.calcMean(sampleXs);\n    let meanY: number = this.calcMean(sampleYs);\n    let covariance: number = 0;\n    let length: number = this.calcMinimum([sampleXs.length, sampleYs.length]);\n    for (let i: number = 0; i < length; i++) {\n      covariance += (sampleXs[i] - meanX) * (sampleYs[i] - meanY);\n    }\n    covariance /= length;\n    return covariance;\n  }\n\n  // 相関係数\n  public static calcCorrelationCoefficient(sampleXs: number[], sampleYs: number[]): number {\n    let covariance: number = this.calcCovariance(sampleXs, sampleYs);\n    let standardDeviationX: number = this.calcStandardDeviation(sampleXs);\n    let standardDeviationY: number = this.calcStandardDeviation(sampleYs);\n    return covariance / (standardDeviationX * standardDeviationY);\n  }\n\n  // 切断正規乱数\n\n  // 並び替える\n  public static sortSamples(samples: number[]): number[] {\n    return samples.sort((a: number, b: number): number => {\n      let isBig: number = 0;\n      if (a < b) {\n        isBig = -1;\n      } else if (b < a) {\n        isBig = 1;\n      }\n      return isBig;\n    });\n  };\n\n  // 平均値\n  public static calcMean(samples: number[]): number {\n    return this.calcSum(samples) / samples.length;\n  };\n\n  // 中央値\n  public static calcMedian(samples: number[]): number {\n    let sortedSamples: number[] = this.sortSamples(samples);\n    let length: number = sortedSamples.length;\n    let median: number;\n    if (length % 2 === 0) {\n      median = (sortedSamples[(length / 2) - 1] + sortedSamples[(length / 2)]) / 2;\n    } else {\n      median = (sortedSamples[Math.floor(length / 2)]);\n    }\n    return median;\n  }\n\n  // 最頻値\n  public static calcMode(samples: number[]): number[] {\n    let count: number = 0;\n    let modes: number[] = [];\n    let sortedSamples: number[] = this.sortSamples(samples);\n    let pluralSamples: {\n      [sample: number]: number,\n    } = {};\n    let previous: number;\n    sortedSamples.forEach((value: number, index: number): void => {\n      if (previous === value) {\n        count++;\n        if (1 < count) {\n          pluralSamples[value] = count;\n        }\n      } else {\n        count = 1;\n      }\n      previous = value;\n    });\n    if (0 < Object.keys(pluralSamples).length) {\n      let counts: number[] = Object.values(pluralSamples);\n      let maxCount: number = this.calcMaximum(counts);\n      Object.keys(pluralSamples).forEach((key: string): void => {\n        if (pluralSamples[Number(key)] === maxCount) {\n          modes.push(Number(key));\n        }\n      })\n    }\n    return modes;\n  }\n\n  // 合計\n  public static calcSum(samples: number[]): number {\n    return samples.reduce((previous: number, current: number): number => {\n      return previous + current;\n    });\n  };\n\n  // 分散\n  public static calcVariance(samples: number[]): number {\n    let mean: number = this.calcMean(samples);\n    return samples.reduce((previous: number, current: number): number => {\n      return previous + ((current - mean) ** 2)\n    }) / samples.length;\n  }\n\n  // 標準偏差\n  public static calcStandardDeviation(samples: number[]): number {\n    return Math.sqrt(this.calcVariance(samples));\n  }\n\n  // 最大値\n  public static calcMaximum(samples: number[]): number {\n    return Math.max(...samples);\n  }\n\n  // 最小値\n  public static calcMinimum(samples: number[]): number {\n    return Math.min(...samples);\n  }\n\n  // kシグマ区間\n  public static calcKSigmaIntervals(samples: number[]): {\n    _1sigmaInterval: number,\n    _2sigmaInterval: number,\n    _3sigmaInterval: number,\n  } {\n    let kSigmaIntervalsCount: {\n      _1sigmaInterval: number,\n      _2sigmaInterval: number,\n      _3sigmaInterval: number,\n    } = {\n      _1sigmaInterval: 0,\n      _2sigmaInterval: 0,\n      _3sigmaInterval: 0,\n    }\n    let standardDeviation: number = this.calcStandardDeviation(samples);\n    let mean: number = this.calcMean(samples);\n    samples.forEach((value: number): void => {\n      if (-(standardDeviation * 3) + mean <= value\n        && value <= (standardDeviation * 3) + mean) {\n        kSigmaIntervalsCount._3sigmaInterval++;\n      }\n      if (-(standardDeviation * 2) + mean <= value\n        && value <= (standardDeviation * 2) + mean) {\n        kSigmaIntervalsCount._2sigmaInterval++;\n      }\n      if (-(standardDeviation * 1) + mean <= value\n        && value <= (standardDeviation * 1) + mean) {\n        kSigmaIntervalsCount._1sigmaInterval++;\n      }\n    });\n    let kSigmaIntervals: {\n      _1sigmaInterval: number,\n      _2sigmaInterval: number,\n      _3sigmaInterval: number,\n    } = {\n      _1sigmaInterval: kSigmaIntervalsCount._1sigmaInterval / samples.length,\n      _2sigmaInterval: kSigmaIntervalsCount._2sigmaInterval / samples.length,\n      _3sigmaInterval: kSigmaIntervalsCount._3sigmaInterval / samples.length,\n    }\n    return kSigmaIntervals;\n  }\n}","export default class MathUtil {\n  //範囲指定で整数値をランダムに取得\n  public static randomInt(min: number, max: number): number {\n    let standardMax = max - min + 1;\n    return min + Math.floor(Math.random() * standardMax);\n  }\n\n  //範囲指定で実数値をランダムに取得\n  public static randomFloat(min: number, max: number, digitCount: number): number {\n    return this.randomInt(min * (10 ** digitCount), max * (10 ** digitCount)) / (10 ** digitCount);\n  }\n\n  //小数部分の桁数\n  public static countDecimlPart(number: number): number {\n    let decimalPartCount: number = 0;\n    if (String(number).match(/(\\.)([0-9]+)$/)) {\n      let decimalPart: RegExpMatchArray | null = String(number).match(/(\\.)([0-9]+)$/);\n      if (decimalPart !== null) {\n        decimalPartCount = decimalPart[2].length;\n      }\n    }\n    return decimalPartCount;\n  }\n\n  //数字判定\n  public static isRealNumber(number: string): boolean {\n    return Boolean(number.match(/^(\\+|\\-)?([1-9][0-9]+|[0-9])(\\.[0-9]+)?$/));\n  }\n\n  //整数判定\n  public static isNaturalNumber(number: string): boolean {\n    return Boolean(number.match(/^(\\+|\\-)?[1-9]?[0-9]+$/));\n  }\n\n  //自然数判定\n  public static isNaturalNumberIncludingZero(number: string): boolean {\n    return Boolean(number.match(/^[1-9]?[0-9]+$/));\n  }\n\n  //0埋め\n  public static padZero(number: number, length: number): string {\n    return ('0'.repeat(length) + String(number)).slice(-length);\n  }\n\n  //小数点指定位置\n  public static toFixed(number: number, digitCount: number): string {\n    return number.toFixed(digitCount);\n  }\n\n  //3桁毎のカンマ\n  public static toLocaleString(number: number): string {\n    return number.toLocaleString();\n  }\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"c-button\"},[_c('button',{staticClass:\"button ripple\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.listenClick($event)}}},[_vm._v(\"\\n    \"+_vm._s(_vm.dataButtonText)+\"\\n    \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.dataPosition),expression:\"dataPosition\"}],staticClass:\"spread\",style:(_vm.dataPosition)})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Watch, Emit, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class CButton extends Vue {\n  // Props\n  @Prop() public buttonText!: string | undefined;\n\n  // Data\n  private dataButtonText: string | undefined = this.buttonText;\n  private dataPosition: string = '';\n\n  // Watch\n  @Watch('dataPosition')\n  onValueChange(newValue: string, oldValue: string): void {\n  }\n\n  // Emit\n  @Emit('clickButton')\n  private emitClickButton(): void {}\n\n  // Methods\n  private listenClick($event: Event): void {\n    const TIMEOUT: number = 512;\n    const RIPPLE_ELEM: HTMLInputElement = (<HTMLInputElement>(<any>$event).target);\n    let rippleWidth: number = RIPPLE_ELEM.offsetWidth;\n    let rippleRect: ClientRect | DOMRect = RIPPLE_ELEM.getBoundingClientRect();\n    let left: number = Number((<any>$event).pageX) - rippleRect.left - window.pageXOffset - (rippleWidth / 2);\n    let top: number = Number((<any>$event).pageY) - rippleRect.top - window.pageYOffset - (rippleWidth / 2);\n    let position: string = '';\n    position += 'left:' + left + 'px;';\n    position += 'top:' + top + 'px;';\n    position += 'width:' + rippleWidth + 'px;';\n    position += 'height:' + rippleWidth + 'px;';\n    this.dataPosition = position;\n    setTimeout((): void => {\n      this.dataPosition = '';\n    }, TIMEOUT);\n    this.emitClickButton();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CButton.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CButton.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CButton.vue?vue&type=template&id=722269f6&scoped=true&\"\nimport script from \"./CButton.vue?vue&type=script&lang=ts&\"\nexport * from \"./CButton.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CButton.vue?vue&type=style&index=0&id=722269f6&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"722269f6\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CorrelationChart.vue?vue&type=style&index=0&id=26813714&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CorrelationChart.vue?vue&type=style&index=0&id=26813714&lang=scss&scoped=true&\""],"sourceRoot":""}